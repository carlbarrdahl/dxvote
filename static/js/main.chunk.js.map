{"version":3,"sources":["utils/address.ts","utils/bignumber.ts","utils/enums.ts","utils/constants.ts","utils/date.ts","utils/helperHooks.ts","utils/helpers.ts","utils/number.ts","utils/permissions.ts","utils/proposals.ts","utils/scheme.ts","utils/cache.ts","assets/images/metamask.png","assets/images/walletconnect.png","provider/connectors.ts","provider/providerHooks.ts","stores/Provider.ts","services/ABIService.ts","provider/UncheckedJsonRpcSigner.ts","stores/actions/error.ts","stores/actions/actions.ts","stores/Transaction.ts","services/MulticallService.ts","services/DaoService.ts","services/EventsService.ts","services/IPFSService.ts","services/PinataService.ts","services/EtherscanService.ts","services/CoingeckoService.ts","services/InfuraService.ts","services/AlchemyService.ts","stores/Modal.ts","stores/ConfigStore.ts","stores/DaoStore.ts","stores/UserStore.ts","contracts/index.ts","cache/index.ts","stores/BlockchainStore.ts","services/CustomRpcService.ts","contexts/index.ts","components/Web3ReactManager/index.tsx","serviceWorker.ts","theme/index.tsx","assets/images/x.svg","components/common/ActiveButton.tsx","components/Modal/index.tsx","components/common/Link.tsx","components/common/Copy.tsx","components/AccountDetails/index.tsx","components/WalletModal/Option.tsx","components/WalletModal/index.tsx","components/common/Box.tsx","components/Web3ConnectStatus/index.tsx","assets/images/DXdao.svg","components/Header/index.tsx","components/Footer/index.tsx","PageRouter.tsx","pages/Proposals.tsx","components/common/Question.tsx","pages/NewProposal.tsx","components/common/BlockchainLink.tsx","pages/User.tsx","components/ConfirmVoteModal/index.tsx","pages/Proposal.tsx","components/FinanceInformation.tsx","components/SchemesInformation.tsx","components/GovernanceInformation.tsx","components/PermissionsInformation.tsx","pages/Info.tsx","pages/Configuration.tsx","pages/FAQ.tsx","pages/Forum.tsx","index.tsx","../node_modules/prismjs/components lazy /^/.//prism/-.*$/ groupOptions: {} namespace object"],"names":["shortenAddress","address","digits","isAddress","Error","substring","value","ethers","utils","getAddress","toLowerCase","BigNumber","config","EXPONENTIAL_AT","ROUNDING_MODE","ROUND_DOWN","DECIMAL_PLACES","FORMAT","groupSize","groupSeparator","decimalSeparator","Web3Errors","TXEvents","VoteDecision","WalletSchemeProposalState","VotingMachineProposalState","MAX_UINT","ZERO_HASH","ZERO_ADDRESS","ANY_ADDRESS","ANY_FUNC_SIGNATURE","ERC20_TRANSFER_SIGNATURE","ERC20_APPROVE_SIGNATURE","DEFAULT_TOKEN_DECIMALS","NETWORK_NAMES","defaultInfuraKey","process","REACT_APP_KEY_INFURA_API_KEY","DEFAULT_RPC_URLS","INFURA_NETWORK_NAMES","ALCHEMY_NETWORK_URLS","NETWORK_IDS","mainnet","rinkeby","xdai","arbitrum","arbitrumTestnet","localhost","NETWORK_ASSET_SYMBOL","timestampToDate","timestamp","moment","unix","toNumber","format","timeToTimestamp","to","toString","useInterval","callback","delay","savedCallback","useRef","useEffect","current","tick","id","setInterval","clearInterval","useCopyClipboard","timeout","useState","isCopied","setIsCopied","staticCopy","useCallback","text","didCopy","copy","hide","setTimeout","clearTimeout","usePrevious","ref","toCamelCaseString","length","replace","toUpperCase","bnum","val","scale","input","decimalPlaces","scalePow","scaleMul","pow","times","sleep","ms","Promise","resolve","parseCamelCase","parsed","getBlockchainLink","networkName","type","window","location","pathname","formatPercentage","decimals","useLowerLimit","lte","gt","formatCurrency","balance","toFormat","denormalizeBalance","normalizedBalance","normalizeBalance","amount","formatNumberValue","displayPrecision","truncateAt","roundDown","eq","toFixed","result","ROUND_UP","padToDecimalPlaces","formatBalance","precision","minDecimals","split","zerosToPad","pad","i","decodePermission","permission","canRegisterSchemes","hexString","lookup","a","b","c","d","e","f","A","B","C","D","E","F","ret","len","hexToBinary","canChangeConstraints","canUpgrade","canGenericCall","calculateStakes","thresholdConst","boostedProposals","preBoostedProposals","upstakes","downstakes","threshold","div","lt","recommendedThreshold","Number","stakeToBoost","minus","stakeToUnBoost","recommendedStakeToBoost","recommendedStakeToUnBoost","decodeProposalStatus","proposal","proposalStateChangeEvents","votingMachineParams","maxSecondsForExecution","autoBoost","schemeType","timeNow","queuedVotePeriodLimit","boostedVotePeriodLimit","preBoostedVotePeriodLimit","quietEndingPeriod","boostedPhaseTime","submittedTime","preBoostedPhaseTime","stateInVotingMachine","ExpiredInQueue","status","boostTime","finishTime","find","event","state","pendingAction","Executed","stateInScheme","Rejected","ExecutionSucceded","ExecutionTimeout","Submitted","Queued","plus","PreBoosted","shouldBoost","Boosted","QuietEndingPeriod","decodeSchemeParameters","rawParameters","queuedVoteRequiredPercentage","limitExponentValue","proposingRepReward","votersReputationLossRatio","minimumDaoBounty","daoBountyConst","activationTime","web3","require","MAX_BLOCKS_PER_EVENTS_FETCH","getEvents","contract","fromBlock","toBlock","eventsToGet","maxBlocksPerFetch","events","Math","min","from","console","debug","_address","getPastEvents","eventsFetched","getTimestampOfEvents","concat","error","message","trunc","blocksToLower","max","getRawEvents","contractAddress","topicsToGet","eth","getPastLogs","topics","blocksToFetch","timestamps","map","indexOf","blockNumber","push","totalLength","blocksToFetchBatch","splice","all","block","getBlock","blockInfo","number","l1BlockNumber","l2BlockNumber","sortEvents","_","orderBy","executeMulticall","multicall","calls","rawCalls","call","abi","encodeFunctionCall","_jsonInterface","method","name","methods","aggregate","returnData","decodedReturnData","callResult","decodeParameters","outputs","isNode","module","exports","descriptionHashToIPFSHash","descriptionHash","contentHash","getCodec","decode","ipfsHashToDescriptionHash","ipfsHash","fromIpfs","getSchemeTypeData","networkConfig","schemeAddress","daostack","schemeRegistrar","contractToCall","votingMachine","votingMachines","gen","newProposalTopics","voteParams","contributionReward","creationLogEncoding","competitionScheme","multicallSchemes","Object","keys","addresses","genericSchemes","dxSchemes","dxd","soliditySha3","ETH_NETWORKS","ETH_NETWORKS_IDS","network","DEFAULT_ETH_CHAIN_ID","web3ContextNames","isChainIdSupported","chainId","injected","InjectedConnector","supportedChainIds","getWalletConnectConnector","customRpcUrls","WalletConnectConnector","rpc","qrcode","useActiveWeb3React","useWeb3ReactCore","ContractType","ERRORS","schema","Avatar","Controller","VotingMachine","DXDVotingMachine","Reputation","WalletScheme","ERC20","PermissionRegistry","Multicall","ContributionReward","SchemeRegistrar","Redeemer","ABIService","context","this","contractType","data","library","providerStore","getActiveWeb3React","contractInterface","Interface","getAbi","functionSignature","functionName","functions","sighash","function","args","inputs","UncheckedJsonRpcSigner","signer","defineReadOnly","provider","transaction","sendUncheckedTransaction","then","hash","nonce","gasLimit","gasPrice","confirmations","wait","waitForTransaction","signMessage","errorCodeMapping","SIGNATURE_REJECTED","isKnownErrorCode","code","codeStr","getErrorByCode","UNKNOWN_ERROR","sendAction","params","action","sender","overrides","preLog","promiEvent","PromiEvent","send","once","emit","TX_HASH","receipt","RECEIPT","confNumber","CONFIRMATION","on","TX_ERROR","INVARIANT","FINALLY","catch","FetchCode","ProviderStore","accounts","defaultAccount","web3Contexts","supportedNetworks","chainData","activeChainId","activeFetchLoop","activeAccount","fetchUserBlockchainData","web3React","account","transactionStore","checkPendingTransactions","currentBlockNumber","makeObservable","observable","setCurrentBlockNumber","setActiveAccount","blocknumber","getCurrentBlockNumber","newBlockNumber","oldBlockNumber","getSigner","signerAccount","Contract","blockData","date","Date","ContextNotFound","BlockchainActionNoAccount","BlockchainActionNoChainId","getContract","addTransactionRecord","sendTransaction","MulticallService","activeCalls","activeCallsRaw","resetActiveCalls","configStore","multi","getNetworkContracts","response","results","forEach","addCall","addContractCall","abiService","iface","encoded","encode","DaoService","createProposal","vote","approveVotingMachineToken","stake","execute","redeem","callData","controller","avatarAddress","avatar","genericCall","encodeABI","fullDescription","recommendedCalls","getRecommendedCalls","controllerCallDecoded","decodeCall","asset","recommendedCallUsed","recommendedCall","encodeFunctionSignature","callParameters","param","__length__","decodedCallText","decodeText","paramIndex","replaceAll","toName","JSON","stringify","scheme","proposalData","networkContracts","sendRawTransaction","reputationChange","ethValue","tokenValue","externalToken","beneficiary","titleText","decision","proposalId","daoStore","getVotingMachineOfProposal","votingMachineAddress","getCache","token","redeemerAddress","EventsService","activeEventsCalls","eventName","log","activeEventCall","addEventCall","CID","IPFSService","ipfs","started","IPFS","create","content","add","cid","string","pin","get","file","path","chunk","axios","url","PinataService","auth","ipfsHashes","pinataApiKey","getLocalConfig","pinata","headers","Authorization","hashToPin","pinataMetadata","getActiveChainName","keyValues","EtherscanService","etherscanAPIKey","etherscan","CoingeckoService","prices","tokens","getTokensToFetchPrice","tokenAddresses","pricesResponse","tokenAddress","toChecksumAddress","InfuraService","infuraAPIKey","infura","jsonrpc","reduce","prevUrls","infuraNetworkName","infuraUrl","AlchemyService","alchemyAPIKey","alchemy","networkUrl","alchemyUrl","TransactionStore","txRecords","filter","isTxPending","currentBlock","isStale","getTransactionReceipt","blockNumberChecked","SUCCESS","txHash","record","undefined","records","txRecord","ModalStore","walletModalVisible","toggleWalletModal","setWalletModalVisible","visible","appConfig","ConfigStore","darkMode","toggleDarkMode","activeWeb3","localStorage","getItem","parse","rpcType","pinOnStart","setItem","cache","tokenInFile","contracts","fetchPrice","proposalTemplates","networkTokens","getTokensOfNetwork","defaultValue","permissionRegistry","dxdVestingFactory","dxDaoNFT","networkToken","symbol","DaoStore","daoCache","setCache","unparsedCache","daoInfo","ethBalance","repEvents","repEvent","schemes","callPermissions","proposals","values","currentBoostedVotePeriodLimit","daoBountyRemain","daoBounty","totalStakes","confidenceThreshold","secondsFromTimeOutTillExecuteBoosted","positiveVotes","negativeVotes","preBoostedPositiveVotes","preBoostedNegativeVotes","positiveStakes","negativeStakes","votingParameters","paramsHash","unparsedParams","newNetworkCache","parseCache","_schemeName","_schemeAddress","getProposal","schemeInfo","getSchemeProposals","users","totalPositiveVotes","totalPositiveVotesAmount","totalNegativeVotes","totalNegativeVotesAmount","totalPositiveStakes","totalPositiveStakesAmount","totalNegativeStakes","totalNegativeStakesAmount","totalProposalsCreated","repUsers","repTotalSupply","rep","userAddress","sortBy","o","unshift","votes","voter","correctVotes","wrongVotes","correctStakes","wrongStakes","totalVoted","totalStaked","score","winningVote","stakes","staker","proposalCreator","proposer","getRepAt","totalSupply","creationEvent","tx","ranking","key","assign","allProposals","proposalEvents","getVotesOfProposal","getStakesOfProposal","redeems","getRedeemsOfProposal","redeemsRep","getRedeemsRepOfProposal","redeemsDaoBounty","getRedeemsDaoBountyOfProposal","stateChanges","getProposalStateChanges","totalRep","history","transactionIndex","logIndex","userRep","repBalance","repPercentage","votingMachineName","redeemRep","redeemDaoBounty","newProposalEvents","pickBy","newProposal","userEvents","getUserEvents","redeemsLeft","bounty","voteParameters","getVotingParametersOfProposal","votingMachineOfProposal","proposalStateChanges","proposalStateChange","getScheme","assetLimits","controllerAddress","assetAddress","callAllowance","getCallAllowance","fromTime","atBlock","inL2","UserStore","userInfo","dxdBalance","dxdApproved","genBalance","genApproved","update","callsToExecute","callsResponse","DxController","DxAvatar","DxReputation","GenesisProtocol","getContracts","reputation","gen2","getUpdatedCache","networkCache","retry","updateDaoInfo","updateReputationEvents","networkCacheUpdated","updateVotingMachine","updateSchemes","updatePermissionRegistry","updateProposals","tokenBalances","reputationEvent","signature","returnValues","_to","_amount","transactionHash","_from","newVotingMachineEvents","votingMachineEventsInCache","votingMachineParamsHash","votingMachineEvent","proposalCreated","findIndex","newProposalEvent","_proposalId","_organization","_proposer","paramHash","_paramsHash","_proposalState","preBoosted","_voter","_vote","_reputation","_staker","amount4Bounty","_beneficiary","permissionRegistryEvent","eventValues","controllerEvents","controllerEventsIndex","controllerEvent","_scheme","schemeTypeData","WalletSchemeJSON","walletSchemeContract","callsResponse1","permissions","schemeName","maxRepPercentageChange","callsResponse2","boostedVoteRequiredPercentage","registered","proposalIds","_sender","avatarAddressEncoded","encodeParameter","schemeEvents","schemeEventsBatchs","schemeEventsBatchsIndex","slice","schemeEvent","decodeParameter","ContributionRewardJSON","votingMachineProposalInfo","proposalStatusWithVotes","proposalTimes","schemeProposalInfo","title","transactionReceipt","newProposalTopic","logs","decodedProposer","creationLogDecoded","_descriptionHash","_parametersHash","_permissions","_reputationChange","_rewards","_externalToken","_data","_value","callIndex","_contractsToCall","_callsData","_values","daoRedeemItsWinnings","retryIntent","proposalIndex","request","proposalShouldBoost","BlockchainStore","initialLoadComplete","contractStorage","eventsStorage","updateStore","fetchData","multicallService","index","lastFetched","executeCalls","multicallResponse","reduceMulticall","entry","has","emitions","entries","oldEntry","reset","active","ipfsService","caches","open","match","getBlockNumber","newestCacheIpfsHash","getCacheIPFSHash","baseCacheIpfsHash","getContentFromIPFS","lastCheckedBlockNumber","tokensBalancesCalls","addCalls","executeAndUpdateMulticall","tokensBalancesCall","blockchainStore","getCachedValue","put","Response","CustomRpcService","customRpcUrl","rootContext","React","createContext","modalStore","userStore","daoService","eventsService","pinataService","etherscanService","coingeckoService","infuraService","alchemyService","customRpcService","useContext","Web3ReactManager","children","web3ContextInjected","useWeb3React","networkActive","networkError","setWeb3Context","triedEager","activate","tried","setTried","isAuthorized","isMobile","ethereum","useEagerConnect","reload","suppress","handleChainChanged","handleAccountsChanged","handleNetworkChanged","removeListener","useInactiveListener","BlurWrapper","styled","OverBlurModal","className","Boolean","hostname","MEDIA_WIDTHS","upToSmall","upToMedium","upToLarge","mediaWidthTemplates","accumulator","size","css","white","ThemeProvider","setDarkMode","theme","_line","_line2","black","textColor","greyText","backgroundColor","activeButtonBackground","modalBackground","inputBackground","placeholderGray","shadowColor","borderStyle","concreteGray","mercuryGray","silverGray","chaliceGray","doveGray","mineshaftGray","activeGray","buttonOutlineGrey","tokenRowHover","charcoalBlack","zumthorBlue","malibuBlue","royalBlue","loadingBlue","wisteriaPurple","salmonRed","pizazzOrange","warningYellow","bodyText","connectedGreen","metaMaskOrange","textHover","buttonFaded","mediaWidth","flexColumnNoWrap","flexRowNoWrap","flexRowWrap","GlobalStyle","createGlobalStyle","Button","ButtonWithRouter","withRouter","route","onClick","ActiveButton","_excluded","_extends","target","arguments","source","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgX","_ref","svgRef","titleId","props","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","ForwardRef","Wrapper","Backdrop","StyledModal","Header","HeaderText","CloseIcon","CloseColor","Close","Content","Footer","ModalButton","Modal","isOpen","onDismiss","header","confirmText","cancelText","onConfirm","onCancel","hideHeader","modal","variant","ReactDOM","createPortal","document","body","Link","attrs","rel","CopyIcon","TransactionStatusText","span","CopyHelper","toCopy","setCopied","OptionButton","UpperSection","InfoCard","AccountGroupingRow","AccountSection","YourAccount","GreenCircle","CircleWrapper","AccountControl","ConnectButtonRow","StyledLink","WalletAction","AccountDetails","openOptions","connector","close","href","button","clickable","transparentize","OptionCard","OptionCardLeft","OptionCardClickable","disabled","color","SubHeader","IconWrapper","Option","link","icon","subheader","src","alt","HeaderRow","ContentWrapper","Blurb","OptionGrid","HoverText","WALLET_VIEWS","WalletModal","observer","walletView","setWalletView","connectionErrorMessage","setConnectionErrorMessage","walletModalOpen","activePrevious","connectorPrevious","tryActivation","getOptions","isMetamask","isMetaMask","rpcUrls","preferredRpc","getRpcUrls","wallets","INJECTED","iconName","description","primary","METAMASK","metamaskIcon","WALLETCONNECT","walletConnectIcon","option","mobile","mobileOnly","style","Box","WrongNetworkButton","AccountButton","ConnectButton","Web3ConnectStatus","display","fontSize","NavWrapper","NavSection","MenuItem","ItemBox","NavItem","cursor","getUserInfo","parseFloat","Web3","fromWei","dxdaoIcon","margin","FooterWrapper","LeftFooter","FooterItem","FooterDivider","useHistory","PageRouterWrapper","LoadingBox","PageRouter","useLocation","start","isAuthenticated","providerActive","loadPrices","updatePinList","ProposalsTableWrapper","ProposalsFilter","select","ProposalsNameFilter","ProposalTableHeaderActions","ProposalTableHeaderWrapper","TableHeader","align","TableRowsWrapper","TableRow","TableCell","weight","wrapText","ProposalsPage","getAllSchemes","stateFilter","setStateFilter","schemeFilter","setSchemeFilter","titleFilter","setTitleFilter","setProposals","getAllProposals","cacheProposal","getProposalStatus","sortedProposals","sort","flexDirection","justifyContent","placeholder","onChange","newValue","positiveStake","negativeStake","repAtCreation","positiveVotesPercentage","negativeVotesPercentage","timeToBoost","timeToFinish","votingMachineTokenName","voted","staked","created","textDecoration","minWidth","textAlign","flex","QuestionLink","QuestionIcon","question","NewProposalFormWrapper","PlaceHolders","TitleInput","TextActions","CallRow","RemoveButton","TextInput","SelectInput","NewProposalPage","schemeInLocalStorage","networkAssetSymbol","defaultSchemeToUse","schemeToUse","setSchemeToUse","setTitleText","setIpfsHash","descriptionText","setDescriptionText","callsInStorage","dataValues","callInStorage","Array","functionParams","setCalls","repChange","contributionRewardCalls","setContributionRewardCalls","useReducer","x","forceUpdate","submitionState","setSubmitionState","errorMessage","setErrorMessage","getProposalTemplates","getSchemeRecommendedCalls","transferLimits","allowedToCall","allowedPermission","uploadToIPFS","bodyTextToUpload","tags","pinataPin","ipfsPin","uploaded","getContent","ipfsContent","callToController","callType","callDataFunctionSignature","callDataFunctionParamsEncoded","functionParam","encodeParameters","encodeControllerGenericCall","toWei","txerror","setCallsInState","changeCallType","allowedFunctions","onToSelectChange","toAddress","onFunctionSelectChange","onFunctionParamsChange","onContributionRewardValueChange","setContributionRewardCallsInState","Question","template","preview","minHeight","maxHeight","commands","bold","italic","strikethrough","hr","divider","quote","image","unorderedListCommand","orderedListCommand","checkedListCommand","Markdown","borderRadius","border","padding","allowedCall","allowedCallIndex","selectedFunction","allowedFunction","allowedFunc","allowedFuncIndex","paddingRight","marginTop","funcParam","funcParamIndex","alignItems","AddressLink","BlockchainLink","onlyIcon","end","formarText","InfoBox","UserPage","getUser","getUserRedeemsLeft","historyEvent","borderBottom","flexColumnWrap","ConfirmVoteModal","voteDecision","positive","negative","toAdd","ProposalInformationWrapper","InfoSidebarBox","ProposalInfoSection","ProposalInfoBox","SidebarDivider","SidebarRow","AmountInput","AmountBadge","ActionButton","ProposalPage","votingMachineUsed","setDecision","advancedCalls","setAdvancedCalls","votePercentage","setVotePercentage","stakeAmount","setStakeAmount","proposalDescription","setProposalDescription","proposalTitle","setProposalTitle","votingMachineTokenApproved","getProposalEvents","votedAmount","positiveVotesCount","negativeVotesCount","stakedAmount","positiveStakesCount","negativeStakesCount","userRepAtProposalCreation","totalRepAtProposalCreation","repPercentageAtCreation","executionTimeoutTime","proposalCallTexts","p","decodeWalletSchemeCall","getAmountOfProposalsPreBoostedInScheme","submitStake","executeProposal","finishTimeReached","lineBreak","whiteSpace","proposalCallText","dangerouslySetInnerHTML","__html","autoStart","redeemContributionReward","contributionRewardRedeemer","voteEvent","repAmount","step","maxWidth","stakeEvent","borderTop","FinanceInfoWrapper","FinanceTableHeaderWrapper","FinanceInformation","getDaoInfo","getPrices","assets","total","tokenData","getTokenData","indexOfAssetInTotal","assetHolder","assetsOfHolder","usd","SchemesInformationWrapper","SchemesInformation","schemeProposals","votingMachineParameters","getVotingParametersOfScheme","duration","humanize","GovernanceInfoWrapper","GovernanceTableHeaderWrapper","GovernanceInformation","weiNumber","governanceInfo","getGovernanceInfo","chartType","loader","options","legend","pieSliceText","pieStartAngle","sliceVisibilityThreshold","hAxis","vAxis","user","PermissionsInfoWrapper","TableHeaderWrapper","PermissionsInformation","rawPermissions","addressesNames","functionNames","fromAddress","InfoPageWrapper","InfoNavigation","InfoPage","searchPath","search","Row","InputBox","Dropdown","ConfigPage","etherscanApiStatus","setEtherscanApiStatus","pinataKeyStatus","setPinataKeyStatus","infuraKeyStatus","setInfuraKeyStatus","alchemyKeyStatus","setAlchemyKeyStatus","customRpcUrlStatus","setCustomRpcUrlStatus","localConfig","setLocalConfig","onApiKeyValueChange","clear","delete","serviceName","checked","FAQPage","questionId","FAQBox","querySelectorAll","scrollIntoView","daoAddresses","FAQBody","ForumPage","loading","setLoading","addEventListener","lists","list","getAttribute","frameId","random","substr","removeAttribute","j","attributes","attr","iframe","createElement","join","frameBorder","scrolling","appendChild","category","updateLocale","relativeTime","s","m","h","Web3ProviderInjected","createWeb3ReactRoot","Root","getLibrary","exact","Proposals","Forum","FAQ","NewProposal","Info","User","Proposal","render","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackAsyncContext","req","__webpack_require__","ids","t"],"mappings":"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,GAED,kBAAmB,CAClB,OACA,GAED,mBAAoB,CACnB,OACA,GAED,sBAAuB,CACtB,OACA,GAED,uBAAwB,CACvB,OACA,GAED,0BAA2B,CAC1B,OACA,GAED,2BAA4B,CAC3B,OACA,GAED,8BAA+B,CAC9B,OACA,GAED,cAAe,CACd,OACA,GAED,iBAAkB,CACjB,OACA,GAED,kBAAmB,CAClB,OACA,GAED,qBAAsB,CACrB,OACA,GAED,eAAgB,CACf,OACA,GAED,kBAAmB,CAClB,OACA,GAED,mBAAoB,CACnB,OACA,GAED,sBAAuB,CACtB,OACA,GAED,aAAc,CACb,OACA,IAED,gBAAiB,CAChB,OACA,IAED,iBAAkB,CACjB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,iBAAkB,CACjB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,yBAA0B,CACzB,OACA,IAED,4BAA6B,CAC5B,OACA,IAED,cAAe,CACd,OACA,IAED,iBAAkB,CACjB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,yBAA0B,CACzB,OACA,IAED,0BAA2B,CAC1B,OACA,IAED,6BAA8B,CAC7B,OACA,IAED,cAAe,CACd,OACA,IAED,iBAAkB,CACjB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,yBAA0B,CACzB,OACA,IAED,eAAgB,CACf,OACA,IAED,kBAAmB,CAClB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,0BAA2B,CAC1B,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,yBAA0B,CACzB,OACA,IAED,iBAAkB,CACjB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,yBAA0B,CACzB,OACA,IAED,4BAA6B,CAC5B,OACA,IAED,iBAAkB,CACjB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,eAAgB,CACf,OACA,IAED,kBAAmB,CAClB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,gBAAiB,CAChB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,gBAAiB,CAChB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,iBAAkB,CACjB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,gBAAiB,CAChB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,cAAe,CACd,OACA,IAED,iBAAkB,CACjB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,2BAA4B,CAC3B,OACA,IAED,uBAAwB,CACvB,OACA,IAED,0BAA2B,CAC1B,OACA,IAED,2BAA4B,CAC3B,OACA,IAED,8BAA+B,CAC9B,OACA,IAED,cAAe,CACd,OACA,IAED,iBAAkB,CACjB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,YAAa,CACZ,OACA,IAED,eAAgB,CACf,OACA,IAED,gBAAiB,CAChB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,cAAe,CACd,OACA,IAED,iBAAkB,CACjB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,gBAAiB,CAChB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,yBAA0B,CACzB,OACA,IAED,gBAAiB,CAChB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,0BAA2B,CAC1B,OACA,IAED,2BAA4B,CAC3B,OACA,IAED,8BAA+B,CAC9B,OACA,IAED,oBAAqB,CACpB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,2BAA4B,CAC3B,OACA,IAED,eAAgB,CACf,OACA,IAED,kBAAmB,CAClB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,cAAe,CACd,OACA,IAED,iBAAkB,CACjB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,yBAA0B,CACzB,OACA,IAED,iBAAkB,CACjB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,cAAe,CACd,OACA,IAED,iBAAkB,CACjB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,cAAe,CACd,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,yBAA0B,CACzB,OACA,IAED,4BAA6B,CAC5B,OACA,IAED,iBAAkB,CACjB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,iBAAkB,CACjB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,YAAa,CACZ,OACA,IAED,eAAgB,CACf,OACA,IAED,gBAAiB,CAChB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,eAAgB,CACf,OACA,IAED,kBAAmB,CAClB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,cAAe,CACd,OACA,IAED,iBAAkB,CACjB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,gBAAiB,CAChB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,eAAgB,CACf,OACA,IAED,kBAAmB,CAClB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,iBAAkB,CACjB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,2BAA4B,CAC3B,OACA,IAED,4BAA6B,CAC5B,OACA,IAED,+BAAgC,CAC/B,OACA,IAED,iBAAkB,CACjB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,8BAA+B,CAC9B,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,+BAAgC,CAC/B,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,mCAAoC,CACnC,OACA,KAED,sCAAuC,CACtC,OACA,KAED,uCAAwC,CACvC,OACA,KAED,0CAA2C,CAC1C,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,aAAc,CACb,OACA,KAED,gBAAiB,CAChB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,aAAc,CACb,OACA,KAED,gBAAiB,CAChB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,YAAa,CACZ,OACA,KAED,eAAgB,CACf,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,6BAA8B,CAC7B,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,6BAA8B,CAC7B,OACA,KAED,gCAAiC,CAChC,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,aAAc,CACb,OACA,KAED,gBAAiB,CAChB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,8BAA+B,CAC9B,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,8BAA+B,CAC9B,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,mBAAoB,CACnB,QAED,sBAAuB,CACtB,QAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,iBAAkB,CACjB,QAED,4BAA6B,CAC5B,OACA,KAED,+BAAgC,CAC/B,OACA,KAED,gCAAiC,CAChC,OACA,KAED,mCAAoC,CACnC,OACA,KAED,oBAAqB,CACpB,QAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,6BAA8B,CAC7B,OACA,KAED,8BAA+B,CAC9B,OACA,KAED,iCAAkC,CACjC,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,aAAc,CACb,OACA,KAED,gBAAiB,CAChB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,cAAe,CACd,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,YAAa,CACZ,OACA,KAED,eAAgB,CACf,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,YAAa,CACZ,OACA,KAED,eAAgB,CACf,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,6BAA8B,CAC7B,OACA,KAED,gCAAiC,CAChC,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,+BAAgC,CAC/B,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,wBAAyB,CACxB,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,+BAAgC,CAC/B,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,+BAAgC,CAC/B,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,8BAA+B,CAC9B,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,8BAA+B,CAC9B,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,MAGF,SAASotC,EAAoBC,GAC5B,IAAIC,EAAoBzzB,EAAE7Z,EAAKqtC,GAC9B,OAAOh3C,QAAQC,UAAUqR,MAAK,WAC7B,IAAIvO,EAAI,IAAI9I,MAAM,uBAAyB+8C,EAAM,KAEjD,MADAj0C,EAAEmP,KAAO,mBACHnP,KAIR,IAAIm0C,EAAMvtC,EAAIqtC,GAAMj5C,EAAKm5C,EAAI,GAC7B,OAAOl3C,QAAQkK,IAAIgtC,EAAI3qB,MAAM,GAAG5iB,IAAIstC,EAAoBl0C,IAAIuO,MAAK,WAChE,OAAO2lC,EAAoBE,EAAEp5C,EAAI,MAGnCg5C,EAAoBvpC,KAAO,WAC1B,OAAOD,OAAOC,KAAK7D,IAEpBotC,EAAoBh5C,GAAK,OACzB+N,EAAOC,QAAUgrC,G","file":"static/js/main.chunk.js","sourcesContent":["import { ethers, utils } from 'ethers';\r\n\r\nexport function shortenAddress(address, digits = 4) {\r\n  if (!isAddress(address)) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`);\r\n  }\r\n  return `${address.substring(0, digits + 2)}...${address.substring(\r\n    42 - digits\r\n  )}`;\r\n}\r\n\r\nexport function isAddress(value) {\r\n  try {\r\n    return ethers.utils.getAddress(value.toLowerCase());\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function toChecksum(address) {\r\n  return utils.getAddress(address);\r\n}\r\n\r\nexport function toAddressStub(address) {\r\n  const start = address.slice(0, 5);\r\n  const end = address.slice(-3);\r\n  return `${start}...${end}`;\r\n}\r\n","import { BigNumber } from 'bignumber.js';\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: [-100, 100],\r\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\r\n  DECIMAL_PLACES: 18,\r\n  FORMAT: {\r\n    groupSize: 3,\r\n    groupSeparator: ' ',\r\n    decimalSeparator: '.',\r\n  },\r\n});\r\n\r\nexport { BigNumber };\r\n","export enum Web3Errors {\r\n  UNKNOWN_ERROR,\r\n  SIGNATURE_REJECTED,\r\n}\r\nexport enum TXEvents {\r\n  TX_HASH = 'txhash',\r\n  RECEIPT = 'receipt',\r\n  CONFIRMATION = 'confirmation',\r\n  TX_ERROR = 'txerror',\r\n  FINALLY = 'finally',\r\n  INVARIANT = 'invariant',\r\n}\r\n\r\nexport enum VoteDecision {\r\n  None,\r\n  YES,\r\n  NO,\r\n}\r\n\r\nexport enum WalletSchemeProposalState {\r\n  None,\r\n  Submitted,\r\n  Rejected,\r\n  ExecutionSucceded,\r\n  ExecutionTimeout,\r\n}\r\n\r\nexport enum VotingMachineProposalState {\r\n  None,\r\n  ExpiredInQueue,\r\n  Executed,\r\n  Queued,\r\n  PreBoosted,\r\n  Boosted,\r\n  QuietEndingPeriod,\r\n}\r\n","export const MAX_UINT =\r\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\r\nexport const ZERO_HASH =\r\n  '0x0000000000000000000000000000000000000000000000000000000000000000';\r\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000';\r\nexport const ANY_ADDRESS = '0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa';\r\nexport const ANY_FUNC_SIGNATURE = '0xaaaaaaaa';\r\nexport const ERC20_TRANSFER_SIGNATURE = '0xa9059cbb';\r\nexport const ERC20_APPROVE_SIGNATURE = '0x095ea7b3';\r\nexport const DEFAULT_TOKEN_DECIMALS = 18;\r\n\r\nexport const NETWORK_NAMES = {\r\n  '1': 'mainnet',\r\n  '4': 'rinkeby',\r\n  '100': 'xdai',\r\n  '42161': 'arbitrum',\r\n  '421611': 'arbitrumTestnet',\r\n  '1337': 'localhost',\r\n};\r\n\r\nconst defaultInfuraKey = process.env.REACT_APP_KEY_INFURA_API_KEY;\r\nexport const DEFAULT_RPC_URLS = {\r\n  '1': `https://mainnet.infura.io/v3/${defaultInfuraKey}`,\r\n  '4': `https://rinkeby.infura.io/v3/${defaultInfuraKey}`,\r\n  '100': 'https://rpc.xdaichain.com/',\r\n  '42161': `https://arbitrum-mainnet.infura.io/v3/${defaultInfuraKey}`,\r\n  '421611': `https://arbitrum-rinkeby.infura.io/v3/${defaultInfuraKey}`,\r\n};\r\n\r\nexport const INFURA_NETWORK_NAMES = {\r\n  '1': 'mainnet',\r\n  '4': 'rinkeby',\r\n  '42161': 'arbitrum-mainnet',\r\n  '421611': 'arbitrum-rinkeby',\r\n};\r\n\r\nexport const ALCHEMY_NETWORK_URLS = {\r\n  '1': 'eth-mainnet.alchemyapi.io',\r\n  '4': 'eth-rinkeby.alchemyapi.io',\r\n  '42161': 'arb-mainnet.g.alchemy.com',\r\n  '421611': 'arb-rinkeby.g.alchemy.com',\r\n};\r\n\r\nexport const NETWORK_IDS = {\r\n  mainnet: 1,\r\n  rinkeby: 4,\r\n  xdai: 100,\r\n  arbitrum: 42161,\r\n  arbitrumTestnet: 421611,\r\n  localhost: 1337,\r\n};\r\n\r\nexport const NETWORK_ASSET_SYMBOL = {\r\n  mainnet: 'ETH',\r\n  rinkeby: 'ETH',\r\n  xdai: 'XDAI',\r\n  arbitrum: 'ETH',\r\n  arbitrumTestnet: 'ETH',\r\n  localhost: 'ETH',\r\n};\r\n","import moment from 'moment';\r\nimport { BigNumber } from './bignumber';\r\n\r\nexport const formatDate = (date: Date) => {\r\n  return moment(date).format('DD.MM - HH:mm');\r\n};\r\n\r\nexport const timestampToDate = (timestamp: BigNumber) => {\r\n  return moment.unix(timestamp.toNumber()).format('YYYY.DD.MM - HH:mm');\r\n};\r\n\r\nexport const timeToTimestamp = (timestamp: BigNumber) => {\r\n  if (timestamp.toNumber() > moment().unix())\r\n    return moment().to(moment.unix(timestamp.toNumber())).toString();\r\n  else return '';\r\n};\r\n\r\nexport const addZero = value => {\r\n  return value > 9 ? value : `0${value}`;\r\n};\r\n","import { useCallback, useEffect, useRef, useState } from 'react';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest function.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      // @ts-ignore\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      tick();\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    } else {\r\n      return null;\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\nexport function useCopyClipboard(\r\n  timeout = 500\r\n  // @ts-ignore\r\n): [S, Dispatch<SetStateAction<S>>] {\r\n  const [isCopied, setIsCopied] = useState(false);\r\n\r\n  const staticCopy = useCallback(text => {\r\n    const didCopy = copy(text);\r\n    setIsCopied(didCopy);\r\n  }, []);\r\n  // @ts-ignore\r\n  useEffect(() => {\r\n    if (isCopied) {\r\n      const hide = setTimeout(() => {\r\n        setIsCopied(false);\r\n      }, timeout);\r\n\r\n      return () => {\r\n        clearTimeout(hide);\r\n      };\r\n    }\r\n  }, [isCopied, setIsCopied, timeout]);\r\n\r\n  return [isCopied, staticCopy];\r\n}\r\n\r\n// modified from https://usehooks.com/usePrevious/\r\nexport function usePrevious(value) {\r\n  // The ref object is a generic container whose current property is mutable ...\r\n  // ... and can hold any value, similar to an instance property on a class\r\n  const ref = useRef();\r\n\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]); // Only re-run if value changes\r\n\r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current;\r\n}\r\n","import { utils } from 'ethers';\r\nimport { BigNumber } from './bignumber';\r\nimport { MAX_UINT } from './constants';\r\n\r\nexport function toCamelCaseString(text: string): string {\r\n  if (text.length > 0) return text.replace(/^./, text[0].toUpperCase());\r\n  else return '';\r\n}\r\n\r\nexport function bnum(\r\n  val: string | number | utils.BigNumber | BigNumber\r\n): BigNumber {\r\n  return new BigNumber(val.toString());\r\n}\r\n\r\nexport function scale(input: BigNumber, decimalPlaces: number): BigNumber {\r\n  const scalePow = new BigNumber(decimalPlaces.toString());\r\n  const scaleMul = new BigNumber(10).pow(scalePow);\r\n  return input.times(scaleMul);\r\n}\r\n\r\nexport function setPropertyToMaxUintIfEmpty(value?): string {\r\n  if (!value || value === 0 || value === '') {\r\n    value = MAX_UINT.toString();\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function setPropertyToZeroIfEmpty(value?): string {\r\n  if (!value || value === '') {\r\n    value = '0';\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function hasMaxApproval(amount: BigNumber): boolean {\r\n  return amount.gte(bnum(bnum(MAX_UINT).div(2).toString()));\r\n}\r\n\r\nexport function isEmpty(str: string): boolean {\r\n  return !str || 0 === str.length;\r\n}\r\n\r\nexport function roundValue(value, decimals = 4): string {\r\n  const decimalPoint = value.indexOf('.');\r\n  if (decimalPoint === -1) {\r\n    return value;\r\n  }\r\n  return value.slice(0, decimalPoint + decimals + 1);\r\n}\r\n\r\nexport function str(value: any): string {\r\n  return value.toString();\r\n}\r\n\r\nexport function sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport function parseCamelCase(text) {\r\n  const parsed = text.replace(/([a-z])([A-Z])/g, '$1 $2');\r\n  return parsed[0].toUpperCase() + parsed.substring(1);\r\n}\r\n\r\nexport function getBlockchainLink(text, networkName, type) {\r\n  switch (type) {\r\n    case 'user':\r\n      return `${window.location.pathname}#/user/${text}`;\r\n    case 'address':\r\n      if (networkName === 'arbitrum')\r\n        return `https://explorer.arbitrum.io/#/address/${text}`;\r\n      else if (networkName === 'arbitrumTestnet')\r\n        return `https://rinkeby-explorer.arbitrum.io/#/address/${text}`;\r\n      else if (networkName === 'mainnet')\r\n        return `https://etherscan.io/address/${text}`;\r\n      else if (networkName === 'xdai')\r\n        return `https://blockscout.com/xdai/mainnet/address/${text}`;\r\n      else return `https://${networkName}.etherscan.io/address/${text}`;\r\n    default:\r\n      if (networkName === 'arbitrum')\r\n        return `https://explorer.arbitrum.io/#/tx/${text}`;\r\n      else if (networkName === 'arbitrumTestnet')\r\n        return `https://rinkeby-explorer.arbitrum.io/#/tx/${text}`;\r\n      else if (networkName === 'mainnet')\r\n        return `https://etherscan.io/tx/${text}`;\r\n      else if (networkName === 'xdai')\r\n        return `https://blockscout.com/xdai/mainnet/tx/${text}`;\r\n      else return `https://${networkName}.etherscan.io/tx/${text}`;\r\n  }\r\n}\r\n","import { BigNumber } from './bignumber';\r\nimport { bnum, DEFAULT_TOKEN_DECIMALS, scale } from './index';\r\n\r\nexport function formatFee(fee: BigNumber) {\r\n  return fee.times(100).toString() + '%';\r\n}\r\n\r\nexport function formatPercentage(\r\n  value: BigNumber,\r\n  decimals: number,\r\n  useLowerLimit = true\r\n): string {\r\n  if (\r\n    value.times(100).decimalPlaces(decimals).lte(0.1) &&\r\n    value.gt(0) &&\r\n    useLowerLimit\r\n  ) {\r\n    return '<0.1%';\r\n  }\r\n  return `${value.times(100).decimalPlaces(decimals).toString()}%`;\r\n}\r\n\r\nexport function fromPercentage(value: BigNumber | string): BigNumber {\r\n  const bn = bnum(value.toString());\r\n  return bn.div(100);\r\n}\r\n\r\nexport function toPercentage(value: BigNumber | string): BigNumber {\r\n  const bn = bnum(value.toString());\r\n  return bn.times(100);\r\n}\r\n\r\nexport const normalizePriceValues = (\r\n  inputValue: BigNumber,\r\n  outputValue: BigNumber\r\n): {\r\n  normalizedInput: BigNumber;\r\n  normalizedOutput: BigNumber;\r\n} => {\r\n  const multiplier = bnum(1).div(inputValue);\r\n  return {\r\n    normalizedInput: bnum(1),\r\n    normalizedOutput: outputValue.times(multiplier),\r\n  };\r\n};\r\n\r\nexport const formatCurrency = (balance: BigNumber): string => {\r\n  const fmt = {\r\n    groupSize: 3,\r\n    groupSeparator: ' ',\r\n    decimalSeparator: '.',\r\n  };\r\n  return balance.toFormat(2, BigNumber.ROUND_DOWN, fmt);\r\n};\r\n\r\nexport const numDigits = (value: BigNumber): number => {\r\n  return value.toString().length;\r\n};\r\n\r\nexport const roundUpToScale = (value: BigNumber): BigNumber => {\r\n  const placesValue = numDigits(value.integerValue()) - 1;\r\n  const scaledValue = value.shiftedBy(-placesValue);\r\n  return scaledValue.integerValue(BigNumber.ROUND_UP).shiftedBy(placesValue);\r\n};\r\n\r\nexport const denormalizeBalance = (\r\n  normalizedBalance: string | BigNumber,\r\n  decimals: number = DEFAULT_TOKEN_DECIMALS\r\n): BigNumber => {\r\n  return scale(bnum(normalizedBalance), decimals);\r\n};\r\n\r\nexport const normalizeBalance = (\r\n  amount: BigNumber,\r\n  decimals: number = DEFAULT_TOKEN_DECIMALS\r\n): BigNumber => {\r\n  return scale(bnum(amount), -decimals);\r\n};\r\n\r\nexport const formatNumberValue = (\r\n  normalizedBalance: BigNumber,\r\n  displayPrecision: number = 4,\r\n  truncateAt?: number,\r\n  roundDown: boolean = true\r\n): string => {\r\n  if (normalizedBalance.eq(0)) {\r\n    return bnum(0).toFixed(displayPrecision);\r\n  }\r\n\r\n  let result = bnum(normalizedBalance)\r\n    .decimalPlaces(\r\n      displayPrecision,\r\n      roundDown ? BigNumber.ROUND_DOWN : BigNumber.ROUND_UP\r\n    )\r\n    .toString();\r\n\r\n  result = padToDecimalPlaces(result, displayPrecision);\r\n\r\n  if (truncateAt && result.length > truncateAt) {\r\n    return result.substring(0, 20) + '...';\r\n  } else {\r\n    return result;\r\n  }\r\n};\r\n\r\nexport const formatBalance = (\r\n  balance: BigNumber,\r\n  decimals: number = 18,\r\n  precision: number = 4,\r\n  roundDown: boolean = true\r\n): string => {\r\n  if (balance.eq(0)) {\r\n    return bnum(0).toFixed(precision);\r\n  }\r\n\r\n  const result = scale(balance, -decimals)\r\n    .decimalPlaces(\r\n      precision,\r\n      roundDown ? BigNumber.ROUND_DOWN : BigNumber.ROUND_UP\r\n    )\r\n    .toString();\r\n\r\n  return padToDecimalPlaces(result, precision);\r\n};\r\n\r\nexport const padToDecimalPlaces = (\r\n  value: string,\r\n  minDecimals: number\r\n): string => {\r\n  const split = value.split('.');\r\n  const zerosToPad = split[1] ? minDecimals - split[1].length : minDecimals;\r\n\r\n  if (zerosToPad > 0) {\r\n    let pad = '';\r\n\r\n    // Add decimal point if no decimal portion in original number\r\n    if (zerosToPad === minDecimals) {\r\n      pad += '.';\r\n    }\r\n    for (let i = 0; i < zerosToPad; i++) {\r\n      pad += '0';\r\n    }\r\n    return value + pad;\r\n  }\r\n  return value;\r\n};\r\n","const binaryToHex = function (binaryString) {\r\n  const lookup = {\r\n    '0000': '0',\r\n    '0001': '1',\r\n    '0010': '2',\r\n    '0011': '3',\r\n    '0100': '4',\r\n    '0101': '5',\r\n    '0110': '6',\r\n    '0111': '7',\r\n    '1000': '8',\r\n    '1001': '9',\r\n    '1010': 'A',\r\n    '1011': 'B',\r\n    '1100': 'C',\r\n    '1101': 'D',\r\n    '1110': 'E',\r\n    '1111': 'F',\r\n  };\r\n  var ret = '';\r\n  binaryString = binaryString.split(' ');\r\n  for (var i = 0; i < binaryString.length; i++) {\r\n    ret += lookup[binaryString[i]];\r\n  }\r\n  return ret;\r\n};\r\n\r\nconst hexToBinary = function (hexString) {\r\n  hexString = hexString.replace(/^0x+/, '');\r\n  const lookup = {\r\n    '0': '0000',\r\n    '1': '0001',\r\n    '2': '0010',\r\n    '3': '0011',\r\n    '4': '0100',\r\n    '5': '0101',\r\n    '6': '0110',\r\n    '7': '0111',\r\n    '8': '1000',\r\n    '9': '1001',\r\n    a: '1010',\r\n    b: '1011',\r\n    c: '1100',\r\n    d: '1101',\r\n    e: '1110',\r\n    f: '1111',\r\n    A: '1010',\r\n    B: '1011',\r\n    C: '1100',\r\n    D: '1101',\r\n    E: '1110',\r\n    F: '1111',\r\n  };\r\n\r\n  var ret = '';\r\n  for (var i = 0, len = hexString.length; i < len; i++) {\r\n    if (hexString[i] !== '0') ret += lookup[hexString[i]];\r\n  }\r\n  return ret;\r\n};\r\n\r\n// All 0: Not registered,\r\n// 1st bit: Flag if the scheme is registered,\r\n// 2nd bit: Scheme can register other schemes\r\n// 3rd bit: Scheme can add/remove global constraints\r\n// 4th bit: Scheme can upgrade the controller\r\n// 5th bit: Scheme can call genericCall on behalf of the organization avatar\r\nexport const encodePermission = function (permissions) {\r\n  const canGenericCall = permissions.canGenericCall || false;\r\n  const canUpgrade = permissions.canUpgrade || false;\r\n  const canChangeConstraints = permissions.canChangeConstraints || false;\r\n  const canRegisterSchemes = permissions.canRegisterSchemes || false;\r\n  const permissionBytes = `000${canGenericCall ? 1 : 0} ${canUpgrade ? 1 : 0}${\r\n    canChangeConstraints ? 1 : 0\r\n  }${canRegisterSchemes ? 1 : 0}1`;\r\n  return '0x000000' + binaryToHex(permissionBytes);\r\n};\r\nexport const decodePermission = function (permission) {\r\n  permission = hexToBinary(permission);\r\n  return {\r\n    canRegisterSchemes: permission.length > 3 && permission[4] === '1',\r\n    canChangeConstraints: permission.length > 3 && permission[5] === '1',\r\n    canUpgrade: permission.length > 3 && permission[6] === '1',\r\n    canGenericCall: permission.length > 3 && permission[7] === '1',\r\n  };\r\n};\r\n","import {\r\n  bnum,\r\n  WalletSchemeProposalState,\r\n  VotingMachineProposalState,\r\n} from './index';\r\nimport moment from 'moment';\r\n\r\nexport const calculateStakes = function (\r\n  thresholdConst,\r\n  boostedProposals,\r\n  preBoostedProposals,\r\n  upstakes,\r\n  downstakes\r\n) {\r\n  // No idea why but the estimation of staking token by diving the thresholdConst get on chain by 0.90...\r\n  // I think it might be due to the precision magic used in the real number library used in teh GenensisProtocol\r\n  thresholdConst = thresholdConst.times(0.90949470177);\r\n  let threshold = thresholdConst.div(10 ** 12).pow(boostedProposals);\r\n  if (threshold.lt(1.0001)) threshold = bnum('1.0001');\r\n\r\n  let recommendedThreshold = thresholdConst\r\n    .div(10 ** 12)\r\n    .pow(Number(boostedProposals) + Number(preBoostedProposals));\r\n  if (recommendedThreshold.lt(1.0001)) recommendedThreshold = bnum('1.0001');\r\n\r\n  return {\r\n    stakeToBoost: downstakes.times(threshold).minus(upstakes),\r\n    stakeToUnBoost: upstakes.div(threshold).minus(downstakes),\r\n    recommendedStakeToBoost: downstakes\r\n      .times(recommendedThreshold)\r\n      .minus(upstakes),\r\n    recommendedStakeToUnBoost: upstakes\r\n      .div(recommendedThreshold)\r\n      .minus(downstakes),\r\n  };\r\n};\r\n// @ts-ignore\r\nexport const decodeProposalStatus = function (\r\n  proposal,\r\n  proposalStateChangeEvents,\r\n  votingMachineParams,\r\n  maxSecondsForExecution,\r\n  autoBoost,\r\n  schemeType\r\n) {\r\n  const timeNow = bnum(moment().unix());\r\n  const queuedVotePeriodLimit = votingMachineParams.queuedVotePeriodLimit;\r\n  const boostedVotePeriodLimit = votingMachineParams.boostedVotePeriodLimit;\r\n  const preBoostedVotePeriodLimit =\r\n    votingMachineParams.preBoostedVotePeriodLimit;\r\n  const quietEndingPeriod = votingMachineParams.quietEndingPeriod;\r\n  const boostedPhaseTime = proposal.boostedPhaseTime;\r\n  const submittedTime = proposal.submittedTime;\r\n  const preBoostedPhaseTime = proposal.preBoostedPhaseTime;\r\n\r\n  switch (proposal.stateInVotingMachine) {\r\n    case VotingMachineProposalState.ExpiredInQueue:\r\n      return {\r\n        status: 'Expired in Queue',\r\n        boostTime: bnum(0),\r\n        finishTime: proposalStateChangeEvents.find(\r\n          event =>\r\n            Number(event.state) === VotingMachineProposalState.ExpiredInQueue\r\n        )\r\n          ? bnum(\r\n              proposalStateChangeEvents.find(\r\n                event =>\r\n                  Number(event.state) ===\r\n                  VotingMachineProposalState.ExpiredInQueue\r\n              ).timestamp\r\n            )\r\n          : bnum(0),\r\n        pendingAction: 0,\r\n      };\r\n    case VotingMachineProposalState.Executed:\r\n      if (proposal.stateInScheme === WalletSchemeProposalState.Rejected)\r\n        return {\r\n          status: 'Proposal Rejected',\r\n          boostTime: boostedPhaseTime,\r\n          finishTime: proposalStateChangeEvents.find(\r\n            event => Number(event.state) === VotingMachineProposalState.Executed\r\n          )\r\n            ? bnum(\r\n                proposalStateChangeEvents.find(\r\n                  event =>\r\n                    Number(event.state) === VotingMachineProposalState.Executed\r\n                ).timestamp\r\n              )\r\n            : bnum(0),\r\n          pendingAction: 0,\r\n        };\r\n      else if (\r\n        proposal.stateInScheme === WalletSchemeProposalState.ExecutionSucceded\r\n      )\r\n        return {\r\n          status: 'Execution Succeeded',\r\n          boostTime: boostedPhaseTime,\r\n          finishTime: proposalStateChangeEvents.find(\r\n            event => Number(event.state) === VotingMachineProposalState.Executed\r\n          )\r\n            ? bnum(\r\n                proposalStateChangeEvents.find(\r\n                  event =>\r\n                    Number(event.state) === VotingMachineProposalState.Executed\r\n                ).timestamp\r\n              )\r\n            : bnum(0),\r\n          pendingAction: 0,\r\n        };\r\n      else if (\r\n        proposal.stateInScheme === WalletSchemeProposalState.ExecutionTimeout\r\n      )\r\n        return {\r\n          status: 'Execution Timeout',\r\n          boostTime: boostedPhaseTime,\r\n          finishTime: proposalStateChangeEvents.find(\r\n            event => Number(event.state) === VotingMachineProposalState.Executed\r\n          )\r\n            ? bnum(\r\n                proposalStateChangeEvents.find(\r\n                  event =>\r\n                    Number(event.state) === VotingMachineProposalState.Executed\r\n                ).timestamp\r\n              )\r\n            : bnum(0),\r\n          pendingAction: 0,\r\n        };\r\n      else if (proposal.stateInScheme === WalletSchemeProposalState.Submitted)\r\n        return {\r\n          status: 'Passed',\r\n          boostTime: boostedPhaseTime,\r\n          finishTime: proposalStateChangeEvents.find(\r\n            event => Number(event.state) === VotingMachineProposalState.Executed\r\n          )\r\n            ? bnum(\r\n                proposalStateChangeEvents.find(\r\n                  event =>\r\n                    Number(event.state) === VotingMachineProposalState.Executed\r\n                ).timestamp\r\n              )\r\n            : bnum(0),\r\n          pendingAction:\r\n            schemeType === 'ContributionReward'\r\n              ? 4\r\n              : schemeType === 'GenericMulticall'\r\n              ? 5\r\n              : 0,\r\n        };\r\n      else\r\n        return {\r\n          status: 'Passed',\r\n          boostTime: boostedPhaseTime,\r\n          finishTime: proposalStateChangeEvents.find(\r\n            event => Number(event.state) === VotingMachineProposalState.Executed\r\n          )\r\n            ? bnum(\r\n                proposalStateChangeEvents.find(\r\n                  event =>\r\n                    Number(event.state) === VotingMachineProposalState.Executed\r\n                ).timestamp\r\n              )\r\n            : bnum(0),\r\n          pendingAction: 0,\r\n        };\r\n    case VotingMachineProposalState.Queued:\r\n      if (timeNow > submittedTime.plus(queuedVotePeriodLimit).toNumber()) {\r\n        return {\r\n          status: 'Expired in Queue',\r\n          boostTime: bnum(0),\r\n          finishTime: submittedTime.plus(queuedVotePeriodLimit),\r\n          pendingAction: 3,\r\n        };\r\n      } else {\r\n        return {\r\n          status: 'In Queue',\r\n          boostTime: bnum(0),\r\n          finishTime: submittedTime.plus(queuedVotePeriodLimit),\r\n          pendingAction: 0,\r\n        };\r\n      }\r\n    case VotingMachineProposalState.PreBoosted:\r\n      if (\r\n        timeNow >\r\n          preBoostedPhaseTime\r\n            .plus(preBoostedVotePeriodLimit)\r\n            .plus(boostedVotePeriodLimit)\r\n            .plus(maxSecondsForExecution)\r\n            .toNumber() &&\r\n        proposal.shouldBoost\r\n      ) {\r\n        return {\r\n          status: 'Execution Timeout',\r\n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\r\n          finishTime: preBoostedPhaseTime\r\n            .plus(preBoostedVotePeriodLimit)\r\n            .plus(boostedVotePeriodLimit),\r\n          pendingAction: 3,\r\n        };\r\n      } else if (\r\n        timeNow >\r\n          preBoostedPhaseTime\r\n            .plus(preBoostedVotePeriodLimit)\r\n            .plus(boostedVotePeriodLimit)\r\n            .toNumber() &&\r\n        proposal.shouldBoost\r\n      ) {\r\n        return {\r\n          status: 'Pending Execution',\r\n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\r\n          finishTime: preBoostedPhaseTime\r\n            .plus(preBoostedVotePeriodLimit)\r\n            .plus(boostedVotePeriodLimit),\r\n          pendingAction: 2,\r\n        };\r\n      } else if (\r\n        timeNow >\r\n          preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).toNumber() &&\r\n        proposal.shouldBoost\r\n      ) {\r\n        return {\r\n          status: 'Pending Boost',\r\n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\r\n          finishTime: autoBoost\r\n            ? preBoostedPhaseTime\r\n                .plus(preBoostedVotePeriodLimit)\r\n                .plus(boostedVotePeriodLimit)\r\n            : timeNow.plus(boostedVotePeriodLimit),\r\n          pendingAction: 1,\r\n        };\r\n      } else if (\r\n        autoBoost &&\r\n        timeNow >\r\n          preBoostedPhaseTime\r\n            .plus(preBoostedVotePeriodLimit)\r\n            .plus(boostedVotePeriodLimit)\r\n            .toNumber() &&\r\n        proposal.shouldBoost\r\n      ) {\r\n        return {\r\n          status: 'Pending Execution',\r\n          boostTime: boostedPhaseTime,\r\n          finishTime: preBoostedPhaseTime\r\n            .plus(preBoostedVotePeriodLimit)\r\n            .plus(boostedVotePeriodLimit),\r\n          pendingAction: 2,\r\n        };\r\n      } else if (\r\n        timeNow > submittedTime.plus(queuedVotePeriodLimit) &&\r\n        !proposal.shouldBoost\r\n      ) {\r\n        return {\r\n          status: 'Pending Execution',\r\n          boostTime: bnum(0),\r\n          finishTime: submittedTime.plus(queuedVotePeriodLimit),\r\n          pendingAction: 2,\r\n        };\r\n      } else if (\r\n        timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit) &&\r\n        !proposal.shouldBoost\r\n      ) {\r\n        return {\r\n          status: 'In Queue',\r\n          boostTime: bnum(0),\r\n          finishTime: submittedTime.plus(queuedVotePeriodLimit),\r\n          pendingAction: 0,\r\n        };\r\n      } else {\r\n        return {\r\n          status: 'Pre Boosted',\r\n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\r\n          finishTime: autoBoost\r\n            ? preBoostedPhaseTime\r\n                .plus(preBoostedVotePeriodLimit)\r\n                .plus(boostedVotePeriodLimit)\r\n            : timeNow.plus(boostedVotePeriodLimit),\r\n          pendingAction: 0,\r\n        };\r\n      }\r\n    case VotingMachineProposalState.Boosted:\r\n      if (timeNow > boostedPhaseTime.plus(boostedVotePeriodLimit).toNumber()) {\r\n        return {\r\n          status: 'Pending Execution',\r\n          boostTime: boostedPhaseTime,\r\n          finishTime: boostedPhaseTime.plus(boostedVotePeriodLimit),\r\n          pendingAction: 2,\r\n        };\r\n      } else {\r\n        return {\r\n          status: 'Boosted',\r\n          boostTime: boostedPhaseTime,\r\n          finishTime: boostedPhaseTime.plus(boostedVotePeriodLimit),\r\n          pendingAction: 0,\r\n        };\r\n      }\r\n    case VotingMachineProposalState.QuietEndingPeriod:\r\n      const finishTime =\r\n        bnum(\r\n          proposalStateChangeEvents.find(\r\n            event =>\r\n              Number(event.state) ===\r\n              VotingMachineProposalState.QuietEndingPeriod\r\n          ).timestamp\r\n        ).plus(quietEndingPeriod) || bnum(0);\r\n      return {\r\n        status: 'Quiet Ending Period',\r\n        boostTime: boostedPhaseTime,\r\n        finishTime: finishTime,\r\n        pendingAction: finishTime.lt(timeNow) ? 3 : 0,\r\n      };\r\n  }\r\n};\r\n","import { bnum } from './helpers';\r\n\r\nexport const decodeSchemeParameters = function (rawParameters) {\r\n  return {\r\n    queuedVoteRequiredPercentage: bnum(\r\n      rawParameters.queuedVoteRequiredPercentage.toString()\r\n    ),\r\n    queuedVotePeriodLimit: bnum(rawParameters.queuedVotePeriodLimit.toString()),\r\n    boostedVotePeriodLimit: bnum(\r\n      rawParameters.boostedVotePeriodLimit.toString()\r\n    ),\r\n    preBoostedVotePeriodLimit: bnum(\r\n      rawParameters.preBoostedVotePeriodLimit.toString()\r\n    ),\r\n    thresholdConst: bnum(rawParameters.thresholdConst.toString()),\r\n    limitExponentValue: bnum(rawParameters.limitExponentValue.toString()),\r\n    quietEndingPeriod: bnum(rawParameters.quietEndingPeriod.toString()),\r\n    proposingRepReward: bnum(rawParameters.proposingRepReward.toString()),\r\n    votersReputationLossRatio: bnum(\r\n      rawParameters.votersReputationLossRatio.toString()\r\n    ),\r\n    minimumDaoBounty: bnum(rawParameters.minimumDaoBounty.toString()),\r\n    daoBountyConst: bnum(rawParameters.daoBountyConst.toString()),\r\n    activationTime: bnum(rawParameters.activationTime.toString()),\r\n  };\r\n};\r\n","import contentHash from 'content-hash';\r\nimport _ from 'lodash';\r\nimport { ZERO_ADDRESS } from './index';\r\n\r\nconst Web3 = require('web3');\r\nconst web3 = new Web3();\r\n\r\nconst MAX_BLOCKS_PER_EVENTS_FETCH: number =\r\n  Number(process.env.MAX_BLOCKS_PER_EVENTS_FETCH) || 1000000;\r\n\r\nexport const getEvents = async function (\r\n  web3,\r\n  contract,\r\n  fromBlock,\r\n  toBlock,\r\n  eventsToGet,\r\n  maxBlocksPerFetch = MAX_BLOCKS_PER_EVENTS_FETCH\r\n) {\r\n  let events = [],\r\n    to = Math.min(fromBlock + maxBlocksPerFetch, toBlock),\r\n    from = fromBlock;\r\n  while (from < to) {\r\n    console.debug(\r\n      `Fetching events of ${contract._address} from blocks ${from} -> ${to}`\r\n    );\r\n    try {\r\n      let eventsFetched = await contract.getPastEvents(eventsToGet, {\r\n        fromBlock: from,\r\n        toBlock: to,\r\n      });\r\n      eventsFetched = await getTimestampOfEvents(web3, eventsFetched);\r\n      events = events.concat(eventsFetched);\r\n      from = to;\r\n      to = Math.min(from + maxBlocksPerFetch, toBlock);\r\n    } catch (error) {\r\n      console.error('Error fetching blocks:', (error as Error).message);\r\n      if (Math.trunc((to - from) / 2) > 100000) {\r\n        const blocksToLower = Math.max(Math.trunc((to - from) / 2), 100000);\r\n        console.debug('Lowering toBlock', blocksToLower, 'blocks');\r\n        to = to - blocksToLower;\r\n      }\r\n    }\r\n  }\r\n  return events;\r\n};\r\n\r\nexport const getRawEvents = async function (\r\n  web3,\r\n  contractAddress,\r\n  fromBlock,\r\n  toBlock,\r\n  topicsToGet,\r\n  maxBlocksPerFetch = MAX_BLOCKS_PER_EVENTS_FETCH\r\n) {\r\n  let events = [],\r\n    to = Math.min(fromBlock + maxBlocksPerFetch, toBlock),\r\n    from = fromBlock;\r\n  while (from < to) {\r\n    console.debug(\r\n      `Fetching logs of ${contractAddress} from blocks ${from} -> ${to}`\r\n    );\r\n    try {\r\n      let eventsFetched = await web3.eth.getPastLogs({\r\n        address: contractAddress,\r\n        fromBlock: from,\r\n        toBlock: to,\r\n        topics: topicsToGet,\r\n      });\r\n      eventsFetched = await getTimestampOfEvents(web3, eventsFetched);\r\n      events = events.concat(eventsFetched);\r\n      from = to;\r\n      to = Math.min(from + maxBlocksPerFetch, toBlock);\r\n    } catch (error) {\r\n      console.error('Error fetching blocks:', (error as Error).message);\r\n      if (Math.trunc((to - from) / 2) > 100000) {\r\n        const blocksToLower = Math.max(Math.trunc((to - from) / 2), 100000);\r\n        console.debug('Lowering toBlock', blocksToLower, 'blocks');\r\n        to = to - blocksToLower;\r\n      }\r\n    }\r\n  }\r\n  return events;\r\n};\r\n\r\nexport const getTimestampOfEvents = async function (web3, events) {\r\n  //// TODO:  See how can we bacth requests can be implemented\r\n\r\n  // async function batchRequest(blocks) {\r\n  //   const batch = new web3.BatchRequest();\r\n  //   let requests = [];\r\n  //   for (let i = 0; i < blocks.length; i++) {\r\n  //     const request = new Promise((resolve, reject) => {\r\n  //       batch.add(web3.eth.getBlock.request(blocks[i], (err, data) => {\r\n  //         console.log(1)\r\n  //         if (err) return reject(err);\r\n  //         resolve(data);\r\n  //       }));\r\n  //     });\r\n  //     requests.push(request);\r\n  //   }\r\n  //   batch.execute();\r\n  //   console.log(batch)\r\n  //   await Promise.all(requests);\r\n  //   return batch;\r\n  // };\r\n\r\n  let blocksToFetch = [];\r\n  let timestamps = [];\r\n  events.map(event => {\r\n    if (blocksToFetch.indexOf(event.blockNumber) < 0)\r\n      blocksToFetch.push(event.blockNumber);\r\n  });\r\n  const totalLength = blocksToFetch.length;\r\n  while (blocksToFetch.length > 0 && totalLength > timestamps.length) {\r\n    // timestamps = (await batchRequest(blocksToFetch)).map((blockResult) => {\r\n    //   return blockResult.timestamp;\r\n    // });\r\n    const blocksToFetchBatch = blocksToFetch.splice(0, 500);\r\n    await Promise.all(\r\n      blocksToFetchBatch.map(async block => {\r\n        const blockInfo = await web3.eth.getBlock(block);\r\n        for (let i = 0; i < events.length; i++) {\r\n          if (events[i].blockNumber === blockInfo.number)\r\n            events[i].timestamp = blockInfo.timestamp;\r\n          if (blockInfo.l1BlockNumber)\r\n            events[i].l1BlockNumber = Number(blockInfo.l1BlockNumber);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  for (let i = 0; i < events.length; i++) {\r\n    if (events[i].l1BlockNumber) {\r\n      events[i].l2BlockNumber = events[i].blockNumber;\r\n    } else {\r\n      events[i].l1BlockNumber = events[i].blockNumber;\r\n      events[i].l2BlockNumber = 0;\r\n    }\r\n  }\r\n  return events;\r\n};\r\n\r\nexport const sortEvents = function (events) {\r\n  return _.orderBy(\r\n    events,\r\n    ['l1BlockNumber', 'l2BlockNumber', 'transactionIndex', 'logIndex'],\r\n    ['asc', 'asc', 'asc', 'asc']\r\n  );\r\n};\r\n\r\nexport const executeMulticall = async function (web3, multicall, calls) {\r\n  const rawCalls = calls.map(call => {\r\n    return [\r\n      call[0]._address,\r\n      web3.eth.abi.encodeFunctionCall(\r\n        call[0]._jsonInterface.find(method => method.name === call[1]),\r\n        call[2]\r\n      ),\r\n    ];\r\n  });\r\n\r\n  const { returnData } = await multicall.methods.aggregate(rawCalls).call();\r\n\r\n  return {\r\n    returnData,\r\n    decodedReturnData: returnData.map((callResult, i) => {\r\n      return web3.eth.abi.decodeParameters(\r\n        calls[i][0]._jsonInterface.find(method => method.name === calls[i][1])\r\n          .outputs,\r\n        callResult\r\n      )['0'];\r\n    }),\r\n  };\r\n};\r\n\r\nexport const executeRawMulticall = async function (multicall, calls) {\r\n  const rawCalls = calls.map(call => {\r\n    return [call[0], call[1]];\r\n  });\r\n\r\n  const { returnData } = await multicall.methods.aggregate(rawCalls).call();\r\n\r\n  return {\r\n    returnData,\r\n  };\r\n};\r\n\r\nexport const isNode = function () {\r\n  return typeof module !== 'undefined' && module.exports;\r\n};\r\n\r\nexport const descriptionHashToIPFSHash = function (descriptionHash) {\r\n  try {\r\n    if (contentHash.getCodec(descriptionHash) === 'ipfs-ns')\r\n      return contentHash.decode(descriptionHash);\r\n    else if (\r\n      descriptionHash.length > 1 &&\r\n      descriptionHash.substring(0, 2) !== 'Qm'\r\n    )\r\n      return descriptionHash;\r\n    else return '';\r\n  } catch (error) {\r\n    console.error('Error decoding descriptionHash', descriptionHash);\r\n    return '';\r\n  }\r\n};\r\n\r\nexport const ipfsHashToDescriptionHash = function (ipfsHash) {\r\n  try {\r\n    if (ipfsHash.length > 1 && ipfsHash.substring(0, 2) === 'Qm')\r\n      return contentHash.fromIpfs(ipfsHash);\r\n    else if (contentHash.getCodec(ipfsHash) === 'ipfs-ns') return ipfsHash;\r\n    else return '';\r\n  } catch (error) {\r\n    console.error('Error encoding ipfsHash', ipfsHash);\r\n    return '';\r\n  }\r\n};\r\n\r\nexport const getSchemeTypeData = function (networkConfig, schemeAddress) {\r\n  if (networkConfig.daostack) {\r\n    if (\r\n      networkConfig.daostack.schemeRegistrar &&\r\n      networkConfig.daostack.schemeRegistrar.address === schemeAddress\r\n    ) {\r\n      return {\r\n        type: 'SchemeRegistrar',\r\n        name: 'SchemeRegistrar',\r\n        contractToCall: networkConfig.daostack.schemeRegistrar.contractToCall,\r\n        votingMachine: networkConfig.votingMachines.gen.address,\r\n        newProposalTopics:\r\n          networkConfig.daostack.schemeRegistrar.newProposalTopics,\r\n        voteParams: networkConfig.daostack.contributionReward.voteParams,\r\n        creationLogEncoding:\r\n          networkConfig.daostack.schemeRegistrar.creationLogEncoding,\r\n      };\r\n    } else if (\r\n      networkConfig.daostack.contributionReward &&\r\n      networkConfig.daostack.contributionReward.address === schemeAddress\r\n    ) {\r\n      return {\r\n        type: 'ContributionReward',\r\n        name: 'ContributionReward',\r\n        contractToCall:\r\n          networkConfig.daostack.contributionReward.contractToCall,\r\n        votingMachine: networkConfig.votingMachines.gen.address,\r\n        newProposalTopics:\r\n          networkConfig.daostack.contributionReward.newProposalTopics,\r\n        voteParams: networkConfig.daostack.contributionReward.voteParams,\r\n        creationLogEncoding:\r\n          networkConfig.daostack.contributionReward.creationLogEncoding,\r\n      };\r\n    } else if (\r\n      networkConfig.daostack.competitionScheme &&\r\n      networkConfig.daostack.competitionScheme.address === schemeAddress\r\n    ) {\r\n      return {\r\n        type: 'CompetitionScheme',\r\n        name: 'CompetitionScheme',\r\n        contractToCall: networkConfig.daostack.competitionScheme.contractToCall,\r\n        votingMachine: networkConfig.votingMachines.gen.address,\r\n        newProposalTopics:\r\n          networkConfig.daostack.competitionScheme.newProposalTopics,\r\n        creationLogEncoding:\r\n          networkConfig.daostack.competitionScheme.creationLogEncoding,\r\n      };\r\n    } else if (\r\n      networkConfig.daostack.multicallSchemes &&\r\n      Object.keys(networkConfig.daostack.multicallSchemes.addresses).indexOf(\r\n        schemeAddress\r\n      ) > -1\r\n    ) {\r\n      return {\r\n        type: 'GenericMulticall',\r\n        votingMachine: networkConfig.votingMachines.gen.address,\r\n        contractToCall: ZERO_ADDRESS,\r\n        name: networkConfig.daostack.multicallSchemes.addresses[schemeAddress]\r\n          .name,\r\n        newProposalTopics:\r\n          networkConfig.daostack.multicallSchemes.newProposalTopics,\r\n        voteParams:\r\n          networkConfig.daostack.multicallSchemes.addresses[schemeAddress]\r\n            .voteParams,\r\n        creationLogEncoding:\r\n          networkConfig.daostack.multicallSchemes.creationLogEncoding,\r\n      };\r\n    } else if (\r\n      networkConfig.daostack.genericSchemes &&\r\n      Object.keys(networkConfig.daostack.genericSchemes.addresses).indexOf(\r\n        schemeAddress\r\n      ) > -1\r\n    ) {\r\n      return {\r\n        type: 'GenericScheme',\r\n        votingMachine:\r\n          networkConfig.daostack.genericSchemes.addresses[schemeAddress]\r\n            .votingMachine,\r\n        contractToCall:\r\n          networkConfig.daostack.genericSchemes.addresses[schemeAddress]\r\n            .contractToCall,\r\n        name: networkConfig.daostack.genericSchemes.addresses[schemeAddress]\r\n          .name,\r\n        newProposalTopics:\r\n          networkConfig.daostack.genericSchemes.newProposalTopics,\r\n        voteParams:\r\n          networkConfig.daostack.genericSchemes.addresses[schemeAddress]\r\n            .voteParams,\r\n        creationLogEncoding:\r\n          networkConfig.daostack.genericSchemes.creationLogEncoding,\r\n      };\r\n    } else if (\r\n      networkConfig.daostack.dxSchemes &&\r\n      Object.keys(networkConfig.daostack.dxSchemes).indexOf(schemeAddress) > -1\r\n    ) {\r\n      return {\r\n        type: 'OldDxScheme',\r\n        votingMachine: networkConfig.votingMachines.gen.address,\r\n        contractToCall: ZERO_ADDRESS,\r\n        name: networkConfig.daostack.dxSchemes[schemeAddress],\r\n        newProposalTopics: [],\r\n        creationLogEncoding: [],\r\n      };\r\n    }\r\n  }\r\n  return {\r\n    type: 'WalletScheme',\r\n    votingMachine: networkConfig.votingMachines.dxd.address,\r\n    name: 'WalletScheme',\r\n    newProposalTopics: [\r\n      [\r\n        web3.utils.soliditySha3('ProposalStateChange(bytes32,uint256)'),\r\n        null,\r\n        '0x0000000000000000000000000000000000000000000000000000000000000001',\r\n      ],\r\n    ],\r\n    creationLogEncoding: [],\r\n  };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/metamask.02e3ec27.png\";","export default __webpack_public_path__ + \"static/media/walletconnect.80a855f2.png\";","import { InjectedConnector } from '@web3-react/injected-connector';\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\r\nimport { NETWORK_IDS } from '../utils';\r\nimport metamaskIcon from '../assets/images/metamask.png';\r\nimport walletConnectIcon from '../assets/images/walletconnect.png';\r\n\r\nexport const ETH_NETWORKS = process.env.REACT_APP_ETH_NETWORKS.split(',');\r\nexport const ETH_NETWORKS_IDS = ETH_NETWORKS.map(network => {\r\n  return NETWORK_IDS[network];\r\n});\r\nexport const DEFAULT_ETH_CHAIN_ID = NETWORK_IDS[ETH_NETWORKS[0]];\r\n\r\nexport const web3ContextNames = {\r\n  injected: 'INJECTED',\r\n  metamask: 'METAMASK',\r\n};\r\n\r\nexport const isChainIdSupported = (chainId: number): boolean => {\r\n  return ETH_NETWORKS_IDS ? ETH_NETWORKS_IDS.indexOf(chainId) >= 0 : false;\r\n};\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: ETH_NETWORKS_IDS,\r\n});\r\n\r\nexport function getWalletConnectConnector(customRpcUrls: {\r\n  [chainId: number]: string;\r\n}) {\r\n  return new WalletConnectConnector({\r\n    rpc: customRpcUrls,\r\n    qrcode: true,\r\n  });\r\n}\r\n\r\nexport const getWallets = (customRpcUrls: { [chainId: number]: string }) => ({\r\n  INJECTED: {\r\n    connector: injected,\r\n    name: 'Injected',\r\n    iconName: 'arrow-right.svg',\r\n    description: 'Injected web3 provider.',\r\n    href: null,\r\n    color: '#010101',\r\n    primary: true,\r\n  },\r\n  METAMASK: {\r\n    connector: injected,\r\n    name: 'MetaMask',\r\n    description: 'Easy-to-use browser extension.',\r\n    href: null,\r\n    color: '#E8831D',\r\n    icon: metamaskIcon,\r\n  },\r\n  WALLETCONNECT: {\r\n    connector: getWalletConnectConnector(customRpcUrls),\r\n    name: 'WalletConnect',\r\n    description: 'Open protocol for connecting Wallets to Dapps.',\r\n    href: null,\r\n    color: '#E8831D',\r\n    icon: walletConnectIcon,\r\n  },\r\n});\r\n\r\nexport default {\r\n  injected,\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { injected, web3ContextNames } from 'provider/connectors';\r\n\r\n/*  Attempt to connect to & activate injected connector\r\n    If we're on mobile and have an injected connector, attempt even if not authorized (legacy support)\r\n    If we tried to connect, or it's active, return true;\r\n */\r\nexport function useActiveWeb3React() {\r\n  return useWeb3ReactCore(web3ContextNames.injected);\r\n}\r\n\r\nexport function useEagerConnect() {\r\n  const { activate, active } = useWeb3ReactCore(web3ContextNames.injected);\r\n\r\n  const [tried, setTried] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.debug('[Injected Eager Connect]', injected);\r\n    injected.isAuthorized().then(isAuthorized => {\r\n      console.debug('[Eager Connect] Activate injected if authorized', {\r\n        isAuthorized,\r\n      });\r\n      if (isAuthorized) {\r\n        activate(injected, undefined, true).catch(() => {\r\n          setTried(true);\r\n        });\r\n      } else {\r\n        if (isMobile && window.ethereum) {\r\n          activate(injected, undefined, true).catch(() => {\r\n            setTried(true);\r\n          });\r\n        } else {\r\n          setTried(true);\r\n        }\r\n      }\r\n    });\r\n  }, [activate]); // intentionally only running on mount (make sure it's only mounted once :))\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (active) {\r\n      setTried(true);\r\n    }\r\n  }, [active]);\r\n\r\n  return tried;\r\n}\r\n\r\n/**\r\n * Use for network and injected - logs user in\r\n * and out after checking what network they're on\r\n */\r\nexport function useInactiveListener(suppress = false) {\r\n  const { active, error, activate } = useWeb3ReactCore(\r\n    web3ContextNames.injected\r\n  );\r\n\r\n  useEffect(() => {\r\n    const { ethereum } = window;\r\n\r\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n      const handleChainChanged = () => {\r\n        // eat errors\r\n        activate(injected, undefined, true).catch(() => {});\r\n      };\r\n\r\n      const handleAccountsChanged = accounts => {\r\n        if (accounts.length > 0) {\r\n          // eat errors\r\n          activate(injected, undefined, true).catch(() => {});\r\n        }\r\n      };\r\n\r\n      const handleNetworkChanged = () => {\r\n        // eat errors\r\n        activate(injected, undefined, true).catch(() => {});\r\n      };\r\n\r\n      ethereum.on('chainChanged', handleChainChanged);\r\n      ethereum.on('networkChanged', handleNetworkChanged);\r\n      ethereum.on('accountsChanged', handleAccountsChanged);\r\n\r\n      return () => {\r\n        if (ethereum.removeListener) {\r\n          ethereum.removeListener('chainChanged', handleChainChanged);\r\n          ethereum.removeListener('networkChanged', handleNetworkChanged);\r\n          ethereum.removeListener('accountsChanged', handleAccountsChanged);\r\n        }\r\n      };\r\n    }\r\n\r\n    return () => {};\r\n  }, [active, error, suppress, activate]);\r\n}\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport RootContext from '../contexts';\r\nimport { ethers } from 'ethers';\r\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\r\nimport UncheckedJsonRpcSigner from 'provider/UncheckedJsonRpcSigner';\r\nimport { sendAction } from './actions/actions';\r\nimport { web3ContextNames } from '../provider/connectors';\r\nimport PromiEvent from 'promievent';\r\nimport { TXEvents } from '../utils';\r\nimport moment from 'moment';\r\nimport { schema } from '../services/ABIService';\r\n\r\nexport enum ContractType {\r\n  ERC20 = 'ERC20',\r\n  Avatar = 'Avatar',\r\n  Controller = 'Controller',\r\n  Reputation = 'Reputation',\r\n  PermissionRegistry = 'PermissionRegistry',\r\n  VotingMachine = 'VotingMachine',\r\n  DXDVotingMachine = 'DXDVotingMachine',\r\n  WalletScheme = 'WalletScheme',\r\n  Multicall = 'Multicall',\r\n  Redeemer = 'Redeemer',\r\n}\r\n\r\nexport interface ChainData {\r\n  currentBlockNumber: number;\r\n}\r\n\r\nenum ERRORS {\r\n  UntrackedChainId = 'Attempting to access data for untracked chainId',\r\n  ContextNotFound = 'Specified context name note stored',\r\n  BlockchainActionNoAccount = 'Attempting to do blockchain transaction with no account',\r\n  BlockchainActionNoChainId = 'Attempting to do blockchain transaction with no chainId',\r\n  BlockchainActionNoResponse = 'No error or response received from blockchain action',\r\n}\r\n\r\nexport default class ProviderStore {\r\n  provider: any;\r\n  accounts: string[];\r\n  defaultAccount: string | null;\r\n  web3Contexts: object;\r\n  supportedNetworks: number[];\r\n  chainData: ChainData;\r\n  activeChainId: number;\r\n  activeFetchLoop: any;\r\n  activeAccount: string;\r\n  context: RootContext;\r\n\r\n  constructor(context) {\r\n    this.context = context;\r\n    this.web3Contexts = {};\r\n    this.chainData = { currentBlockNumber: -1 };\r\n    makeObservable(this, {\r\n      provider: observable,\r\n      accounts: observable,\r\n      defaultAccount: observable,\r\n      web3Contexts: observable,\r\n      chainData: observable,\r\n      activeChainId: observable,\r\n      activeFetchLoop: observable,\r\n      activeAccount: observable,\r\n      setCurrentBlockNumber: action,\r\n      setActiveAccount: action,\r\n      fetchUserBlockchainData: action,\r\n    });\r\n  }\r\n\r\n  isFresh(blocknumber: number): boolean {\r\n    return blocknumber === this.getCurrentBlockNumber();\r\n  }\r\n\r\n  isFresher(newBlockNumber: number, oldBlockNumber: number): boolean {\r\n    return newBlockNumber > oldBlockNumber;\r\n  }\r\n\r\n  isBlockStale(blocknumber: number) {\r\n    return blocknumber < this.chainData.currentBlockNumber;\r\n  }\r\n\r\n  getCurrentBlockNumber(): number {\r\n    return this.chainData.currentBlockNumber;\r\n  }\r\n\r\n  setCurrentBlockNumber(blocknumber): void {\r\n    this.chainData.currentBlockNumber = blocknumber;\r\n  }\r\n\r\n  setActiveAccount(account: string) {\r\n    this.activeAccount = account;\r\n  }\r\n\r\n  fetchUserBlockchainData = async (\r\n    web3React: Web3ReactContextInterface,\r\n    account: string\r\n  ) => {\r\n    const { transactionStore } = this.context;\r\n\r\n    console.debug('[Fetch Start - User Blockchain Data]', {\r\n      account,\r\n    });\r\n\r\n    transactionStore.checkPendingTransactions(web3React, account);\r\n  };\r\n\r\n  // account is optional\r\n  getProviderOrSigner(library, account) {\r\n    console.debug('[getProviderOrSigner', {\r\n      library,\r\n      account,\r\n      signer: library.getSigner(account),\r\n    });\r\n\r\n    return account\r\n      ? new UncheckedJsonRpcSigner(library.getSigner(account))\r\n      : library;\r\n  }\r\n\r\n  getContract(\r\n    web3React: Web3ReactContextInterface,\r\n    type: ContractType,\r\n    address: string,\r\n    signerAccount?: string\r\n  ): ethers.Contract {\r\n    const { library } = web3React;\r\n\r\n    if (signerAccount) {\r\n      return new library.eth.Contract(schema[type], address, {\r\n        from: signerAccount,\r\n      });\r\n    }\r\n\r\n    return new library.eth.Contract(schema[type], address);\r\n  }\r\n\r\n  // get blockTime from blocknumber\r\n  async getBlockTime(blocknumber) {\r\n    const context = this.getActiveWeb3React();\r\n    const blockData = await context.library.eth.getBlock(blocknumber);\r\n    const date = new Date(blockData.timestamp * 1000);\r\n    return moment(date).format('DD.MM - HH:mm');\r\n  }\r\n\r\n  // get blockHash from blocknumber\r\n  async getBlockHash(blocknumber) {\r\n    const context = this.getActiveWeb3React();\r\n    const blockData = await context.library.eth.getBlock(blocknumber);\r\n    return blockData.hash;\r\n  }\r\n\r\n  getActiveWeb3React(): Web3ReactContextInterface {\r\n    const contextInjected = this.web3Contexts[web3ContextNames.injected];\r\n    return contextInjected;\r\n  }\r\n\r\n  getWeb3React(name): Web3ReactContextInterface {\r\n    if (!this.web3Contexts[name]) {\r\n      throw new Error(ERRORS.ContextNotFound);\r\n    }\r\n    return this.web3Contexts[name];\r\n  }\r\n\r\n  @action setWeb3Context(name, context: Web3ReactContextInterface) {\r\n    console.debug('[setWeb3Context]', name, context);\r\n    this.web3Contexts[name] = context;\r\n  }\r\n\r\n  @action sendTransaction = (\r\n    web3React: Web3ReactContextInterface,\r\n    contractType: ContractType,\r\n    contractAddress: string,\r\n    action: string,\r\n    params: any[],\r\n    overrides?: any\r\n  ): PromiEvent<any> => {\r\n    const { transactionStore } = this.context;\r\n    const { chainId, account } = web3React;\r\n\r\n    overrides = overrides ? overrides : {};\r\n\r\n    if (!account) {\r\n      throw new Error(ERRORS.BlockchainActionNoAccount);\r\n    }\r\n\r\n    if (!chainId) {\r\n      throw new Error(ERRORS.BlockchainActionNoChainId);\r\n    }\r\n\r\n    const contract = this.getContract(\r\n      web3React,\r\n      contractType,\r\n      contractAddress,\r\n      account\r\n    );\r\n\r\n    const response = sendAction({\r\n      contract,\r\n      action,\r\n      sender: account,\r\n      data: params,\r\n      overrides,\r\n    }).on(TXEvents.TX_HASH, hash => {\r\n      transactionStore.addTransactionRecord(account, hash);\r\n    });\r\n\r\n    return response;\r\n  };\r\n\r\n  @action sendRawTransaction = (\r\n    web3React: Web3ReactContextInterface,\r\n    to: string,\r\n    data: string,\r\n    value: string\r\n  ): PromiEvent<any> => {\r\n    const { transactionStore } = this.context;\r\n    const { chainId, account } = web3React;\r\n\r\n    if (!account) {\r\n      throw new Error(ERRORS.BlockchainActionNoAccount);\r\n    }\r\n\r\n    if (!chainId) {\r\n      throw new Error(ERRORS.BlockchainActionNoChainId);\r\n    }\r\n\r\n    const promiEvent = new PromiEvent<any>(() => {\r\n      web3React.library.eth\r\n        .sendTransaction({ from: account, to: to, data: data, value: value })\r\n        .once('transactionHash', hash => {\r\n          transactionStore.addTransactionRecord(account, hash);\r\n          promiEvent.emit(TXEvents.TX_HASH, hash);\r\n          console.debug(TXEvents.TX_HASH, hash);\r\n        })\r\n        .once('receipt', receipt => {\r\n          promiEvent.emit(TXEvents.RECEIPT, receipt);\r\n          console.debug(TXEvents.RECEIPT, receipt);\r\n        })\r\n        .once('confirmation', (confNumber, receipt) => {\r\n          promiEvent.emit(TXEvents.CONFIRMATION, {\r\n            confNumber,\r\n            receipt,\r\n          });\r\n          console.debug(TXEvents.CONFIRMATION, {\r\n            confNumber,\r\n            receipt,\r\n          });\r\n        })\r\n        .on('error', error => {\r\n          console.debug(error.code);\r\n          promiEvent.emit(TXEvents.INVARIANT, error);\r\n          console.debug(TXEvents.INVARIANT, error);\r\n        })\r\n        .then(receipt => {\r\n          promiEvent.emit(TXEvents.FINALLY, receipt);\r\n          console.debug(TXEvents.FINALLY, receipt);\r\n        })\r\n        .catch(e => {\r\n          console.debug('rejected', e);\r\n        });\r\n    });\r\n\r\n    return promiEvent;\r\n  };\r\n}\r\n","import { Interface } from 'ethers/utils';\r\nimport RootContext from '../contexts';\r\n\r\nexport const schema = {\r\n  Avatar: require('../contracts/DxAvatar').abi,\r\n  Controller: require('../contracts/DxController').abi,\r\n  VotingMachine: require('../contracts/GenesisProtocol').abi,\r\n  DXDVotingMachine: require('../contracts/DXDVotingMachine').abi,\r\n  Reputation: require('../contracts/DxReputation').abi,\r\n  WalletScheme: require('../contracts/WalletScheme').abi,\r\n  ERC20: require('../contracts/ERC20').abi,\r\n  PermissionRegistry: require('../contracts/PermissionRegistry').abi,\r\n  Multicall: require('../contracts/Multicall').abi,\r\n  ContributionReward: require('../contracts/ContributionReward').abi,\r\n  SchemeRegistrar: require('../contracts/SchemeRegistrar').abi,\r\n  Redeemer: require('../contracts/Redeemer').abi,\r\n};\r\n\r\nexport default class ABIService {\r\n  context: RootContext;\r\n\r\n  constructor(context: RootContext) {\r\n    this.context = context;\r\n  }\r\n\r\n  getAbi(contractType: string) {\r\n    return schema[contractType];\r\n  }\r\n\r\n  decodeCall(contractType: string, data: string) {\r\n    const { providerStore } = this.context;\r\n\r\n    const { library } = providerStore.getActiveWeb3React();\r\n\r\n    const contractInterface = new Interface(this.getAbi(contractType));\r\n    const functionSignature = data.substring(0, 10);\r\n    for (const functionName in contractInterface.functions) {\r\n      if (\r\n        contractInterface.functions[functionName].sighash === functionSignature\r\n      ) {\r\n        return {\r\n          function: contractInterface.functions[functionName],\r\n          args: library.eth.abi.decodeParameters(\r\n            contractInterface.functions[functionName].inputs.map(input => {\r\n              return input.type;\r\n            }),\r\n            data.substring(10)\r\n          ),\r\n        };\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n","import * as ethers from 'ethers';\r\n\r\nclass UncheckedJsonRpcSigner extends ethers.Signer {\r\n  signer: any;\r\n\r\n  constructor(signer) {\r\n    super();\r\n    ethers.utils.defineReadOnly(this, 'signer', signer);\r\n    ethers.utils.defineReadOnly(this, 'provider', signer.provider);\r\n  }\r\n\r\n  getAddress() {\r\n    return this.signer.getAddress();\r\n  }\r\n\r\n  sendTransaction(transaction) {\r\n    return this.signer.sendUncheckedTransaction(transaction).then(hash => {\r\n      return {\r\n        hash: hash,\r\n        nonce: null,\r\n        gasLimit: null,\r\n        gasPrice: null,\r\n        data: null,\r\n        value: null,\r\n        chainId: null,\r\n        confirmations: 0,\r\n        from: null,\r\n        wait: confirmations => {\r\n          return this.signer.provider.waitForTransaction(hash, confirmations);\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  signMessage(message) {\r\n    return this.signer.signMessage(message);\r\n  }\r\n}\r\n\r\nexport default UncheckedJsonRpcSigner;\r\n","import { Web3Errors } from '../../utils';\r\n\r\nconst errorCodeMapping = {\r\n  '4001': Web3Errors.SIGNATURE_REJECTED,\r\n};\r\n\r\nexport const isKnownErrorCode = (code: number): boolean => {\r\n  const codeStr = code.toString();\r\n  return !!errorCodeMapping[codeStr];\r\n};\r\n\r\nexport const getErrorByCode = (code: number): Web3Errors => {\r\n  const codeStr = code.toString();\r\n  if (isKnownErrorCode(code)) {\r\n    return errorCodeMapping[codeStr];\r\n  } else {\r\n    return Web3Errors.UNKNOWN_ERROR;\r\n  }\r\n};\r\n","import { Contract } from 'ethers';\r\nimport { TXEvents } from '../../utils';\r\nimport { getErrorByCode, isKnownErrorCode } from './error';\r\nimport PromiEvent from 'promievent';\r\n\r\ninterface ActionRequest {\r\n  contract: Contract;\r\n  action: string;\r\n  sender: string;\r\n  data: any[];\r\n  overrides: any;\r\n}\r\n\r\nexport interface ActionResponse {\r\n  contract: Contract;\r\n  action: string;\r\n  sender: string;\r\n  data: object;\r\n  txResponse: any | undefined;\r\n  error: any | undefined;\r\n}\r\n\r\nconst preLog = (params: ActionRequest) => {\r\n  console.debug(`[@action start: ${params.action}]`, {\r\n    contract: params.contract,\r\n    action: params.action,\r\n    sender: params.sender,\r\n    data: params.data,\r\n    overrides: params.overrides,\r\n  });\r\n};\r\n\r\nexport const sendAction = (params: ActionRequest): PromiEvent<any> => {\r\n  const { contract, action, sender, data, overrides } = params;\r\n  preLog(params);\r\n\r\n  const promiEvent = new PromiEvent<any>(() => {\r\n    contract.methods[action](...data)\r\n      .send({ from: sender, ...overrides })\r\n      .once('transactionHash', hash => {\r\n        promiEvent.emit(TXEvents.TX_HASH, hash);\r\n        console.debug(TXEvents.TX_HASH, hash);\r\n      })\r\n      .once('receipt', receipt => {\r\n        promiEvent.emit(TXEvents.RECEIPT, receipt);\r\n        console.debug(TXEvents.RECEIPT, receipt);\r\n      })\r\n      .once('confirmation', (confNumber, receipt) => {\r\n        promiEvent.emit(TXEvents.CONFIRMATION, {\r\n          confNumber,\r\n          receipt,\r\n        });\r\n        console.debug(TXEvents.CONFIRMATION, {\r\n          confNumber,\r\n          receipt,\r\n        });\r\n      })\r\n      .on('error', error => {\r\n        console.debug(error.code);\r\n        if (error.code && isKnownErrorCode(error.code)) {\r\n          promiEvent.emit(TXEvents.TX_ERROR, getErrorByCode(error.code));\r\n          console.debug(TXEvents.TX_ERROR, getErrorByCode(error.code));\r\n        } else {\r\n          promiEvent.emit(TXEvents.INVARIANT, error);\r\n          console.debug(TXEvents.INVARIANT, error);\r\n        }\r\n      })\r\n      .then(receipt => {\r\n        promiEvent.emit(TXEvents.FINALLY, receipt);\r\n        console.debug(TXEvents.FINALLY, receipt);\r\n      })\r\n      .catch(e => {\r\n        console.debug('rejected', e);\r\n      });\r\n  });\r\n\r\n  return promiEvent;\r\n};\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport RootContext from '../contexts';\r\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\r\nimport { TransactionReceipt } from 'web3-core';\r\n\r\nexport interface TransactionRecord {\r\n  hash: string;\r\n  blockNumberChecked: number;\r\n  receipt: TransactionReceipt | undefined;\r\n}\r\n\r\nconst ERRORS = {\r\n  unknownTxHash: 'Transaction hash is not stored',\r\n  unknownNetworkId: 'NetworkID specified is not tracked',\r\n  txHashAlreadyExists: 'Transaction hash already exists for network',\r\n  txHasNoHash: 'Attempting to add transaction record without hash',\r\n};\r\n\r\nexport enum FetchCode {\r\n  SUCCESS,\r\n  FAILURE,\r\n  STALE,\r\n}\r\n\r\nexport interface TransactionRecordMap {\r\n  [index: string]: TransactionRecord[];\r\n}\r\n\r\nexport default class TransactionStore {\r\n  txRecords: TransactionRecordMap;\r\n  context: RootContext;\r\n\r\n  constructor(context) {\r\n    this.context = context;\r\n    this.txRecords = {};\r\n    makeObservable(this, {\r\n      txRecords: observable,\r\n      checkPendingTransactions: action,\r\n      addTransactionRecord: action,\r\n    });\r\n  }\r\n\r\n  // @dev Transactions are pending if we haven't seen their receipt yet\r\n  getPendingTransactions(account: string): TransactionRecord[] {\r\n    if (this.txRecords[account]) {\r\n      const records = this.txRecords[account];\r\n      return records.filter(value => {\r\n        return this.isTxPending(value);\r\n      });\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  getConfirmedTransactions(account: string): TransactionRecord[] {\r\n    if (this.txRecords[account]) {\r\n      const records = this.txRecords[account];\r\n      return records.filter(value => {\r\n        return !this.isTxPending(value);\r\n      });\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  async checkPendingTransactions(\r\n    web3React: Web3ReactContextInterface,\r\n    account\r\n  ): Promise<FetchCode> {\r\n    const { providerStore } = this.context;\r\n    const currentBlock = providerStore.getCurrentBlockNumber();\r\n\r\n    const { library } = web3React;\r\n    if (this.txRecords[account]) {\r\n      const records = this.txRecords[account];\r\n      records.forEach(value => {\r\n        if (this.isTxPending(value) && this.isStale(value, currentBlock)) {\r\n          library.eth\r\n            .getTransactionReceipt(value.hash)\r\n            .then(receipt => {\r\n              value.blockNumberChecked = currentBlock;\r\n              if (receipt) {\r\n                value.receipt = receipt;\r\n              }\r\n            })\r\n            .catch(() => {\r\n              value.blockNumberChecked = currentBlock;\r\n            });\r\n        }\r\n      });\r\n    }\r\n\r\n    return FetchCode.SUCCESS;\r\n  }\r\n\r\n  // @dev Add transaction record. It's in a pending state until mined.\r\n  addTransactionRecord(account: string, txHash: string) {\r\n    const record: TransactionRecord = {\r\n      hash: txHash,\r\n      blockNumberChecked: 0,\r\n      receipt: undefined,\r\n    };\r\n\r\n    if (!txHash) {\r\n      throw new Error('Attempting to add transaction record without hash');\r\n    }\r\n\r\n    let records = this.txRecords[account];\r\n\r\n    if (records) {\r\n      const duplicate = records.find(value => value.hash === txHash);\r\n      if (!!duplicate) {\r\n        throw new Error(ERRORS.txHashAlreadyExists);\r\n      }\r\n      this.txRecords[account].push(record);\r\n    } else {\r\n      this.txRecords[account] = [];\r\n      this.txRecords[account].push(record);\r\n    }\r\n  }\r\n\r\n  isTxPending(txRecord: TransactionRecord): boolean {\r\n    return !txRecord.receipt;\r\n  }\r\n\r\n  isStale(txRecord: TransactionRecord, currentBlock: number) {\r\n    return txRecord.blockNumberChecked < currentBlock;\r\n  }\r\n}\r\n","import { Interface } from 'ethers/utils';\r\nimport RootContext from '../contexts';\r\nimport { ContractType } from '../stores/Provider';\r\n\r\nexport default class MulticallService {\r\n  context: RootContext;\r\n\r\n  activeCalls: Call[];\r\n  activeCallsRaw: any[];\r\n\r\n  constructor(context: RootContext) {\r\n    this.context = context;\r\n    this.resetActiveCalls();\r\n  }\r\n\r\n  // Add call additions and removals\r\n  async executeCalls(calls?: Call[], rawCalls?: any[]) {\r\n    const { providerStore, configStore } = this.context;\r\n\r\n    const multi = providerStore.getContract(\r\n      providerStore.getActiveWeb3React(),\r\n      ContractType.Multicall,\r\n      configStore.getNetworkContracts().utils.multicall\r\n    );\r\n\r\n    const response = await multi.methods\r\n      .aggregate(rawCalls || this.activeCallsRaw)\r\n      .call();\r\n    return {\r\n      calls: calls || this.activeCalls,\r\n      results: response.returnData,\r\n      blockNumber: response.blockNumber,\r\n    };\r\n  }\r\n\r\n  addCalls(calls: Call[]) {\r\n    calls.forEach(call => this.addCall(call));\r\n  }\r\n\r\n  addCall(call: Call) {\r\n    this.addContractCall(call);\r\n  }\r\n\r\n  addContractCall(call: Call) {\r\n    const { abiService } = this.context;\r\n    const iface = new Interface(abiService.getAbi(call.contractType));\r\n    call.params = call.params ? call.params : [];\r\n    const encoded = iface.functions[call.method].encode(call.params);\r\n    this.activeCallsRaw.push([call.address, encoded]);\r\n    this.activeCalls.push(call);\r\n  }\r\n\r\n  decodeCall(call: Call, result: any) {\r\n    const { abiService } = this.context;\r\n    const iface = new Interface(abiService.getAbi(call.contractType));\r\n    return iface.functions[call.method].decode(result);\r\n  }\r\n\r\n  resetActiveCalls() {\r\n    this.activeCalls = [];\r\n    this.activeCallsRaw = [];\r\n  }\r\n}\r\n","import { action, makeObservable } from 'mobx';\r\nimport contentHash from 'content-hash';\r\nimport PromiEvent from 'promievent';\r\nimport RootContext from '../contexts';\r\nimport { ContractType } from '../stores/Provider';\r\nimport {\r\n  BigNumber,\r\n  bnum,\r\n  ZERO_ADDRESS,\r\n  ANY_ADDRESS,\r\n  ERC20_TRANSFER_SIGNATURE,\r\n  ERC20_APPROVE_SIGNATURE,\r\n  MAX_UINT,\r\n  normalizeBalance,\r\n} from '../utils';\r\n\r\nexport default class DaoService {\r\n  context: RootContext;\r\n\r\n  constructor(context: RootContext) {\r\n    this.context = context;\r\n\r\n    makeObservable(this, {\r\n      createProposal: action,\r\n      vote: action,\r\n      approveVotingMachineToken: action,\r\n      stake: action,\r\n      execute: action,\r\n      redeem: action,\r\n    });\r\n  }\r\n\r\n  encodeControllerGenericCall(to: string, callData: string, value: BigNumber) {\r\n    const { providerStore, configStore } = this.context;\r\n    const controller = providerStore.getContract(\r\n      providerStore.getActiveWeb3React(),\r\n      ContractType.Controller,\r\n      configStore.getNetworkContracts().controller\r\n    );\r\n    const avatarAddress = configStore.getNetworkContracts().avatar;\r\n    return controller.methods\r\n      .genericCall(to, callData, avatarAddress, value)\r\n      .encodeABI();\r\n  }\r\n\r\n  decodeWalletSchemeCall(\r\n    from: string,\r\n    to: string,\r\n    data: string,\r\n    value: BigNumber,\r\n    fullDescription: boolean\r\n  ) {\r\n    const { abiService, providerStore, configStore } = this.context;\r\n    const { library } = providerStore.getActiveWeb3React();\r\n    const recommendedCalls = configStore.getRecommendedCalls();\r\n    let functionSignature = data.substring(0, 10);\r\n    const controllerCallDecoded = abiService.decodeCall(\r\n      ContractType.Controller,\r\n      data\r\n    );\r\n    let asset = ZERO_ADDRESS;\r\n    if (\r\n      controllerCallDecoded &&\r\n      controllerCallDecoded.function.name === 'genericCall'\r\n    ) {\r\n      to = controllerCallDecoded.args[0];\r\n      data = '0x' + controllerCallDecoded.args[1].substring(10);\r\n      value = bnum(controllerCallDecoded.args[3]);\r\n      functionSignature = controllerCallDecoded.args[1].substring(0, 10);\r\n    } else {\r\n      data = '0x' + data.substring(10);\r\n    }\r\n\r\n    if (\r\n      functionSignature === ERC20_TRANSFER_SIGNATURE ||\r\n      functionSignature === ERC20_APPROVE_SIGNATURE\r\n    ) {\r\n      asset = to;\r\n    }\r\n    const recommendedCallUsed = recommendedCalls.find(recommendedCall => {\r\n      return (\r\n        asset === recommendedCall.asset &&\r\n        (ANY_ADDRESS === recommendedCall.from ||\r\n          from === recommendedCall.from) &&\r\n        to === recommendedCall.to &&\r\n        functionSignature ===\r\n          library.eth.abi.encodeFunctionSignature(recommendedCall.functionName)\r\n      );\r\n    });\r\n\r\n    if (recommendedCallUsed) {\r\n      const callParameters = library.eth.abi.decodeParameters(\r\n        recommendedCallUsed.params.map(param => param.type),\r\n        data\r\n      );\r\n\r\n      if (callParameters.__length__) delete callParameters.__length__;\r\n\r\n      let decodedCallText = '';\r\n\r\n      if (\r\n        recommendedCallUsed.decodeText &&\r\n        recommendedCallUsed.decodeText.length > 0\r\n      ) {\r\n        decodedCallText = recommendedCallUsed.decodeText;\r\n        for (\r\n          let paramIndex = 0;\r\n          paramIndex < recommendedCallUsed.params.length;\r\n          paramIndex++\r\n        )\r\n          if (recommendedCallUsed.params[paramIndex].decimals)\r\n            decodedCallText = decodedCallText.replaceAll(\r\n              '[PARAM_' + paramIndex + ']',\r\n              '<italic>' +\r\n                normalizeBalance(\r\n                  callParameters[paramIndex],\r\n                  recommendedCallUsed.params[paramIndex].decimals\r\n                ) +\r\n                '</italic>'\r\n            );\r\n          else\r\n            decodedCallText = decodedCallText.replaceAll(\r\n              '[PARAM_' + paramIndex + ']',\r\n              '<italic>' + callParameters[paramIndex] + '</italic>'\r\n            );\r\n      }\r\n\r\n      if (fullDescription) {\r\n        return `<strong>Description</strong>:${decodedCallText}\r\n        <strong>To</strong>: ${recommendedCallUsed.toName} <small>${\r\n          recommendedCallUsed.to\r\n        }</small>\r\n        <strong>Function</strong>: ${\r\n          recommendedCallUsed.functionName\r\n        } <small>${library.eth.abi.encodeFunctionSignature(\r\n          recommendedCallUsed.functionName\r\n        )}</small>\r\n        <strong>Params</strong>: ${JSON.stringify(\r\n          Object.keys(callParameters).map(\r\n            paramIndex => callParameters[paramIndex]\r\n          )\r\n        )}\r\n        <strong>Data</strong>: ${data} `;\r\n      } else {\r\n        return decodedCallText;\r\n      }\r\n    } else {\r\n      return `<strong>From</strong>: ${from}\r\n      <strong>To</strong>: ${to}\r\n      <strong>Data</strong>: 0x${data.substring(10)}\r\n      <strong>Value</strong>: ${normalizeBalance(bnum(value))}`;\r\n    }\r\n  }\r\n\r\n  createProposal(\r\n    scheme: string,\r\n    schemeType: string,\r\n    proposalData: any\r\n  ): PromiEvent<any> {\r\n    const { providerStore, configStore } = this.context;\r\n    const networkContracts = configStore.getNetworkContracts();\r\n    const { library } = providerStore.getActiveWeb3React();\r\n\r\n    if (schemeType === 'ContributionReward') {\r\n      // function proposeContributionReward(\r\n      //   Avatar _avatar,\r\n      //   string memory _descriptionHash,\r\n      //   int256 _reputationChange,\r\n      //   uint256[5] memory _rewards,\r\n      //   IERC20 _externalToken,\r\n      //   address payable _beneficiary\r\n      // )\r\n      return providerStore.sendRawTransaction(\r\n        providerStore.getActiveWeb3React(),\r\n        scheme,\r\n        library.eth.abi.encodeFunctionCall(\r\n          {\r\n            name: 'proposeContributionReward',\r\n            type: 'function',\r\n            inputs: [\r\n              { type: 'address', name: '_avatar' },\r\n              { type: 'string', name: '_descriptionHash' },\r\n              { type: 'int256', name: '_reputationChange' },\r\n              { type: 'uint256[5]', name: '_rewards' },\r\n              { type: 'address', name: '_externalToken' },\r\n              { type: 'address', name: '_beneficiary' },\r\n            ],\r\n          },\r\n          [\r\n            networkContracts.avatar,\r\n            contentHash.decode(proposalData.descriptionHash),\r\n            proposalData.reputationChange,\r\n            [0, proposalData.ethValue, proposalData.tokenValue, 0, 1],\r\n            proposalData.externalToken,\r\n            proposalData.beneficiary,\r\n          ]\r\n        ),\r\n        '0'\r\n      );\r\n    } else if (schemeType === 'GenericMulticall') {\r\n      // function proposeCalls(\r\n      //   address[] memory _contractsToCall,\r\n      //   bytes[] memory _callsData,\r\n      //   uint256[] memory _values,\r\n      //   string memory _descriptionHash\r\n      // )\r\n      return providerStore.sendRawTransaction(\r\n        providerStore.getActiveWeb3React(),\r\n        scheme,\r\n        library.eth.abi.encodeFunctionCall(\r\n          {\r\n            name: 'proposeCalls',\r\n            type: 'function',\r\n            inputs: [\r\n              { type: 'address[]', name: '_contractsToCall' },\r\n              { type: 'bytes[]', name: '_callsData' },\r\n              { type: 'uint256[]', name: '_values' },\r\n              { type: 'string', name: '_descriptionHash' },\r\n            ],\r\n          },\r\n          [\r\n            proposalData.to,\r\n            proposalData.data,\r\n            proposalData.value,\r\n            contentHash.decode(proposalData.descriptionHash),\r\n          ]\r\n        ),\r\n        '0'\r\n      );\r\n    } else {\r\n      return providerStore.sendTransaction(\r\n        providerStore.getActiveWeb3React(),\r\n        ContractType.WalletScheme,\r\n        scheme,\r\n        'proposeCalls',\r\n        [\r\n          proposalData.to,\r\n          proposalData.data,\r\n          proposalData.value,\r\n          proposalData.titleText,\r\n          proposalData.descriptionHash,\r\n        ],\r\n        {}\r\n      );\r\n    }\r\n  }\r\n\r\n  vote(decision: string, amount: string, proposalId: string): PromiEvent<any> {\r\n    const { providerStore, daoStore } = this.context;\r\n    const { account } = providerStore.getActiveWeb3React();\r\n    return providerStore.sendTransaction(\r\n      providerStore.getActiveWeb3React(),\r\n      ContractType.VotingMachine,\r\n      daoStore.getVotingMachineOfProposal(proposalId),\r\n      'vote',\r\n      [proposalId, decision, amount, account],\r\n      {}\r\n    );\r\n  }\r\n\r\n  approveVotingMachineToken(votingMachineAddress): PromiEvent<any> {\r\n    const { providerStore, daoStore } = this.context;\r\n    return providerStore.sendTransaction(\r\n      providerStore.getActiveWeb3React(),\r\n      ContractType.ERC20,\r\n      daoStore.getCache().votingMachines[votingMachineAddress].token,\r\n      'approve',\r\n      [votingMachineAddress, MAX_UINT],\r\n      {}\r\n    );\r\n  }\r\n\r\n  stake(decision: string, amount: string, proposalId: string): PromiEvent<any> {\r\n    const { providerStore, daoStore } = this.context;\r\n    return providerStore.sendTransaction(\r\n      providerStore.getActiveWeb3React(),\r\n      ContractType.VotingMachine,\r\n      daoStore.getVotingMachineOfProposal(proposalId),\r\n      'stake',\r\n      [proposalId, decision, amount],\r\n      {}\r\n    );\r\n  }\r\n\r\n  execute(proposalId: string): PromiEvent<any> {\r\n    const { providerStore, daoStore } = this.context;\r\n    return providerStore.sendTransaction(\r\n      providerStore.getActiveWeb3React(),\r\n      ContractType.VotingMachine,\r\n      daoStore.getVotingMachineOfProposal(proposalId),\r\n      'execute',\r\n      [proposalId],\r\n      {}\r\n    );\r\n  }\r\n\r\n  redeem(proposalId: string, account: string): PromiEvent<any> {\r\n    const { providerStore, daoStore } = this.context;\r\n    return providerStore.sendTransaction(\r\n      providerStore.getActiveWeb3React(),\r\n      ContractType.VotingMachine,\r\n      daoStore.getVotingMachineOfProposal(proposalId),\r\n      'redeem',\r\n      [proposalId, account],\r\n      {}\r\n    );\r\n  }\r\n\r\n  redeemDaoBounty(proposalId: string, account: string): PromiEvent<any> {\r\n    const { providerStore, daoStore } = this.context;\r\n    return providerStore.sendTransaction(\r\n      providerStore.getActiveWeb3React(),\r\n      ContractType.VotingMachine,\r\n      daoStore.getVotingMachineOfProposal(proposalId),\r\n      'redeemDaoBounty',\r\n      [proposalId, account],\r\n      {}\r\n    );\r\n  }\r\n\r\n  redeemContributionReward(\r\n    redeemerAddress: string,\r\n    votingMachineAddress: string,\r\n    schemeAddress: string,\r\n    proposalId: string,\r\n    beneficiary: string\r\n  ): PromiEvent<any> {\r\n    const { providerStore, configStore } = this.context;\r\n    // I have NO IDEA why it works with the voting machine address and scheme address are inverted in the function call,\r\n    // Alchemy uses it like that, weird.\r\n    return providerStore.sendTransaction(\r\n      providerStore.getActiveWeb3React(),\r\n      ContractType.Redeemer,\r\n      redeemerAddress,\r\n      'redeem',\r\n      [\r\n        votingMachineAddress,\r\n        schemeAddress,\r\n        proposalId,\r\n        configStore.getNetworkContracts().avatar,\r\n        beneficiary,\r\n      ],\r\n      {}\r\n    );\r\n  }\r\n\r\n  redeemContributionRewardCall(\r\n    redeemerAddress: string,\r\n    votingMachineAddress: string,\r\n    schemeAddress: string,\r\n    proposalId: string,\r\n    beneficiary: string\r\n  ): PromiEvent<any> {\r\n    const { providerStore, configStore } = this.context;\r\n    const web3 = providerStore.getActiveWeb3React().library;\r\n    return web3.eth.call({\r\n      to: redeemerAddress,\r\n      data: web3.eth.abi.encodeFunctionCall(\r\n        {\r\n          name: 'redeem',\r\n          type: 'function',\r\n          inputs: [\r\n            {\r\n              type: 'address',\r\n              name: '_contributionReward',\r\n            },\r\n            {\r\n              type: 'address',\r\n              name: '_genesisProtocol',\r\n            },\r\n            {\r\n              type: 'bytes32',\r\n              name: '_proposalId',\r\n            },\r\n            {\r\n              type: 'address',\r\n              name: '_avatar',\r\n            },\r\n            {\r\n              type: 'address',\r\n              name: '_beneficiary',\r\n            },\r\n          ],\r\n        },\r\n        [\r\n          votingMachineAddress,\r\n          schemeAddress,\r\n          proposalId,\r\n          configStore.getNetworkContracts().avatar,\r\n          beneficiary,\r\n        ]\r\n      ),\r\n    });\r\n  }\r\n\r\n  executeMulticall(schemeAddress: string, proposalId: string): PromiEvent<any> {\r\n    const { providerStore } = this.context;\r\n    const web3 = providerStore.getActiveWeb3React().library;\r\n    return providerStore.sendRawTransaction(\r\n      providerStore.getActiveWeb3React(),\r\n      schemeAddress,\r\n      web3.eth.abi.encodeFunctionCall(\r\n        {\r\n          name: 'execute',\r\n          type: 'function',\r\n          inputs: [\r\n            {\r\n              type: 'bytes32',\r\n              name: '_proposalId',\r\n            },\r\n          ],\r\n        },\r\n        [proposalId]\r\n      ),\r\n      '0'\r\n    );\r\n  }\r\n}\r\n","import RootContext from '../contexts';\r\nimport _ from 'lodash';\r\nimport { ContractType } from '../stores/Provider';\r\n\r\nexport interface EventCall {\r\n  contractType: ContractType;\r\n  address: string;\r\n  eventName: string;\r\n  fromBlock: number;\r\n  toBlock: number;\r\n  executed?: boolean;\r\n}\r\n\r\nexport default class EventsService {\r\n  context: RootContext;\r\n\r\n  activeEventsCalls: EventCall[];\r\n\r\n  constructor(context: RootContext) {\r\n    this.context = context;\r\n    this.activeEventsCalls = [];\r\n  }\r\n\r\n  async getEvents(\r\n    contractType: ContractType,\r\n    address: string,\r\n    eventName: string,\r\n    fromBlock: number,\r\n    toBlock: number\r\n  ) {\r\n    const { providerStore } = this.context;\r\n    const contract = providerStore.getContract(\r\n      providerStore.getActiveWeb3React(),\r\n      contractType,\r\n      address\r\n    );\r\n    console.log('Getting event', eventName, fromBlock, toBlock);\r\n    return _.orderBy(\r\n      await contract.getPastEvents(eventName, {\r\n        fromBlock: fromBlock,\r\n        toBlock: toBlock,\r\n      }),\r\n      ['blockNumber', 'transactionIndex', 'logIndex'],\r\n      ['asc', 'asc', 'asc']\r\n    );\r\n  }\r\n\r\n  async executeActiveEventCalls() {\r\n    return await Promise.all(\r\n      this.activeEventsCalls.map(async activeEventCall => {\r\n        return await this.getEvents(\r\n          activeEventCall.contractType,\r\n          activeEventCall.address,\r\n          activeEventCall.eventName,\r\n          activeEventCall.fromBlock,\r\n          activeEventCall.toBlock\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  addEventsCalls(events: EventCall[]) {\r\n    events.forEach(event => this.addEventCall(event));\r\n  }\r\n\r\n  addEventCall(event: EventCall) {\r\n    this.activeEventsCalls.push(event);\r\n  }\r\n\r\n  resetActiveEventCalls() {\r\n    this.activeEventsCalls = [];\r\n  }\r\n}\r\n","import RootContext from '../contexts';\r\nimport axios from 'axios';\r\nimport IPFS from 'ipfs-core';\r\nconst CID = require('cids');\r\n\r\nexport default class IPFSService {\r\n  context: RootContext;\r\n  calls: {\r\n    [hash: string]: {\r\n      time: Number;\r\n      content: String;\r\n      fetched: Boolean;\r\n    };\r\n  } = {};\r\n  ipfs: any = null;\r\n  started: Boolean = false;\r\n\r\n  constructor(context: RootContext) {\r\n    this.context = context;\r\n  }\r\n\r\n  async start() {\r\n    if (!this.ipfs && !this.started) {\r\n      this.started = true;\r\n      try {\r\n        this.ipfs = await IPFS.create();\r\n      } catch (error) {\r\n        console.error('[IPFS]', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  async add(content: String) {\r\n    const { cid } = await this.ipfs.add({ content });\r\n    console.log(cid.string);\r\n    return cid.string;\r\n  }\r\n\r\n  async pin(hash: String) {\r\n    console.log(new CID(hash));\r\n    return await this.ipfs.pin.add(new CID(hash));\r\n  }\r\n\r\n  async getContent(hash: String) {\r\n    let content = [];\r\n    for await (const file of this.ipfs.get(hash)) {\r\n      console.debug('[IPFS FILE]', file.type, file.path);\r\n      if (!file.content) continue;\r\n      for await (const chunk of file.content) {\r\n        content = content.concat(chunk);\r\n      }\r\n    }\r\n    return content.toString();\r\n  }\r\n\r\n  async getContentFromIPFS(hash: string) {\r\n    return (\r\n      await axios({\r\n        method: 'GET',\r\n        url: 'https://gateway.pinata.cloud/ipfs/' + hash,\r\n      })\r\n    ).data;\r\n  }\r\n}\r\n","import RootContext from '../contexts';\r\nimport axios from 'axios';\r\nimport contentHash from 'content-hash';\r\n\r\nexport default class PinataService {\r\n  context: RootContext;\r\n  auth: Boolean = false;\r\n\r\n  constructor(context: RootContext) {\r\n    this.context = context;\r\n  }\r\n\r\n  async updatePinList() {\r\n    // const pinList = await this.getPinList();\r\n    const ipfsHashes = this.context.daoStore.getCache().ipfsHashes;\r\n    // const alreadyPinned = pinList.data.rows;\r\n    for (let i = 0; i < ipfsHashes.length; i++) {\r\n      // if (alreadyPinned.indexOf(pinned => alreadyPinned.ipfs_pin_hash === ipfsHashes[i].hash) < 0) {\r\n      //   console.debug('[PINATA] Pinning:', ipfsHashes[i].hash);\r\n      // } else {\r\n      //   console.debug('[PINATA] Alpready pinned:', ipfsHashes[i].hash);\r\n      // }\r\n    }\r\n  }\r\n\r\n  async isAuthenticated() {\r\n    const pinataApiKey = this.context.configStore.getLocalConfig().pinata;\r\n    try {\r\n      const auth = await axios({\r\n        method: 'GET',\r\n        url: 'https://api.pinata.cloud/data/testAuthentication',\r\n        headers: { Authorization: `Bearer ${pinataApiKey}` },\r\n      });\r\n      this.auth = auth.status === 200;\r\n    } catch (error) {\r\n      this.auth = false;\r\n    }\r\n  }\r\n\r\n  async pin(hashToPin: String) {\r\n    console.log('pininng', hashToPin);\r\n    const pinataApiKey = this.context.configStore.getLocalConfig().pinata;\r\n    return axios({\r\n      method: 'POST',\r\n      url: 'https://api.pinata.cloud/pinning/pinByHash',\r\n      data: {\r\n        hashToPin,\r\n        pinataMetadata: {\r\n          name: `DXdao ${this.context.configStore.getActiveChainName()} DescriptionHash ${contentHash.fromIpfs(\r\n            hashToPin\r\n          )}`,\r\n          keyValues: { type: 'proposal' },\r\n        },\r\n      },\r\n      headers: { Authorization: `Bearer ${pinataApiKey}` },\r\n    });\r\n  }\r\n\r\n  async getPinList() {\r\n    const pinataApiKey = this.context.configStore.getLocalConfig().pinata;\r\n    return axios({\r\n      method: 'GET',\r\n      url: `https://api.pinata.cloud/data/pinList?pageLimit=1000&metadata[name]=DXdao ${this.context.configStore.getActiveChainName()}`,\r\n      headers: { Authorization: `Bearer ${pinataApiKey}` },\r\n    });\r\n  }\r\n}\r\n","import RootContext from '../contexts';\r\nimport axios from 'axios';\r\n\r\nexport default class EtherscanService {\r\n  context: RootContext;\r\n  auth: Boolean = false;\r\n\r\n  constructor(context: RootContext) {\r\n    this.context = context;\r\n  }\r\n\r\n  async isAuthenticated() {\r\n    const etherscanAPIKey = this.context.configStore.getLocalConfig().etherscan;\r\n    const { account } = this.context.providerStore.getActiveWeb3React();\r\n    if (etherscanAPIKey && etherscanAPIKey.length > 0) {\r\n      const auth = await axios({\r\n        method: 'GET',\r\n        url: `https://api.etherscan.io/api?module=account&action=balance&address=${account}&tag=latest&apikey=${etherscanAPIKey}`,\r\n      });\r\n      this.auth = auth.data.status === 1;\r\n    }\r\n  }\r\n\r\n  async getContractABI(address: string) {\r\n    const etherscanAPIKey = this.context.configStore.getLocalConfig().etherscan;\r\n    return axios({\r\n      method: 'GET',\r\n      url: `https://api.etherscan.io/api?module=contract&action=getabi&address=${address}&apikey=${etherscanAPIKey}`,\r\n    });\r\n  }\r\n\r\n  async getContractSource(address: string) {\r\n    const etherscanAPIKey = this.context.configStore.getLocalConfig().etherscan;\r\n    return axios({\r\n      method: 'GET',\r\n      url: `https://api.etherscan.io/api?module=contract&action=getsourcecode&address=${address}&apikey=${etherscanAPIKey}`,\r\n    });\r\n  }\r\n}\r\n","import RootContext from '../contexts';\r\nimport axios from 'axios';\r\nimport web3 from 'web3';\r\n\r\nexport default class CoingeckoService {\r\n  context: RootContext;\r\n  prices: any = {};\r\n\r\n  constructor(context: RootContext) {\r\n    this.context = context;\r\n  }\r\n\r\n  async loadPrices() {\r\n    const tokens = this.context.configStore.getTokensToFetchPrice();\r\n    const networkName =\r\n      this.context.configStore.getActiveChainName() === 'mainnet'\r\n        ? 'ethereum'\r\n        : this.context.configStore.getActiveChainName() === 'xdai'\r\n        ? 'xdai'\r\n        : '';\r\n\r\n    if (networkName === 'ethereum' || networkName === 'xdai') {\r\n      let tokenAddresses = '';\r\n      tokens.map((token, i) => {\r\n        if (i === tokens.length - 1) tokenAddresses += token.address;\r\n        else tokenAddresses += token.address + '%2C';\r\n      });\r\n      console.log(\r\n        `https://api.coingecko.com/api/v3/simple/token_price/${networkName}?contract_addresses=${tokenAddresses}&vs_currencies=usd`\r\n      );\r\n      const pricesResponse = await Promise.all([\r\n        axios({\r\n          method: 'GET',\r\n          url: `https://api.coingecko.com/api/v3/simple/token_price/${networkName}?contract_addresses=${tokenAddresses}&vs_currencies=usd`,\r\n        }),\r\n        axios({\r\n          method: 'GET',\r\n          url: `https://api.coingecko.com/api/v3/simple/price?ids=${networkName}&vs_currencies=usd`,\r\n        }),\r\n      ]);\r\n\r\n      if (\r\n        pricesResponse[0].status === 200 &&\r\n        pricesResponse[1].status === 200\r\n      ) {\r\n        this.prices = pricesResponse[0].data;\r\n\r\n        Object.keys(this.prices).map(tokenAddress => {\r\n          this.prices[web3.utils.toChecksumAddress(tokenAddress)] =\r\n            this.prices[tokenAddress];\r\n          delete this.prices[tokenAddress];\r\n        });\r\n\r\n        this.prices['0x0000000000000000000000000000000000000000'] =\r\n          pricesResponse[1].data[networkName];\r\n      }\r\n    }\r\n    return;\r\n  }\r\n\r\n  getPrices() {\r\n    return this.prices;\r\n  }\r\n}\r\n","import RootContext from '../contexts';\r\nimport axios from 'axios';\r\nimport { ETH_NETWORKS_IDS, DEFAULT_ETH_CHAIN_ID } from 'provider/connectors';\r\nimport { DEFAULT_RPC_URLS, INFURA_NETWORK_NAMES } from 'utils';\r\n\r\nexport default class InfuraService {\r\n  context: RootContext;\r\n  auth: Boolean = false;\r\n\r\n  constructor(context: RootContext) {\r\n    this.context = context;\r\n  }\r\n\r\n  async isAuthenticated() {\r\n    const infuraAPIKey = this.context.configStore.getLocalConfig().infura;\r\n    const networkName = INFURA_NETWORK_NAMES[DEFAULT_ETH_CHAIN_ID];\r\n\r\n    if (infuraAPIKey && infuraAPIKey.length > 0) {\r\n      try {\r\n        const auth = await axios({\r\n          method: 'POST',\r\n          url: `https://${networkName}.infura.io/v3/${infuraAPIKey}`,\r\n          data: {\r\n            jsonrpc: '2.0',\r\n            method: 'eth_blockNumber',\r\n            params: [],\r\n            id: 1,\r\n          },\r\n        });\r\n        this.auth = auth.status === 200;\r\n      } catch (e) {\r\n        this.auth = false;\r\n      }\r\n    } else {\r\n      this.auth = false;\r\n    }\r\n  }\r\n\r\n  getRpcUrls() {\r\n    const infuraAPIKey = this.context.configStore.getLocalConfig().infura;\r\n    if (!infuraAPIKey) return null;\r\n\r\n    return ETH_NETWORKS_IDS.reduce((prevUrls, chainId) => {\r\n      const infuraNetworkName = INFURA_NETWORK_NAMES[chainId];\r\n\r\n      let infuraUrl = null;\r\n      if (infuraNetworkName) {\r\n        infuraUrl = `https://${infuraNetworkName}.infura.io/v3/${infuraAPIKey}`;\r\n      } else {\r\n        infuraUrl = DEFAULT_RPC_URLS[chainId];\r\n      }\r\n\r\n      prevUrls[chainId] = infuraUrl;\r\n      return prevUrls;\r\n    }, {});\r\n  }\r\n}\r\n","import RootContext from '../contexts';\r\nimport axios from 'axios';\r\nimport { ETH_NETWORKS_IDS, DEFAULT_ETH_CHAIN_ID } from 'provider/connectors';\r\nimport { ALCHEMY_NETWORK_URLS, DEFAULT_RPC_URLS } from 'utils';\r\n\r\nexport default class AlchemyService {\r\n  context: RootContext;\r\n  auth: Boolean = false;\r\n\r\n  constructor(context: RootContext) {\r\n    this.context = context;\r\n  }\r\n\r\n  async isAuthenticated() {\r\n    const alchemyAPIKey = this.context.configStore.getLocalConfig().alchemy;\r\n    const networkUrl = ALCHEMY_NETWORK_URLS[DEFAULT_ETH_CHAIN_ID];\r\n\r\n    if (alchemyAPIKey && alchemyAPIKey.length > 0) {\r\n      try {\r\n        const auth = await axios({\r\n          method: 'POST',\r\n          url: `https://${networkUrl}/v2/${alchemyAPIKey}`,\r\n          data: {\r\n            jsonrpc: '2.0',\r\n            method: 'eth_blockNumber',\r\n            params: [],\r\n            id: 1,\r\n          },\r\n        });\r\n        this.auth = auth.status === 200;\r\n      } catch (e) {\r\n        this.auth = false;\r\n      }\r\n    } else {\r\n      this.auth = false;\r\n    }\r\n  }\r\n\r\n  getRpcUrls() {\r\n    const alchemyAPIKey = this.context.configStore.getLocalConfig().alchemy;\r\n    if (!alchemyAPIKey) return null;\r\n\r\n    return ETH_NETWORKS_IDS.reduce((prevUrls, chainId) => {\r\n      const networkUrl = ALCHEMY_NETWORK_URLS[chainId];\r\n\r\n      let alchemyUrl = null;\r\n      if (networkUrl) {\r\n        alchemyUrl = `https://${networkUrl}/v2/${alchemyAPIKey}`;\r\n      } else {\r\n        alchemyUrl = DEFAULT_RPC_URLS[chainId];\r\n      }\r\n\r\n      prevUrls[chainId] = alchemyUrl;\r\n      return prevUrls;\r\n    }, {});\r\n  }\r\n}\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport RootContext from '../contexts';\r\n\r\nexport default class ModalStore {\r\n  walletModalVisible: boolean;\r\n  context: RootContext;\r\n\r\n  constructor(context) {\r\n    this.context = context;\r\n    this.walletModalVisible = false;\r\n    makeObservable(this, {\r\n      walletModalVisible: observable,\r\n      toggleWalletModal: action,\r\n      setWalletModalVisible: action,\r\n    });\r\n  }\r\n\r\n  @action toggleWalletModal() {\r\n    this.walletModalVisible = !this.walletModalVisible;\r\n  }\r\n\r\n  @action setWalletModalVisible(visible: boolean) {\r\n    this.walletModalVisible = visible;\r\n  }\r\n}\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport RootContext from '../contexts';\r\n\r\nimport { NETWORK_ASSET_SYMBOL, NETWORK_NAMES } from '../utils';\r\nimport { ZERO_ADDRESS, ANY_ADDRESS, ANY_FUNC_SIGNATURE } from '../utils';\r\n\r\nconst Web3 = require('web3');\r\nconst web3 = new Web3();\r\nconst appConfig = require('../config.json');\r\n\r\nexport default class ConfigStore {\r\n  darkMode: boolean;\r\n  context: RootContext;\r\n  appConfig: AppConfig = appConfig;\r\n\r\n  constructor(context) {\r\n    this.context = context;\r\n    this.darkMode = false;\r\n    makeObservable(this, {\r\n      darkMode: observable,\r\n      toggleDarkMode: action,\r\n    });\r\n  }\r\n\r\n  getActiveChainName() {\r\n    const activeWeb3 = this.context.providerStore.getActiveWeb3React();\r\n    return activeWeb3 ? NETWORK_NAMES[activeWeb3.chainId] : 'none';\r\n  }\r\n\r\n  getLocalConfig() {\r\n    if (localStorage.getItem('dxvote-config'))\r\n      return JSON.parse(localStorage.getItem('dxvote-config'));\r\n    else\r\n      return {\r\n        etherscan: '',\r\n        pinata: '',\r\n        rpcType: '',\r\n        infura: '',\r\n        alchemy: '',\r\n        pinOnStart: false,\r\n      };\r\n  }\r\n\r\n  setLocalConfig(config) {\r\n    localStorage.setItem('dxvote-config', JSON.stringify(config));\r\n  }\r\n\r\n  toggleDarkMode() {\r\n    this.darkMode = !this.darkMode;\r\n  }\r\n\r\n  @action setDarkMode(visible: boolean) {\r\n    this.darkMode = visible;\r\n  }\r\n\r\n  getCacheIPFSHash(networkName) {\r\n    return appConfig[networkName].cache.ipfsHash;\r\n  }\r\n\r\n  getSchemeTypeData(schemeAddress) {\r\n    const networkContracts = this.getNetworkContracts();\r\n\r\n    if (networkContracts.daostack) {\r\n      if (\r\n        networkContracts.daostack.schemeRegistrar &&\r\n        networkContracts.daostack.schemeRegistrar.address === schemeAddress\r\n      ) {\r\n        return {\r\n          type: 'SchemeRegistrar',\r\n          name: 'SchemeRegistrar',\r\n          contractToCall:\r\n            networkContracts.daostack.schemeRegistrar.contractToCall,\r\n          votingMachine: networkContracts.votingMachines.gen.address,\r\n          newProposalTopics:\r\n            networkContracts.daostack.schemeRegistrar.newProposalTopics,\r\n          voteParams: networkContracts.daostack.contributionReward.voteParams,\r\n          creationLogEncoding:\r\n            networkContracts.daostack.schemeRegistrar.creationLogEncoding,\r\n        };\r\n      } else if (\r\n        networkContracts.daostack.contributionReward &&\r\n        networkContracts.daostack.contributionReward.address === schemeAddress\r\n      ) {\r\n        return {\r\n          type: 'ContributionReward',\r\n          name: 'ContributionReward',\r\n          contractToCall:\r\n            networkContracts.daostack.contributionReward.contractToCall,\r\n          votingMachine: networkContracts.votingMachines.gen.address,\r\n          newProposalTopics:\r\n            networkContracts.daostack.contributionReward.newProposalTopics,\r\n          voteParams: networkContracts.daostack.contributionReward.voteParams,\r\n          creationLogEncoding:\r\n            networkContracts.daostack.contributionReward.creationLogEncoding,\r\n        };\r\n      } else if (\r\n        networkContracts.daostack.competitionScheme &&\r\n        networkContracts.daostack.competitionScheme.address === schemeAddress\r\n      ) {\r\n        return {\r\n          type: 'CompetitionScheme',\r\n          name: 'CompetitionScheme',\r\n          contractToCall:\r\n            networkContracts.daostack.competitionScheme.contractToCall,\r\n          votingMachine: networkContracts.votingMachines.gen.address,\r\n          newProposalTopics:\r\n            networkContracts.daostack.competitionScheme.newProposalTopics,\r\n          creationLogEncoding:\r\n            networkContracts.daostack.competitionScheme.creationLogEncoding,\r\n        };\r\n      } else if (\r\n        networkContracts.daostack.multicallSchemes &&\r\n        Object.keys(\r\n          networkContracts.daostack.multicallSchemes.addresses\r\n        ).indexOf(schemeAddress) > -1\r\n      ) {\r\n        return {\r\n          type: 'GenericMulticall',\r\n          votingMachine: networkContracts.votingMachines.gen.address,\r\n          contractToCall: ZERO_ADDRESS,\r\n          name: networkContracts.daostack.multicallSchemes.addresses[\r\n            schemeAddress\r\n          ].name,\r\n          newProposalTopics:\r\n            networkContracts.daostack.multicallSchemes.newProposalTopics,\r\n          voteParams:\r\n            networkContracts.daostack.multicallSchemes.addresses[schemeAddress]\r\n              .voteParams,\r\n          creationLogEncoding:\r\n            networkContracts.daostack.multicallSchemes.creationLogEncoding,\r\n        };\r\n      } else if (\r\n        networkContracts.daostack.genericSchemes &&\r\n        Object.keys(networkContracts.daostack.genericSchemes.addresses).indexOf(\r\n          schemeAddress\r\n        ) > -1\r\n      ) {\r\n        return {\r\n          type: 'GenericScheme',\r\n          votingMachine:\r\n            networkContracts.daostack.genericSchemes.addresses[schemeAddress]\r\n              .votingMachine,\r\n          contractToCall:\r\n            networkContracts.daostack.genericSchemes.addresses[schemeAddress]\r\n              .contractToCall,\r\n          name: networkContracts.daostack.genericSchemes.addresses[\r\n            schemeAddress\r\n          ].name,\r\n          newProposalTopics:\r\n            networkContracts.daostack.genericSchemes.newProposalTopics,\r\n          voteParams:\r\n            networkContracts.daostack.genericSchemes.addresses[schemeAddress]\r\n              .voteParams,\r\n          creationLogEncoding:\r\n            networkContracts.daostack.genericSchemes.creationLogEncoding,\r\n        };\r\n      } else if (\r\n        networkContracts.daostack.dxSchemes &&\r\n        Object.keys(networkContracts.daostack.dxSchemes).indexOf(\r\n          schemeAddress\r\n        ) > -1\r\n      ) {\r\n        return {\r\n          type: 'OldDxScheme',\r\n          votingMachine: networkContracts.votingMachines.gen.address,\r\n          contractToCall: ZERO_ADDRESS,\r\n          name: networkContracts.daostack.dxSchemes[schemeAddress],\r\n          newProposalTopics: [],\r\n          creationLogEncoding: [],\r\n        };\r\n      }\r\n    }\r\n    return {\r\n      type: 'WalletScheme',\r\n      votingMachine: networkContracts.votingMachines.dxd.address,\r\n      name: 'WalletScheme',\r\n      newProposalTopics: [\r\n        [\r\n          web3.utils.soliditySha3('ProposalStateChange(bytes32,uint256)'),\r\n          null,\r\n          '0x0000000000000000000000000000000000000000000000000000000000000001',\r\n        ],\r\n      ],\r\n      creationLogEncoding: [],\r\n    };\r\n  }\r\n\r\n  getTokenData(tokenAddress) {\r\n    return this.appConfig[this.getActiveChainName()].tokens.find(\r\n      tokenInFile => tokenInFile.address === tokenAddress\r\n    );\r\n  }\r\n\r\n  getNetworkContracts() {\r\n    return this.appConfig[this.getActiveChainName()].contracts;\r\n  }\r\n\r\n  getTokensOfNetwork() {\r\n    return this.appConfig[this.getActiveChainName()].tokens;\r\n  }\r\n\r\n  getTokensToFetchPrice() {\r\n    return this.appConfig[this.getActiveChainName()].tokens.filter(\r\n      tokenInFile => tokenInFile.fetchPrice\r\n    );\r\n  }\r\n\r\n  getProposalTemplates() {\r\n    return this.appConfig[this.getActiveChainName()].proposalTemplates;\r\n  }\r\n\r\n  getRecommendedCalls() {\r\n    const networkName = this.getActiveChainName();\r\n    const networkContracts = this.getNetworkContracts();\r\n    const networkTokens = this.getTokensOfNetwork();\r\n\r\n    let recommendedCalls: {\r\n      asset: string;\r\n      from: string;\r\n      to: string;\r\n      toName: string;\r\n      functionName: string;\r\n      params: {\r\n        type: string;\r\n        name: string;\r\n        defaultValue: string;\r\n        decimals?: number;\r\n      }[];\r\n      decodeText: string;\r\n    }[] = [\r\n      {\r\n        asset: ZERO_ADDRESS,\r\n        from: networkContracts.avatar,\r\n        to: networkContracts.controller,\r\n        toName: 'DXdao Controller',\r\n        functionName: 'mintReputation(uint256,address,address)',\r\n        params: [\r\n          { type: 'uint256', name: '_amount', defaultValue: '', decimals: 18 },\r\n          { type: 'address', name: '_to', defaultValue: '' },\r\n          {\r\n            type: 'address',\r\n            name: '_avatar',\r\n            defaultValue: networkContracts.avatar,\r\n          },\r\n        ],\r\n        decodeText: 'Mint of [PARAM_0] REP to [PARAM_1]',\r\n      },\r\n      {\r\n        asset: ZERO_ADDRESS,\r\n        from: networkContracts.avatar,\r\n        to: networkContracts.controller,\r\n        toName: 'DXdao Controller',\r\n        functionName: 'burnReputation(uint256,address,address)',\r\n        params: [\r\n          { type: 'uint256', name: '_amount', defaultValue: '', decimals: 18 },\r\n          { type: 'address', name: '_from', defaultValue: '' },\r\n          {\r\n            type: 'address',\r\n            name: '_avatar',\r\n            defaultValue: networkContracts.avatar,\r\n          },\r\n        ],\r\n        decodeText: 'Burn of [PARAM_0] REP to [PARAM_1]',\r\n      },\r\n      {\r\n        asset: ZERO_ADDRESS,\r\n        from: networkContracts.avatar,\r\n        to: networkContracts.controller,\r\n        toName: 'DXdao Controller',\r\n        functionName: 'registerScheme(address,bytes32,bytes4,address)',\r\n        params: [\r\n          { type: 'address', name: '_scheme', defaultValue: '' },\r\n          { type: 'bytes32', name: '_paramsHash', defaultValue: '' },\r\n          { type: 'bytes4', name: '_permissions', defaultValue: '' },\r\n          {\r\n            type: 'address',\r\n            name: '_avatar',\r\n            defaultValue: networkContracts.avatar,\r\n          },\r\n        ],\r\n        decodeText:\r\n          'Register scheme [PARAM_0] with params hash [PARAM_1] and permissions [PARAM_2]',\r\n      },\r\n      {\r\n        asset: ZERO_ADDRESS,\r\n        from: networkContracts.avatar,\r\n        to: networkContracts.controller,\r\n        toName: 'DXdao Controller',\r\n        functionName: 'unregisterScheme(address,address)',\r\n        params: [\r\n          { type: 'address', name: '_scheme', defaultValue: '' },\r\n          {\r\n            type: 'address',\r\n            name: '_avatar',\r\n            defaultValue: networkContracts.avatar,\r\n          },\r\n        ],\r\n        decodeText: 'Unregister scheme [PARAM_0]',\r\n      },\r\n      {\r\n        asset: ZERO_ADDRESS,\r\n        from: networkContracts.avatar,\r\n        to: networkContracts.controller,\r\n        toName: 'DXdao Controller',\r\n        functionName: 'genericCall(address,bytes,addres,uint256)',\r\n        params: [\r\n          { type: 'address', name: '_contract', defaultValue: '' },\r\n          { type: 'bytes', name: '_data', defaultValue: '' },\r\n          {\r\n            type: 'address',\r\n            name: '_avatar',\r\n            defaultValue: networkContracts.avatar,\r\n          },\r\n          { type: 'uint256', name: '_value', defaultValue: '' },\r\n        ],\r\n        decodeText:\r\n          'Generic call to [PARAM_0] with data [PARAM_1] and value [PARAM_2] ' +\r\n          NETWORK_ASSET_SYMBOL[networkName],\r\n      },\r\n      {\r\n        asset: ZERO_ADDRESS,\r\n        from: networkContracts.avatar,\r\n        to: networkContracts.controller,\r\n        toName: 'DXdao Controller',\r\n        functionName: 'externalTokenTransfer(address,address,uint256,address)',\r\n        params: [\r\n          { type: 'address', name: '_externalToken', defaultValue: '' },\r\n          { type: 'address', name: '_to', defaultValue: '' },\r\n          { type: 'uint256', name: '_value', defaultValue: '' },\r\n          {\r\n            type: 'address',\r\n            name: '_avatar',\r\n            defaultValue: networkContracts.avatar,\r\n          },\r\n        ],\r\n        decodeText:\r\n          'External token transfer of token [PARAM_0] with value [PARAM_2] to [PARAM_1]',\r\n      },\r\n      {\r\n        asset: ZERO_ADDRESS,\r\n        from: networkContracts.avatar,\r\n        to: networkContracts.controller,\r\n        toName: 'DXdao Controller',\r\n        functionName:\r\n          'externalTokenTransferFrom(address,address,address,uint256,address)',\r\n        params: [\r\n          { type: 'address', name: '_externalToken', defaultValue: '' },\r\n          { type: 'address', name: '_from', defaultValue: '' },\r\n          { type: 'address', name: '_to', defaultValue: '' },\r\n          { type: 'uint256', name: '_value', defaultValue: '' },\r\n          {\r\n            type: 'address',\r\n            name: '_avatar',\r\n            defaultValue: networkContracts.avatar,\r\n          },\r\n        ],\r\n        decodeText:\r\n          'External token transferFrom of token [PARAM_0] with value [PARAM_3] from [PARAM_1] to [PARAM_2]',\r\n      },\r\n      {\r\n        asset: ZERO_ADDRESS,\r\n        from: networkContracts.avatar,\r\n        to: networkContracts.controller,\r\n        toName: 'DXdao Controller',\r\n        functionName: 'externalTokenApproval(address,address,uint256,address)',\r\n        params: [\r\n          { type: 'address', name: '_externalToken', defaultValue: '' },\r\n          { type: 'address', name: '_spender', defaultValue: '' },\r\n          { type: 'uint256', name: '_value', defaultValue: '' },\r\n          {\r\n            type: 'address',\r\n            name: '_avatar',\r\n            defaultValue: networkContracts.avatar,\r\n          },\r\n        ],\r\n        decodeText:\r\n          'External token approval of token [PARAM_0] from [PARAM_1] with value [PARAM_3] to [PARAM_2]',\r\n      },\r\n      {\r\n        asset: ZERO_ADDRESS,\r\n        from: networkContracts.avatar,\r\n        to: networkContracts.controller,\r\n        toName: 'DXdao Controller',\r\n        functionName: 'sendEther(uint256,address,address)',\r\n        params: [\r\n          {\r\n            type: 'uint256',\r\n            name: '_amountInWei',\r\n            defaultValue: '',\r\n            decimals: 18,\r\n          },\r\n          { type: 'address', name: '_to', defaultValue: '' },\r\n          {\r\n            type: 'address',\r\n            name: '_avatar',\r\n            defaultValue: networkContracts.avatar,\r\n          },\r\n        ],\r\n        decodeText:\r\n          'Transfer of [PARAM_0] ' +\r\n          NETWORK_ASSET_SYMBOL[networkName] +\r\n          ' to [PARAM_1] ',\r\n      },\r\n      {\r\n        asset: ZERO_ADDRESS,\r\n        from: networkContracts.avatar,\r\n        to: networkContracts.permissionRegistry,\r\n        toName: 'Permission Registry',\r\n        functionName: 'setTimeDelay(uint256)',\r\n        params: [{ type: 'uint256', name: 'newTimeDelay', defaultValue: '' }],\r\n        decodeText: 'Set time delay to [PARAM_0] seconds',\r\n      },\r\n      {\r\n        asset: ZERO_ADDRESS,\r\n        from: networkContracts.avatar,\r\n        to: networkContracts.permissionRegistry,\r\n        toName: 'Permission Registry',\r\n        functionName:\r\n          'setAdminPermission(address,address,address,bytes4,uint256,bool)',\r\n        params: [\r\n          { type: 'address', name: 'asset', defaultValue: ZERO_ADDRESS },\r\n          { type: 'address', name: 'from', defaultValue: '' },\r\n          { type: 'address', name: 'to', defaultValue: '' },\r\n          {\r\n            type: 'bytes4',\r\n            name: 'functionSignature',\r\n            defaultValue: ANY_FUNC_SIGNATURE,\r\n          },\r\n          { type: 'uint256', name: 'valueAllowed', defaultValue: '0' },\r\n          { type: 'bool', name: 'allowed', defaultValue: 'true' },\r\n        ],\r\n        decodeText:\r\n          'Set [PARAM_5] admin permission in asset [PARAM_0] from [PARAM_1] to [PARAM_2] with function signature [PARAM_3] and value [PARAM_4]',\r\n      },\r\n      {\r\n        asset: ZERO_ADDRESS,\r\n        from: ANY_ADDRESS,\r\n        to: networkContracts.permissionRegistry,\r\n        toName: 'Permission Registry',\r\n        functionName: 'setPermission(address,address,bytes4,uint256,bool)',\r\n        params: [\r\n          { type: 'address', name: 'asset', defaultValue: ZERO_ADDRESS },\r\n          { type: 'address', name: 'to', defaultValue: '' },\r\n          { type: 'bytes4', name: 'functionSignature', defaultValue: '' },\r\n          { type: 'uint256', name: 'valueAllowed', defaultValue: '' },\r\n          { type: 'bool', name: 'allowed', defaultValue: '' },\r\n        ],\r\n        decodeText:\r\n          'Set [PARAM_5] permission in asset [PARAM_0] from [FROM] to [PARAM_2] with function signature [PARAM_3] and value [PARAM_4]',\r\n      },\r\n    ];\r\n\r\n    if (networkContracts.utils.dxdVestingFactory) {\r\n      recommendedCalls.push({\r\n        asset: networkContracts.utils.dxdVestingFactory,\r\n        from: networkContracts.avatar,\r\n        to: networkContracts.utils.dxdVestingFactory,\r\n        toName: 'DXD Vesting Factory',\r\n        functionName: 'create(address, uint256, uint256, uint256, uint256)',\r\n        params: [\r\n          { type: 'address', name: 'beneficiary', defaultValue: '' },\r\n          { type: 'uint256', name: 'start', defaultValue: '' },\r\n          { type: 'uint256', name: 'cliffDuration', defaultValue: '' },\r\n          { type: 'uint256', name: 'duration', defaultValue: '' },\r\n          { type: 'uint256', name: 'value', defaultValue: '' },\r\n        ],\r\n        decodeText:\r\n          'Create new vesting contract with beneficiary [PARAM_0], start date  of [PARAM_1], cliff duration of [PARAMS_2], duration of [PARAM_3] and value of [PARAM_4]',\r\n      });\r\n      if (networkContracts.utils.dxDaoNFT) {\r\n        recommendedCalls.push({\r\n          asset: ZERO_ADDRESS,\r\n          from: networkContracts.avatar,\r\n          to: networkContracts.utils.dxDaoNFT,\r\n          toName: 'DXdao NFT',\r\n          functionName: 'mint(address, string)',\r\n          params: [\r\n            {\r\n              type: 'address',\r\n              name: 'recipient',\r\n              defaultValue: networkContracts.avatar,\r\n            },\r\n            { type: 'string', name: 'tokenURI', defaultValue: '' },\r\n          ],\r\n          decodeText: 'Mint NFT to address [PARAM_0] with token URI [PARAM_1]',\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.appConfig[networkName].recommendedCalls &&\r\n      this.appConfig[networkName].recommendedCalls.length > 0\r\n    )\r\n      recommendedCalls = recommendedCalls.concat(\r\n        this.appConfig[networkName].recommendedCalls\r\n      );\r\n\r\n    networkTokens.map(networkToken => {\r\n      recommendedCalls.push({\r\n        asset: networkToken.address,\r\n        from: ANY_ADDRESS,\r\n        to: networkToken.address,\r\n        toName: `ERC20 (${networkToken.symbol})`,\r\n        functionName: 'transfer(address,uint256)',\r\n        params: [\r\n          { type: 'address', name: 'to', defaultValue: '' },\r\n          {\r\n            type: 'uint256',\r\n            name: 'value',\r\n            defaultValue: '0',\r\n            decimals: networkToken.decimals,\r\n          },\r\n        ],\r\n        decodeText:\r\n          'Transfer [PARAM_1] ' + networkToken.symbol + ' to [PARAM_0]',\r\n      });\r\n\r\n      recommendedCalls.push({\r\n        asset: networkToken.address,\r\n        from: ANY_ADDRESS,\r\n        to: networkToken.address,\r\n        toName: `ERC20 ${networkToken.symbol}`,\r\n        functionName: 'approve(address,uint256)',\r\n        params: [\r\n          { type: 'address', name: 'to', defaultValue: '' },\r\n          {\r\n            type: 'uint256',\r\n            name: 'value',\r\n            defaultValue: '0',\r\n            decimals: networkToken.decimals,\r\n          },\r\n        ],\r\n        decodeText:\r\n          'Approve [PARAM_1] ' + networkToken.symbol + ' to [PARAM_0]',\r\n      });\r\n    });\r\n\r\n    return recommendedCalls;\r\n  }\r\n}\r\n","import RootContext from '../contexts';\r\nimport { action, makeObservable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport {\r\n  BigNumber,\r\n  ZERO_ADDRESS,\r\n  ANY_ADDRESS,\r\n  ANY_FUNC_SIGNATURE,\r\n  MAX_UINT,\r\n  bnum,\r\n  decodeProposalStatus,\r\n  VoteDecision,\r\n  VotingMachineProposalState,\r\n  normalizeBalance,\r\n  formatPercentage,\r\n} from '../utils';\r\n\r\nexport default class DaoStore {\r\n  daoCache: DaoNetworkCache;\r\n  context: RootContext;\r\n\r\n  constructor(context) {\r\n    this.context = context;\r\n\r\n    makeObservable(this, {\r\n      setCache: action,\r\n    });\r\n  }\r\n\r\n  // Parse bignnumbers\r\n  parseCache(unparsedCache: DaoNetworkCache): DaoNetworkCache {\r\n    unparsedCache.daoInfo.ethBalance = bnum(unparsedCache.daoInfo.ethBalance);\r\n    unparsedCache.daoInfo.repEvents.map((repEvent, i) => {\r\n      unparsedCache.daoInfo.repEvents[i].amount = bnum(repEvent.amount);\r\n    });\r\n    Object.keys(unparsedCache.schemes).map(schemeAddress => {\r\n      unparsedCache.schemes[schemeAddress].ethBalance = bnum(\r\n        unparsedCache.schemes[schemeAddress].ethBalance\r\n      );\r\n    });\r\n    Object.keys(unparsedCache.callPermissions).map(asset => {\r\n      Object.keys(unparsedCache.callPermissions[asset]).map(from => {\r\n        Object.keys(unparsedCache.callPermissions[asset][from]).map(to => {\r\n          Object.keys(unparsedCache.callPermissions[asset][from][to]).map(\r\n            functionSignature => {\r\n              unparsedCache.callPermissions[asset][from][to][\r\n                functionSignature\r\n              ].value = bnum(\r\n                unparsedCache.callPermissions[asset][from][to][\r\n                  functionSignature\r\n                ].value\r\n              );\r\n            }\r\n          );\r\n        });\r\n      });\r\n    });\r\n    Object.keys(unparsedCache.proposals).map(proposalId => {\r\n      unparsedCache.proposals[proposalId].values = unparsedCache.proposals[\r\n        proposalId\r\n      ].values.map(value => {\r\n        return bnum(value);\r\n      });\r\n\r\n      unparsedCache.proposals[proposalId].stateInScheme =\r\n        unparsedCache.proposals[proposalId].stateInScheme;\r\n      unparsedCache.proposals[proposalId].stateInVotingMachine =\r\n        unparsedCache.proposals[proposalId].stateInVotingMachine;\r\n      unparsedCache.proposals[proposalId].currentBoostedVotePeriodLimit = bnum(\r\n        unparsedCache.proposals[proposalId].currentBoostedVotePeriodLimit\r\n      );\r\n      unparsedCache.proposals[proposalId].daoBountyRemain = bnum(\r\n        unparsedCache.proposals[proposalId].daoBountyRemain\r\n      );\r\n      unparsedCache.proposals[proposalId].daoBounty = bnum(\r\n        unparsedCache.proposals[proposalId].daoBounty\r\n      );\r\n      unparsedCache.proposals[proposalId].totalStakes = bnum(\r\n        unparsedCache.proposals[proposalId].totalStakes\r\n      );\r\n      unparsedCache.proposals[proposalId].confidenceThreshold = bnum(\r\n        unparsedCache.proposals[proposalId].confidenceThreshold\r\n      );\r\n      unparsedCache.proposals[proposalId].secondsFromTimeOutTillExecuteBoosted =\r\n        bnum(\r\n          unparsedCache.proposals[proposalId]\r\n            .secondsFromTimeOutTillExecuteBoosted\r\n        );\r\n      unparsedCache.proposals[proposalId].submittedTime = bnum(\r\n        unparsedCache.proposals[proposalId].submittedTime\r\n      );\r\n      unparsedCache.proposals[proposalId].preBoostedPhaseTime = bnum(\r\n        unparsedCache.proposals[proposalId].preBoostedPhaseTime\r\n      );\r\n      unparsedCache.proposals[proposalId].boostedPhaseTime = bnum(\r\n        unparsedCache.proposals[proposalId].boostedPhaseTime\r\n      );\r\n      unparsedCache.proposals[proposalId].positiveVotes = bnum(\r\n        unparsedCache.proposals[proposalId].positiveVotes\r\n      );\r\n      unparsedCache.proposals[proposalId].negativeVotes = bnum(\r\n        unparsedCache.proposals[proposalId].negativeVotes\r\n      );\r\n      unparsedCache.proposals[proposalId].preBoostedPositiveVotes = bnum(\r\n        unparsedCache.proposals[proposalId].preBoostedPositiveVotes\r\n      );\r\n      unparsedCache.proposals[proposalId].preBoostedNegativeVotes = bnum(\r\n        unparsedCache.proposals[proposalId].preBoostedNegativeVotes\r\n      );\r\n      unparsedCache.proposals[proposalId].positiveStakes = bnum(\r\n        unparsedCache.proposals[proposalId].positiveStakes\r\n      );\r\n      unparsedCache.proposals[proposalId].negativeStakes = bnum(\r\n        unparsedCache.proposals[proposalId].negativeStakes\r\n      );\r\n    });\r\n\r\n    Object.keys(unparsedCache.votingMachines).map(votingMachineAddress => {\r\n      Object.keys(\r\n        unparsedCache.votingMachines[votingMachineAddress].votingParameters\r\n      ).map(paramsHash => {\r\n        const unparsedParams =\r\n          unparsedCache.votingMachines[votingMachineAddress].votingParameters[\r\n            paramsHash\r\n          ];\r\n        unparsedCache.votingMachines[votingMachineAddress].votingParameters[\r\n          paramsHash\r\n        ] = {\r\n          queuedVoteRequiredPercentage: bnum(\r\n            unparsedParams.queuedVoteRequiredPercentage\r\n          ),\r\n          queuedVotePeriodLimit: bnum(unparsedParams.queuedVotePeriodLimit),\r\n          boostedVotePeriodLimit: bnum(unparsedParams.boostedVotePeriodLimit),\r\n          preBoostedVotePeriodLimit: bnum(\r\n            unparsedParams.preBoostedVotePeriodLimit\r\n          ),\r\n          thresholdConst: bnum(unparsedParams.thresholdConst),\r\n          limitExponentValue: bnum(unparsedParams.limitExponentValue),\r\n          quietEndingPeriod: bnum(unparsedParams.quietEndingPeriod),\r\n          proposingRepReward: bnum(unparsedParams.proposingRepReward),\r\n          votersReputationLossRatio: bnum(\r\n            unparsedParams.votersReputationLossRatio\r\n          ),\r\n          minimumDaoBounty: bnum(unparsedParams.minimumDaoBounty),\r\n          daoBountyConst: bnum(unparsedParams.daoBountyConst),\r\n          activationTime: bnum(unparsedParams.activationTime),\r\n        };\r\n      });\r\n    });\r\n    return unparsedCache;\r\n  }\r\n\r\n  getCache(): DaoNetworkCache {\r\n    return this.daoCache;\r\n  }\r\n\r\n  setCache(newNetworkCache: DaoNetworkCache) {\r\n    this.daoCache = this.parseCache(newNetworkCache);\r\n    console.debug('Cache SET]', this.daoCache);\r\n  }\r\n\r\n  getDaoInfo(): DaoInfo {\r\n    return this.getCache().daoInfo;\r\n  }\r\n\r\n  getSchemeProposalsByName(_schemeName: string): Proposal[] {\r\n    let schemeAddress;\r\n    for (const _schemeAddress in this.getCache().schemes) {\r\n      if (this.getCache().schemes[_schemeAddress].name === _schemeName) {\r\n        schemeAddress = _schemeAddress;\r\n      }\r\n    }\r\n    let proposals = [];\r\n    for (const proposalId in this.getCache().proposals) {\r\n      if (this.getCache().proposals[proposalId].scheme === schemeAddress) {\r\n        proposals.push(this.getProposal(proposalId));\r\n      }\r\n    }\r\n    return proposals;\r\n  }\r\n\r\n  getSchemeByName(_schemeName: string): Scheme {\r\n    let schemeAddress;\r\n    for (const _schemeAddress in this.getCache().schemes) {\r\n      if (this.getCache().schemes[_schemeAddress].name === _schemeName) {\r\n        schemeAddress = _schemeAddress;\r\n      }\r\n    }\r\n    let schemeInfo;\r\n    for (const _schemeAddress in this.getCache().schemes) {\r\n      if (this.getCache().schemes[_schemeAddress].name === _schemeName) {\r\n        schemeInfo = this.getCache().schemes[schemeAddress];\r\n        break;\r\n      }\r\n    }\r\n    return schemeInfo;\r\n  }\r\n\r\n  getSchemeProposals(schemeAddress: string): Proposal[] {\r\n    let proposals = [];\r\n    for (const proposalId in this.getCache().proposals) {\r\n      if (this.getCache().proposals[proposalId].scheme === schemeAddress) {\r\n        proposals.push(this.getProposal(proposalId));\r\n      }\r\n    }\r\n    return proposals;\r\n  }\r\n\r\n  getAmountOfProposalsPreBoostedInScheme(schemeAddress: string): number {\r\n    return this.getSchemeProposals(schemeAddress).filter(proposal => {\r\n      return proposal.stateInVotingMachine === 4;\r\n    }).length;\r\n  }\r\n\r\n  getGovernanceInfo(): any {\r\n    let users = {},\r\n      totalPositiveVotes = 0,\r\n      totalPositiveVotesAmount = bnum(0),\r\n      totalNegativeVotes = 0,\r\n      totalNegativeVotesAmount = bnum(0),\r\n      totalPositiveStakes = 0,\r\n      totalPositiveStakesAmount = bnum(0),\r\n      totalNegativeStakes = 0,\r\n      totalNegativeStakesAmount = bnum(0),\r\n      totalProposalsCreated = 0;\r\n    const cache = this.getCache();\r\n\r\n    let repUsers = {};\r\n    let repEvents = [];\r\n    let repTotalSupply = bnum(0);\r\n    let blockNumber = 0;\r\n    for (let i = 0; i < cache.daoInfo.repEvents.length; i++) {\r\n      if (cache.daoInfo.repEvents[i].event === 'Mint') {\r\n        repTotalSupply = repTotalSupply.plus(cache.daoInfo.repEvents[i].amount);\r\n        if (repUsers[cache.daoInfo.repEvents[i].account]) {\r\n          repUsers[cache.daoInfo.repEvents[i].account] = repUsers[\r\n            cache.daoInfo.repEvents[i].account\r\n          ].plus(cache.daoInfo.repEvents[i].amount);\r\n        } else {\r\n          repUsers[cache.daoInfo.repEvents[i].account] =\r\n            cache.daoInfo.repEvents[i].amount;\r\n        }\r\n      } else if (cache.daoInfo.repEvents[i].event === 'Burn') {\r\n        repTotalSupply = repTotalSupply.minus(\r\n          cache.daoInfo.repEvents[i].amount\r\n        );\r\n        if (repUsers[cache.daoInfo.repEvents[i].account]) {\r\n          repUsers[cache.daoInfo.repEvents[i].account] = repUsers[\r\n            cache.daoInfo.repEvents[i].account\r\n          ].minus(cache.daoInfo.repEvents[i].amount);\r\n        } else {\r\n          console.log('ERROR on duplicated REP');\r\n        }\r\n      }\r\n\r\n      if (cache.daoInfo.repEvents[i].l1BlockNumber > blockNumber) {\r\n        blockNumber = cache.daoInfo.repEvents[i].l1BlockNumber;\r\n        repEvents.push([\r\n          blockNumber,\r\n          bnum(repTotalSupply)\r\n            .div(10 ** 18)\r\n            .toNumber(),\r\n        ]);\r\n      }\r\n    }\r\n    let rep = [];\r\n    for (const userAddress in repUsers) {\r\n      rep.push([\r\n        userAddress,\r\n        repUsers[userAddress].div(bnum(repTotalSupply)).toNumber(),\r\n      ]);\r\n    }\r\n    rep = _.sortBy(rep, [\r\n      function (o) {\r\n        return o[1];\r\n      },\r\n    ]);\r\n    rep.unshift(['User Address', 'REP %']);\r\n    repEvents.unshift(['Block', 'Total Rep']);\r\n\r\n    Object.keys(cache.votingMachines).map(votingMachineAddress => {\r\n      cache.votingMachines[votingMachineAddress].events.votes.map(vote => {\r\n        if (!users[vote.voter])\r\n          users[vote.voter] = {\r\n            correctVotes: 0,\r\n            wrongVotes: 0,\r\n            correctStakes: 0,\r\n            wrongStakes: 0,\r\n            proposals: 0,\r\n            totalVoted: bnum(0),\r\n            totalStaked: bnum(0),\r\n            score: 0,\r\n          };\r\n\r\n        if (!cache.proposals[vote.proposalId]) {\r\n          console.debug('MISSING PROPOSAL', vote.proposalId);\r\n        } else {\r\n          if (vote.vote === 1) {\r\n            totalPositiveVotes++;\r\n            totalPositiveVotesAmount = totalPositiveVotesAmount.plus(\r\n              bnum(vote.amount)\r\n            );\r\n          } else {\r\n            totalNegativeVotes++;\r\n            totalNegativeVotesAmount = totalNegativeVotesAmount.plus(\r\n              bnum(vote.amount)\r\n            );\r\n          }\r\n          if (cache.proposals[vote.proposalId].winningVote === vote.vote) {\r\n            users[vote.voter].correctVotes++;\r\n            users[vote.voter].totalVoted = users[vote.voter].totalVoted.plus(\r\n              bnum(vote.amount)\r\n            );\r\n            users[vote.voter].score += 3;\r\n          } else {\r\n            users[vote.voter].wrongVotes++;\r\n            users[vote.voter].totalVoted = users[vote.voter].totalVoted.plus(\r\n              bnum(vote.amount)\r\n            );\r\n            users[vote.voter].score += 1;\r\n          }\r\n        }\r\n      });\r\n      cache.votingMachines[votingMachineAddress].events.stakes.map(stake => {\r\n        if (!users[stake.staker])\r\n          users[stake.staker] = {\r\n            correctVotes: 0,\r\n            wrongVotes: 0,\r\n            correctStakes: 0,\r\n            wrongStakes: 0,\r\n            proposals: 0,\r\n            totalVoted: bnum(0),\r\n            totalStaked: bnum(0),\r\n            score: 0,\r\n          };\r\n\r\n        if (!cache.proposals[stake.proposalId]) {\r\n          console.debug('MISSING PROPOSAL', stake.proposalId);\r\n        } else {\r\n          if (stake.vote === 1) {\r\n            totalPositiveStakes++;\r\n            totalPositiveStakesAmount = totalPositiveStakesAmount.plus(\r\n              bnum(stake.amount)\r\n            );\r\n          } else {\r\n            totalNegativeStakes++;\r\n            totalNegativeStakesAmount = totalNegativeStakesAmount.plus(\r\n              bnum(stake.amount)\r\n            );\r\n          }\r\n\r\n          if (cache.proposals[stake.proposalId].winningVote === stake.vote) {\r\n            users[stake.staker].correctStakes++;\r\n            users[stake.staker].totalStaked = users[\r\n              stake.staker\r\n            ].totalStaked.plus(bnum(stake.amount));\r\n            users[stake.staker].score += 1;\r\n          } else {\r\n            users[stake.staker].wrongStakes++;\r\n            users[stake.staker].totalStaked = users[\r\n              stake.staker\r\n            ].totalStaked.plus(bnum(stake.amount));\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    Object.keys(cache.proposals).map(proposalId => {\r\n      const proposalCreator = cache.proposals[proposalId].proposer;\r\n\r\n      if (proposalCreator !== '0x0000000000000000000000000000000000000000') {\r\n        if (!users[proposalCreator])\r\n          users[proposalCreator] = {\r\n            correctVotes: 0,\r\n            wrongVotes: 0,\r\n            correctStakes: 0,\r\n            wrongStakes: 0,\r\n            proposals: 0,\r\n            totalVoted: bnum(0),\r\n            totalStaked: bnum(0),\r\n            score: 0,\r\n          };\r\n\r\n        const score = cache.proposals[proposalId].positiveVotes\r\n          .plus(cache.proposals[proposalId].negativeVotes)\r\n          .div(this.getRepAt().totalSupply)\r\n          .div('0.20')\r\n          .times('10')\r\n          .toFixed(2);\r\n        users[proposalCreator].score += Math.min(\r\n          Math.min(Number(score), 1),\r\n          30\r\n        );\r\n        users[proposalCreator].proposals++;\r\n      } else {\r\n        console.debug(\r\n          'Couldnt get proposer for proposal',\r\n          proposalId,\r\n          'in scheme',\r\n          cache.schemes[cache.proposals[proposalId].scheme].name,\r\n          'in transaction',\r\n          cache.proposals[proposalId].creationEvent.tx\r\n        );\r\n      }\r\n      totalProposalsCreated++;\r\n    });\r\n\r\n    return {\r\n      totalPositiveVotes,\r\n      totalPositiveVotesAmount,\r\n      totalNegativeVotes,\r\n      totalNegativeVotesAmount,\r\n      totalPositiveStakes,\r\n      totalPositiveStakesAmount,\r\n      totalNegativeStakes,\r\n      totalNegativeStakesAmount,\r\n      totalProposalsCreated,\r\n      rep,\r\n      repEvents,\r\n      ranking: _.orderBy(\r\n        Object.keys(users).map(key =>\r\n          Object.assign({ address: key }, users[key])\r\n        ),\r\n        ['score'],\r\n        ['desc']\r\n      ),\r\n    };\r\n  }\r\n\r\n  getAllProposals(): Proposal[] {\r\n    const allProposals = Object.keys(this.getCache().proposals).map(\r\n      proposalId => {\r\n        return this.getCache().proposals[proposalId];\r\n      }\r\n    );\r\n    return _.orderBy(\r\n      allProposals,\r\n      [\r\n        'creationEvent.l1BlockNumber',\r\n        'creationEvent.l2BlockNumber',\r\n        'creationEvent.transactionIndex',\r\n        'creationEvent.logIndex',\r\n      ],\r\n      ['asc', 'asc', 'asc', 'asc']\r\n    );\r\n  }\r\n\r\n  getAllSchemes(): Scheme[] {\r\n    const schemeAddresses = Object.keys(this.getCache().schemes);\r\n    return schemeAddresses.map(schemeAddress => {\r\n      return this.getCache().schemes[schemeAddress];\r\n    });\r\n  }\r\n\r\n  getProposal(proposalId): Proposal {\r\n    return this.getCache().proposals[proposalId];\r\n  }\r\n\r\n  getScheme(schemeAddress): Scheme {\r\n    return this.getCache().schemes[schemeAddress];\r\n  }\r\n\r\n  getVotingMachineOfProposal(proposalId): string {\r\n    return this.getCache().schemes[this.getCache().proposals[proposalId].scheme]\r\n      .votingMachine;\r\n  }\r\n\r\n  getVotingParametersOfProposal(proposalId): VotingMachineParameters {\r\n    return this.getCache().votingMachines[\r\n      this.getVotingMachineOfProposal(proposalId)\r\n    ].votingParameters[this.getCache().proposals[proposalId].paramsHash];\r\n  }\r\n\r\n  getVotingParametersOfScheme(schemeAddress): VotingMachineParameters {\r\n    const scheme = this.getCache().schemes[schemeAddress];\r\n    return this.getCache().votingMachines[scheme.votingMachine]\r\n      .votingParameters[scheme.paramsHash];\r\n  }\r\n\r\n  getProposalEvents(proposalId): {\r\n    votes: Vote[];\r\n    stakes: Stake[];\r\n    redeems: Redeem[];\r\n    redeemsRep: RedeemRep[];\r\n    redeemsDaoBounty: RedeemDaoBounty[];\r\n    stateChanges: ProposalStateChange[];\r\n    history: {\r\n      text: string;\r\n      event: any;\r\n    }[];\r\n  } {\r\n    const proposalEvents = {\r\n      votes: this.getVotesOfProposal(proposalId),\r\n      stakes: this.getStakesOfProposal(proposalId),\r\n      redeems: this.getRedeemsOfProposal(proposalId),\r\n      redeemsRep: this.getRedeemsRepOfProposal(proposalId),\r\n      redeemsDaoBounty: this.getRedeemsDaoBountyOfProposal(proposalId),\r\n      stateChanges: this.getProposalStateChanges(proposalId),\r\n    };\r\n\r\n    const proposal = this.getProposal(proposalId);\r\n    const totalRep = this.getRepAt().totalSupply;\r\n\r\n    let history = proposalEvents.votes\r\n      .map(event => {\r\n        return {\r\n          text: `Vote from ${event.voter} of ${bnum(event.amount)\r\n            .times('100')\r\n            .div(totalRep)\r\n            .toFixed(4)} % REP on decision ${VoteDecision[event.vote]}`,\r\n          event: {\r\n            proposalId: event.proposalId,\r\n            tx: event.tx,\r\n            block: event.l1BlockNumber,\r\n            transactionIndex: event.transactionIndex,\r\n            logIndex: event.logIndex,\r\n            timestamp: event.timestamp,\r\n          },\r\n        };\r\n      })\r\n      .concat(\r\n        proposalEvents.stakes.map(event => {\r\n          return {\r\n            text: `Stake from ${event.staker} of ${normalizeBalance(\r\n              event.amount\r\n            ).toString()} staking token on decision ${\r\n              VoteDecision[event.vote]\r\n            }`,\r\n            event: {\r\n              proposalId: event.proposalId,\r\n              tx: event.tx,\r\n              block: event.l1BlockNumber,\r\n              transactionIndex: event.transactionIndex,\r\n              logIndex: event.logIndex,\r\n              timestamp: event.timestamp,\r\n            },\r\n          };\r\n        })\r\n      )\r\n      .concat(\r\n        proposalEvents.redeems.map(event => {\r\n          return {\r\n            text: `Staking token Redeem from ${event.beneficiary} of ${event.amount}`,\r\n            event: {\r\n              proposalId: event.proposalId,\r\n              tx: event.tx,\r\n              block: event.l1BlockNumber,\r\n              transactionIndex: event.transactionIndex,\r\n              logIndex: event.logIndex,\r\n              timestamp: event.timestamp,\r\n            },\r\n          };\r\n        })\r\n      )\r\n      .concat(\r\n        proposalEvents.redeemsRep.map(event => {\r\n          return {\r\n            text: `REP Redeem from ${event.beneficiary} of ${event.amount}`,\r\n            event: {\r\n              proposalId: event.proposalId,\r\n              tx: event.tx,\r\n              block: event.l1BlockNumber,\r\n              transactionIndex: event.transactionIndex,\r\n              logIndex: event.logIndex,\r\n              timestamp: event.timestamp,\r\n            },\r\n          };\r\n        })\r\n      )\r\n      .concat(\r\n        proposalEvents.redeemsDaoBounty.map(event => {\r\n          return {\r\n            text: `Staking token Redeem from ${event.beneficiary} of ${event.amount}`,\r\n            event: {\r\n              proposalId: event.proposalId,\r\n              tx: event.tx,\r\n              block: event.l1BlockNumber,\r\n              transactionIndex: event.transactionIndex,\r\n              logIndex: event.logIndex,\r\n              timestamp: event.timestamp,\r\n            },\r\n          };\r\n        })\r\n      )\r\n      .concat(\r\n        proposalEvents.stateChanges.map(event => {\r\n          return {\r\n            text: `Proposal change to state ${\r\n              VotingMachineProposalState[event.state]\r\n            }`,\r\n            event: {\r\n              proposalId: event.proposalId,\r\n              tx: event.tx,\r\n              block: event.l1BlockNumber,\r\n              transactionIndex: event.transactionIndex,\r\n              logIndex: event.logIndex,\r\n              timestamp: event.timestamp,\r\n            },\r\n          };\r\n        })\r\n      );\r\n    history.push({\r\n      text: `Proposal created by ${proposal.proposer}`,\r\n      event: {\r\n        proposalId: proposal.id,\r\n        tx: proposal.creationEvent.tx,\r\n        block: proposal.creationEvent.l1BlockNumber,\r\n        transactionIndex: proposal.creationEvent.transactionIndex,\r\n        logIndex: proposal.creationEvent.logIndex,\r\n        timestamp: proposal.creationEvent.timestamp,\r\n      },\r\n    });\r\n\r\n    history = _.orderBy(\r\n      history,\r\n      ['event.timestamp', 'event.logIndex'],\r\n      ['asc', 'asc']\r\n    );\r\n\r\n    return {\r\n      votes: proposalEvents.votes,\r\n      stakes: proposalEvents.stakes,\r\n      redeems: proposalEvents.redeems,\r\n      redeemsRep: proposalEvents.redeemsRep,\r\n      redeemsDaoBounty: proposalEvents.redeemsDaoBounty,\r\n      stateChanges: proposalEvents.stateChanges,\r\n      history: history,\r\n    };\r\n  }\r\n\r\n  getUser(userAddress): {\r\n    repBalance: BigNumber;\r\n    repPercentage: string;\r\n  } {\r\n    const { providerStore } = this.context;\r\n    const { userRep, totalSupply } = this.getRepAt(\r\n      userAddress,\r\n      providerStore.getCurrentBlockNumber()\r\n    );\r\n    return {\r\n      repBalance: userRep,\r\n      repPercentage: userRep\r\n        ? formatPercentage(userRep.div(totalSupply), 2, false)\r\n        : '0',\r\n    };\r\n  }\r\n\r\n  getUserEvents(userAddress): {\r\n    votes: Vote[];\r\n    stakes: Stake[];\r\n    redeems: Redeem[];\r\n    redeemsRep: RedeemRep[];\r\n    redeemsDaoBounty: RedeemDaoBounty[];\r\n    newProposal: ProposalEvent[];\r\n    history: {\r\n      text: string;\r\n      event: any;\r\n    }[];\r\n  } {\r\n    let history: {\r\n      text: string;\r\n      event: any;\r\n    }[] = [];\r\n\r\n    const cache = this.getCache();\r\n    const votingMachines =\r\n      this.context.configStore.getNetworkContracts().votingMachines;\r\n    let proposalEvents = {\r\n      votes: [],\r\n      stakes: [],\r\n      redeems: [],\r\n      redeemsRep: [],\r\n      redeemsDaoBounty: [],\r\n    };\r\n\r\n    for (const votingMachineName in votingMachines) {\r\n      const votingMachine = votingMachines[votingMachineName];\r\n      proposalEvents.votes = proposalEvents.votes.concat(\r\n        cache.votingMachines[votingMachine.address].events.votes.filter(\r\n          vote => {\r\n            return userAddress === vote.voter;\r\n          }\r\n        )\r\n      );\r\n      proposalEvents.stakes = proposalEvents.stakes.concat(\r\n        cache.votingMachines[votingMachine.address].events.stakes.filter(\r\n          stake => {\r\n            return userAddress === stake.staker;\r\n          }\r\n        )\r\n      );\r\n      proposalEvents.redeems = proposalEvents.redeems.concat(\r\n        cache.votingMachines[votingMachine.address].events.redeems.filter(\r\n          redeem => {\r\n            return userAddress === redeem.beneficiary;\r\n          }\r\n        )\r\n      );\r\n      proposalEvents.redeemsRep = proposalEvents.redeemsRep.concat(\r\n        cache.votingMachines[votingMachine.address].events.redeemsRep.filter(\r\n          redeemRep => {\r\n            return userAddress === redeemRep.beneficiary;\r\n          }\r\n        )\r\n      );\r\n      proposalEvents.redeemsDaoBounty = proposalEvents.redeemsDaoBounty.concat(\r\n        cache.votingMachines[\r\n          votingMachine.address\r\n        ].events.redeemsDaoBounty.filter(redeemDaoBounty => {\r\n          return userAddress === redeemDaoBounty.beneficiary;\r\n        })\r\n      );\r\n    }\r\n\r\n    const newProposalEvents: ProposalEvent[] = Object.keys(\r\n      _.pickBy(cache.proposals, proposal => proposal.proposer === userAddress)\r\n    ).map(proposalId => {\r\n      history.push({\r\n        text: `Proposal ${proposalId} created`,\r\n        event: {\r\n          proposalId: proposalId,\r\n          tx: cache.proposals[proposalId].creationEvent.tx,\r\n          block: cache.proposals[proposalId].creationEvent.l1BlockNumber,\r\n          transactionIndex:\r\n            cache.proposals[proposalId].creationEvent.transactionIndex,\r\n          logIndex: cache.proposals[proposalId].creationEvent.logIndex,\r\n          timestamp: cache.proposals[proposalId].creationEvent.timestamp,\r\n        },\r\n      });\r\n      return Object.assign(\r\n        { proposalId: proposalId },\r\n        cache.proposals[proposalId].creationEvent\r\n      );\r\n    });\r\n\r\n    history = history\r\n      .concat(\r\n        proposalEvents.votes.map(event => {\r\n          return {\r\n            text: `Voted with ${event.amount} REP for decision ${\r\n              VoteDecision[event.vote]\r\n            } on proposal ${event.proposalId}`,\r\n            event: {\r\n              proposalId: event.proposalId,\r\n              tx: event.tx,\r\n              block: event.l1BlockNumber,\r\n              transactionIndex: event.transactionIndex,\r\n              logIndex: event.logIndex,\r\n              timestamp: event.timestamp,\r\n            },\r\n          };\r\n        })\r\n      )\r\n      .concat(\r\n        proposalEvents.stakes.map(event => {\r\n          return {\r\n            text: `Staked ${event.amount} staking token for decision ${\r\n              VoteDecision[event.vote]\r\n            } on proposal ${event.proposalId}`,\r\n            event: {\r\n              proposalId: event.proposalId,\r\n              tx: event.tx,\r\n              block: event.l1BlockNumber,\r\n              transactionIndex: event.transactionIndex,\r\n              logIndex: event.logIndex,\r\n              timestamp: event.timestamp,\r\n            },\r\n          };\r\n        })\r\n      )\r\n      .concat(\r\n        proposalEvents.redeems.map(event => {\r\n          return {\r\n            text: `Staking token amount of ${event.amount} redeemed from proposal ${event.proposalId} `,\r\n            event: {\r\n              proposalId: event.proposalId,\r\n              tx: event.tx,\r\n              block: event.l1BlockNumber,\r\n              transactionIndex: event.transactionIndex,\r\n              logIndex: event.logIndex,\r\n              timestamp: event.timestamp,\r\n            },\r\n          };\r\n        })\r\n      )\r\n      .concat(\r\n        proposalEvents.redeemsRep.map(event => {\r\n          return {\r\n            text: `REP amount of ${event.amount} redeemed from proposal ${event.proposalId} `,\r\n            event: {\r\n              proposalId: event.proposalId,\r\n              tx: event.tx,\r\n              block: event.l1BlockNumber,\r\n              transactionIndex: event.transactionIndex,\r\n              logIndex: event.logIndex,\r\n              timestamp: event.timestamp,\r\n            },\r\n          };\r\n        })\r\n      )\r\n      .concat(\r\n        proposalEvents.redeemsDaoBounty.map(event => {\r\n          return {\r\n            text: `Staking token amount of ${event.amount} redeemed from proposal ${event.proposalId} `,\r\n            event: {\r\n              proposalId: event.proposalId,\r\n              tx: event.tx,\r\n              block: event.l1BlockNumber,\r\n              transactionIndex: event.transactionIndex,\r\n              logIndex: event.logIndex,\r\n              timestamp: event.timestamp,\r\n            },\r\n          };\r\n        })\r\n      );\r\n    history = _.orderBy(\r\n      history,\r\n      ['event.timestamp', 'event.logIndex'],\r\n      ['asc', 'asc']\r\n    );\r\n\r\n    return {\r\n      newProposal: newProposalEvents,\r\n      votes: proposalEvents.votes,\r\n      stakes: proposalEvents.stakes,\r\n      redeems: proposalEvents.redeems,\r\n      redeemsRep: proposalEvents.redeemsRep,\r\n      redeemsDaoBounty: proposalEvents.redeemsDaoBounty,\r\n      history: history,\r\n    };\r\n  }\r\n\r\n  getUserRedeemsLeft(userAddress: string): {\r\n    rep: string[];\r\n    stake: string[];\r\n    bounty: string[];\r\n  } {\r\n    const userEvents = this.getUserEvents(userAddress);\r\n\r\n    let redeemsLeft = {\r\n      rep: [],\r\n      stake: [],\r\n      bounty: [],\r\n    };\r\n\r\n    // Add possible redeems\r\n    userEvents.votes.map(vote => {\r\n      const proposal = this.getProposal(vote.proposalId);\r\n      const voteParameters = this.getVotingParametersOfProposal(\r\n        vote.proposalId\r\n      );\r\n      if (\r\n        ((proposal.stateInVotingMachine === 1 &&\r\n          ((proposal.boostedPhaseTime.toNumber() > 0 &&\r\n            vote.timestamp < proposal.boostedPhaseTime.toNumber()) ||\r\n            proposal.boostedPhaseTime.toNumber() === 0)) ||\r\n          (voteParameters.votersReputationLossRatio.toNumber() > 0 &&\r\n            ((proposal.boostedPhaseTime.toNumber() > 0 &&\r\n              vote.timestamp < proposal.boostedPhaseTime.toNumber()) ||\r\n              proposal.boostedPhaseTime.toNumber() === 0) &&\r\n            proposal.winningVote === vote.vote &&\r\n            proposal.stateInVotingMachine < 3)) &&\r\n        redeemsLeft.rep.indexOf(vote.proposalId) < 0\r\n      ) {\r\n        redeemsLeft.rep.push(vote.proposalId);\r\n      }\r\n    });\r\n    userEvents.stakes.map(stake => {\r\n      const proposal = this.getProposal(stake.proposalId);\r\n      if (\r\n        proposal.stateInVotingMachine === 1 ||\r\n        (proposal.stateInVotingMachine < 3 &&\r\n          redeemsLeft.stake.indexOf(stake.proposalId) < 0 &&\r\n          proposal.winningVote === stake.vote)\r\n      ) {\r\n        redeemsLeft.stake.push(stake.proposalId);\r\n        if (proposal.stateInVotingMachine === 2 && proposal.winningVote === 1) {\r\n          redeemsLeft.bounty.push(stake.proposalId);\r\n        }\r\n      }\r\n    });\r\n\r\n    // Remove already redeemed\r\n    userEvents.redeemsRep.map(redeemRep => {\r\n      if (redeemsLeft.rep.indexOf(redeemRep.proposalId) > -1)\r\n        redeemsLeft.rep.splice(\r\n          redeemsLeft.rep.indexOf(redeemRep.proposalId),\r\n          1\r\n        );\r\n    });\r\n    userEvents.redeems.map(redeem => {\r\n      if (redeemsLeft.stake.indexOf(redeem.proposalId) > -1)\r\n        redeemsLeft.stake.splice(\r\n          redeemsLeft.stake.indexOf(redeem.proposalId),\r\n          1\r\n        );\r\n    });\r\n    userEvents.redeemsDaoBounty.map(redeemDaoBounty => {\r\n      if (redeemsLeft.bounty.indexOf(redeemDaoBounty.proposalId) > -1)\r\n        redeemsLeft.bounty.splice(\r\n          redeemsLeft.bounty.indexOf(redeemDaoBounty.proposalId),\r\n          1\r\n        );\r\n    });\r\n\r\n    return redeemsLeft;\r\n  }\r\n\r\n  getProposalStatus(proposalId: string): any {\r\n    const proposal = this.getCache().proposals[proposalId];\r\n    const proposalStateChangeEvents = this.getProposalStateChanges(proposalId);\r\n    const scheme = this.getCache().schemes[proposal.scheme];\r\n    const votingMachineOfProposal = this.getVotingMachineOfProposal(proposalId);\r\n    const networkContracts = this.context.configStore.getNetworkContracts();\r\n    const votingMachineParams =\r\n      proposal.paramsHash ===\r\n      '0x0000000000000000000000000000000000000000000000000000000000000000'\r\n        ? this.getCache().votingMachines[votingMachineOfProposal]\r\n            .votingParameters[scheme.paramsHash]\r\n        : this.getCache().votingMachines[votingMachineOfProposal]\r\n            .votingParameters[proposal.paramsHash];\r\n\r\n    const autoBoost =\r\n      networkContracts.votingMachines.dxd &&\r\n      networkContracts.votingMachines.dxd.address === votingMachineOfProposal;\r\n    return decodeProposalStatus(\r\n      proposal,\r\n      proposalStateChangeEvents,\r\n      votingMachineParams,\r\n      scheme.maxSecondsForExecution,\r\n      autoBoost,\r\n      scheme.type\r\n    );\r\n  }\r\n\r\n  getVotesOfProposal(proposalId: string): Vote[] {\r\n    return this.getCache().votingMachines[\r\n      this.getVotingMachineOfProposal(proposalId)\r\n    ].events.votes.filter(vote => {\r\n      return proposalId === vote.proposalId;\r\n    });\r\n  }\r\n\r\n  getStakesOfProposal(proposalId: string): Stake[] {\r\n    return this.getCache().votingMachines[\r\n      this.getVotingMachineOfProposal(proposalId)\r\n    ].events.stakes.filter(stake => {\r\n      return proposalId === stake.proposalId;\r\n    });\r\n  }\r\n\r\n  getRedeemsOfProposal(proposalId: string): Redeem[] {\r\n    return this.getCache().votingMachines[\r\n      this.getVotingMachineOfProposal(proposalId)\r\n    ].events.redeems.filter(redeem => {\r\n      return proposalId === redeem.proposalId;\r\n    });\r\n  }\r\n\r\n  getRedeemsRepOfProposal(proposalId: string): RedeemRep[] {\r\n    return this.getCache().votingMachines[\r\n      this.getVotingMachineOfProposal(proposalId)\r\n    ].events.redeemsRep.filter(redeemRep => {\r\n      return proposalId === redeemRep.proposalId;\r\n    });\r\n  }\r\n\r\n  getRedeemsDaoBountyOfProposal(proposalId: string): RedeemDaoBounty[] {\r\n    return this.getCache().votingMachines[\r\n      this.getVotingMachineOfProposal(proposalId)\r\n    ].events.redeemsDaoBounty.filter(redeemDaoBounty => {\r\n      return proposalId === redeemDaoBounty.proposalId;\r\n    });\r\n  }\r\n\r\n  getProposalStateChanges(proposalId: string): ProposalStateChange[] {\r\n    return this.getCache().votingMachines[\r\n      this.getVotingMachineOfProposal(proposalId)\r\n    ].events.proposalStateChanges.filter(proposalStateChange => {\r\n      return proposalId === proposalStateChange.proposalId;\r\n    });\r\n  }\r\n\r\n  getSchemeRecommendedCalls(schemeAddress): any {\r\n    const networkContracts = this.context.configStore.getNetworkContracts();\r\n    const { library } = this.context.providerStore.getActiveWeb3React();\r\n    const scheme = this.getScheme(schemeAddress);\r\n    const callPermissions = this.getCache().callPermissions;\r\n    console.debug('Call Permissions', callPermissions);\r\n    let assetLimits = {};\r\n    const from =\r\n      scheme.controllerAddress === networkContracts.controller\r\n        ? networkContracts.avatar\r\n        : schemeAddress;\r\n    let recommendedCalls = this.context.configStore.getRecommendedCalls();\r\n\r\n    Object.keys(callPermissions).map(assetAddress => {\r\n      const callAllowance = this.getCallAllowance(\r\n        assetAddress,\r\n        from,\r\n        schemeAddress,\r\n        ANY_FUNC_SIGNATURE\r\n      );\r\n      if (callAllowance.fromTime > 0 && callAllowance.value.lt(MAX_UINT))\r\n        assetLimits[assetAddress] = callAllowance.value;\r\n    });\r\n\r\n    for (let i = 0; i < recommendedCalls.length; i++) {\r\n      const callAllowance = this.getCallAllowance(\r\n        recommendedCalls[i].asset,\r\n        from,\r\n        recommendedCalls[i].to,\r\n        library.eth.abi.encodeFunctionSignature(\r\n          recommendedCalls[i].functionName\r\n        )\r\n      );\r\n      recommendedCalls[i]['functionSignature'] =\r\n        library.eth.abi.encodeFunctionSignature(\r\n          recommendedCalls[i].functionName\r\n        );\r\n      recommendedCalls[i]['value'] = callAllowance.value;\r\n      recommendedCalls[i]['fromTime'] = callAllowance.fromTime;\r\n    }\r\n\r\n    return { assetLimits, recommendedCalls };\r\n  }\r\n\r\n  getCallAllowance(asset, from, to, functionSignature): any {\r\n    const networkContracts = this.context.configStore.getNetworkContracts();\r\n    const callPermissions = this.getCache().callPermissions;\r\n\r\n    if (\r\n      to === networkContracts.controller &&\r\n      from !== networkContracts.avatar\r\n    ) {\r\n      return {\r\n        value: bnum(0),\r\n        fromTime: 0,\r\n      };\r\n    } else if (\r\n      asset === ZERO_ADDRESS &&\r\n      to === networkContracts.permissionRegistry &&\r\n      from === networkContracts.avatar\r\n    ) {\r\n      return {\r\n        value: bnum(0),\r\n        fromTime: 1,\r\n      };\r\n    } else if (!callPermissions[asset] || !callPermissions[asset][from]) {\r\n      return {\r\n        value: bnum(0),\r\n        fromTime: 0,\r\n      };\r\n    } else if (\r\n      callPermissions[asset][from][to] &&\r\n      callPermissions[asset][from][to][functionSignature]\r\n    ) {\r\n      return {\r\n        value: callPermissions[asset][from][to][functionSignature].value,\r\n        fromTime: callPermissions[asset][from][to][functionSignature].fromTime,\r\n      };\r\n    } else if (\r\n      callPermissions[asset][from][to] &&\r\n      callPermissions[asset][from][to][ANY_FUNC_SIGNATURE]\r\n    ) {\r\n      return {\r\n        value: callPermissions[asset][from][to][ANY_FUNC_SIGNATURE].value,\r\n        fromTime: callPermissions[asset][from][to][ANY_FUNC_SIGNATURE].fromTime,\r\n      };\r\n    } else if (\r\n      callPermissions[asset][from][ANY_ADDRESS] &&\r\n      callPermissions[asset][from][ANY_ADDRESS][functionSignature]\r\n    ) {\r\n      return {\r\n        value:\r\n          callPermissions[asset][from][ANY_ADDRESS][functionSignature].value,\r\n        fromTime:\r\n          callPermissions[asset][from][ANY_ADDRESS][functionSignature].fromTime,\r\n      };\r\n    } else if (\r\n      callPermissions[asset][from][ANY_ADDRESS] &&\r\n      callPermissions[asset][from][ANY_ADDRESS][ANY_FUNC_SIGNATURE]\r\n    ) {\r\n      return {\r\n        value:\r\n          callPermissions[asset][from][ANY_ADDRESS][ANY_FUNC_SIGNATURE].value,\r\n        fromTime:\r\n          callPermissions[asset][from][ANY_ADDRESS][ANY_FUNC_SIGNATURE]\r\n            .fromTime,\r\n      };\r\n    } else {\r\n      return {\r\n        value: bnum(0),\r\n        fromTime: 0,\r\n      };\r\n    }\r\n  }\r\n\r\n  getRepAt(\r\n    userAddress: string = ZERO_ADDRESS,\r\n    atBlock: number = 0\r\n  ): {\r\n    userRep: BigNumber;\r\n    totalSupply: BigNumber;\r\n  } {\r\n    const { daoStore, providerStore, configStore } = this.context;\r\n    const repEvents = daoStore.getCache().daoInfo.repEvents;\r\n    let userRep = bnum(0),\r\n      totalSupply = bnum(0);\r\n    if (atBlock === 0) atBlock = providerStore.getCurrentBlockNumber();\r\n    const inL2 = configStore.getActiveChainName().indexOf('arbitrum') > -1;\r\n\r\n    for (let i = 0; i < repEvents.length; i++) {\r\n      if (repEvents[i][inL2 ? 'l2BlockNumber' : 'l1BlockNumber'] <= atBlock) {\r\n        if (repEvents[i].event === 'Mint') {\r\n          totalSupply = totalSupply.plus(repEvents[i].amount);\r\n          if (repEvents[i].account === userAddress)\r\n            userRep = userRep.plus(repEvents[i].amount);\r\n        } else if (repEvents[i].event === 'Burn') {\r\n          totalSupply = totalSupply.minus(repEvents[i].amount);\r\n          if (repEvents[i].account === userAddress)\r\n            userRep = userRep.minus(repEvents[i].amount);\r\n        }\r\n      }\r\n    }\r\n    return { userRep, totalSupply };\r\n  }\r\n\r\n  getUsersRep(): {\r\n    [userAddress: string]: BigNumber;\r\n  } {\r\n    const { daoStore, providerStore } = this.context;\r\n    const repEvents = daoStore.getCache().daoInfo.repEvents;\r\n    let users = {};\r\n    const atBlock = providerStore.getCurrentBlockNumber();\r\n\r\n    for (let i = 0; i < repEvents.length; i++) {\r\n      if (repEvents[i].l1BlockNumber <= atBlock) {\r\n        if (repEvents[i].event === 'Mint') {\r\n          if (!users[repEvents[i].account])\r\n            users[repEvents[i].account] = repEvents[i].amount;\r\n          else\r\n            users[repEvents[i].account] = users[repEvents[i].account].plus(\r\n              repEvents[i].amount\r\n            );\r\n        } else if (repEvents[i].event === 'Burn') {\r\n          if (users[repEvents[i].account])\r\n            users[repEvents[i].account] = users[repEvents[i].account].minus(\r\n              repEvents[i].amount\r\n            );\r\n        }\r\n      }\r\n    }\r\n    return users;\r\n  }\r\n}\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\r\nimport RootContext from '../contexts';\r\nimport { ContractType } from './Provider';\r\nimport { BigNumber, bnum } from '../utils';\r\nimport { executeMulticall } from '../utils/cache';\r\n\r\nexport default class UserStore {\r\n  userInfo: {\r\n    address: string;\r\n    ethBalance: BigNumber;\r\n    repBalance: BigNumber;\r\n    dxdBalance: BigNumber;\r\n    dxdApproved: BigNumber;\r\n    genBalance: BigNumber;\r\n    genApproved: BigNumber;\r\n  };\r\n  context: RootContext;\r\n\r\n  constructor(context) {\r\n    this.context = context;\r\n    this.userInfo = {\r\n      address: context.providerStore.getActiveWeb3React(),\r\n      ethBalance: bnum(0),\r\n      repBalance: bnum(0),\r\n      dxdBalance: bnum(0),\r\n      dxdApproved: bnum(0),\r\n      genBalance: bnum(0),\r\n      genApproved: bnum(0),\r\n    };\r\n    makeObservable(this, {\r\n      userInfo: observable,\r\n      update: action,\r\n    });\r\n  }\r\n\r\n  getUserInfo() {\r\n    return this.userInfo;\r\n  }\r\n\r\n  async update(web3React: Web3ReactContextInterface) {\r\n    const { configStore, providerStore, daoStore, transactionStore } =\r\n      this.context;\r\n    const networkContracts = configStore.getNetworkContracts();\r\n    const account = web3React.account;\r\n\r\n    transactionStore.checkPendingTransactions(web3React, account);\r\n    let callsToExecute = [\r\n      [\r\n        providerStore.getContract(\r\n          web3React,\r\n          ContractType.Multicall,\r\n          networkContracts.utils.multicall\r\n        ),\r\n        'getEthBalance',\r\n        [account],\r\n      ],\r\n    ];\r\n\r\n    if (networkContracts.votingMachines.gen) {\r\n      callsToExecute.push([\r\n        providerStore.getContract(\r\n          web3React,\r\n          ContractType.ERC20,\r\n          networkContracts.votingMachines.gen.token\r\n        ),\r\n        'balanceOf',\r\n        [account],\r\n      ]);\r\n      callsToExecute.push([\r\n        providerStore.getContract(\r\n          web3React,\r\n          ContractType.ERC20,\r\n          networkContracts.votingMachines.gen.token\r\n        ),\r\n        'allowance',\r\n        [account, networkContracts.votingMachines.gen.address],\r\n      ]);\r\n    }\r\n    if (networkContracts.votingMachines.dxd) {\r\n      callsToExecute.push([\r\n        providerStore.getContract(\r\n          web3React,\r\n          ContractType.ERC20,\r\n          networkContracts.votingMachines.dxd.token\r\n        ),\r\n        'balanceOf',\r\n        [account],\r\n      ]);\r\n      callsToExecute.push([\r\n        providerStore.getContract(\r\n          web3React,\r\n          ContractType.ERC20,\r\n          networkContracts.votingMachines.dxd.token\r\n        ),\r\n        'allowance',\r\n        [account, networkContracts.votingMachines.dxd.address],\r\n      ]);\r\n    }\r\n\r\n    const callsResponse = await executeMulticall(\r\n      web3React.library,\r\n      providerStore.getContract(\r\n        web3React,\r\n        ContractType.Multicall,\r\n        networkContracts.utils.multicall\r\n      ),\r\n      callsToExecute\r\n    );\r\n\r\n    let userInfo = this.userInfo;\r\n    userInfo.repBalance =\r\n      account && daoStore.daoCache\r\n        ? daoStore.getRepAt(account, providerStore.getCurrentBlockNumber())\r\n            .userRep\r\n        : bnum(0);\r\n\r\n    // TO DO: Improve this mess of ifs\r\n    userInfo.ethBalance = account\r\n      ? bnum(callsResponse.decodedReturnData[0])\r\n      : bnum(0);\r\n    userInfo.genBalance =\r\n      account && networkContracts.votingMachines.gen\r\n        ? bnum(callsResponse.decodedReturnData[1])\r\n        : bnum(0);\r\n    userInfo.genApproved =\r\n      account && networkContracts.votingMachines.gen\r\n        ? bnum(callsResponse.decodedReturnData[2])\r\n        : bnum(0);\r\n    userInfo.dxdBalance =\r\n      account &&\r\n      networkContracts.votingMachines.dxd &&\r\n      networkContracts.votingMachines.gen\r\n        ? bnum(callsResponse.decodedReturnData[3])\r\n        : account &&\r\n          networkContracts.votingMachines.dxd &&\r\n          !networkContracts.votingMachines.gen\r\n        ? bnum(callsResponse.decodedReturnData[1])\r\n        : bnum(0);\r\n    userInfo.dxdApproved =\r\n      account &&\r\n      networkContracts.votingMachines.dxd &&\r\n      networkContracts.votingMachines.gen\r\n        ? bnum(callsResponse.decodedReturnData[4])\r\n        : account &&\r\n          networkContracts.votingMachines.dxd &&\r\n          !networkContracts.votingMachines.gen\r\n        ? bnum(callsResponse.decodedReturnData[2])\r\n        : bnum(0);\r\n\r\n    this.userInfo = userInfo;\r\n  }\r\n}\r\n","const PermissionRegistry = require('./PermissionRegistry');\r\nconst DxController = require('./DxController');\r\nconst DxAvatar = require('./DxAvatar');\r\nconst DxReputation = require('./DxReputation');\r\nconst DXDVotingMachine = require('./DXDVotingMachine');\r\nconst GenesisProtocol = require('./GenesisProtocol');\r\nconst ERC20 = require('./ERC20');\r\nconst Multicall = require('./Multicall');\r\n\r\nexport const getContracts = async function (\r\n  networkConfig: NetworkContracts,\r\n  web3: any\r\n) {\r\n  const avatar = await new web3.eth.Contract(\r\n    DxAvatar.abi,\r\n    networkConfig.avatar\r\n  );\r\n  const controller = await new web3.eth.Contract(\r\n    DxController.abi,\r\n    networkConfig.controller\r\n  );\r\n  const reputation = await new web3.eth.Contract(\r\n    DxReputation.abi,\r\n    networkConfig.reputation\r\n  );\r\n  const permissionRegistry = await new web3.eth.Contract(\r\n    PermissionRegistry.abi,\r\n    networkConfig.permissionRegistry\r\n  );\r\n  const multicall = await new web3.eth.Contract(\r\n    Multicall.abi,\r\n    networkConfig.utils.multicall\r\n  );\r\n\r\n  let votingMachines = {};\r\n\r\n  if (networkConfig.votingMachines.gen)\r\n    votingMachines[networkConfig.votingMachines.gen.address] = {\r\n      name: 'GenesisProtocol',\r\n      contract: await new web3.eth.Contract(\r\n        GenesisProtocol.abi,\r\n        networkConfig.votingMachines.gen.address\r\n      ),\r\n      token: await new web3.eth.Contract(\r\n        ERC20.abi,\r\n        networkConfig.votingMachines.gen.token\r\n      ),\r\n    };\r\n\r\n  if (networkConfig.votingMachines.gen2)\r\n    votingMachines[networkConfig.votingMachines.gen2.address] = {\r\n      name: 'GenesisProtocol2',\r\n      contract: await new web3.eth.Contract(\r\n        GenesisProtocol.abi,\r\n        networkConfig.votingMachines.gen2.address\r\n      ),\r\n      token: await new web3.eth.Contract(\r\n        ERC20.abi,\r\n        networkConfig.votingMachines.gen2.token\r\n      ),\r\n    };\r\n\r\n  if (networkConfig.votingMachines.dxd)\r\n    votingMachines[networkConfig.votingMachines.dxd.address] = {\r\n      name: 'DXDVotingMachine',\r\n      contract: await new web3.eth.Contract(\r\n        DXDVotingMachine.abi,\r\n        networkConfig.votingMachines.dxd.address\r\n      ),\r\n      token: await new web3.eth.Contract(\r\n        ERC20.abi,\r\n        networkConfig.votingMachines.dxd.token\r\n      ),\r\n    };\r\n\r\n  return {\r\n    votingMachines,\r\n    avatar,\r\n    controller,\r\n    reputation,\r\n    permissionRegistry,\r\n    multicall,\r\n  };\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  bnum,\r\n  ZERO_HASH,\r\n  ZERO_ADDRESS,\r\n  sleep,\r\n  decodePermission,\r\n  decodeSchemeParameters,\r\n  WalletSchemeProposalState,\r\n  VotingMachineProposalState,\r\n} from '../utils';\r\nimport {\r\n  getEvents,\r\n  getRawEvents,\r\n  sortEvents,\r\n  executeMulticall,\r\n  isNode,\r\n  descriptionHashToIPFSHash,\r\n  ipfsHashToDescriptionHash,\r\n  getSchemeTypeData,\r\n} from '../utils/cache';\r\nimport WalletSchemeJSON from '../contracts/WalletScheme.json';\r\nimport ContributionRewardJSON from '../contracts/ContributionReward.json';\r\nimport { getContracts } from '../contracts';\r\n\r\nexport const getUpdatedCache = async function (\r\n  networkCache: DaoNetworkCache,\r\n  networkConfig: NetworkContracts,\r\n  fromBlock: number,\r\n  toBlock: number,\r\n  web3: any\r\n): Promise<DaoNetworkCache> {\r\n  console.debug('[Cache Update]', fromBlock, toBlock);\r\n  const networkContracts = await getContracts(networkConfig, web3);\r\n\r\n  //// TODO: Improve this duplicated while conditions\r\n  let retry = true;\r\n  while (retry) {\r\n    try {\r\n      (\r\n        await Promise.all([\r\n          updateDaoInfo(networkCache, networkContracts, web3),\r\n          updateReputationEvents(\r\n            networkCache,\r\n            networkContracts.reputation,\r\n            fromBlock,\r\n            toBlock,\r\n            web3\r\n          ),\r\n        ])\r\n      ).map(networkCacheUpdated => {\r\n        networkCache = networkCacheUpdated;\r\n      });\r\n    } finally {\r\n      retry = false;\r\n    }\r\n  }\r\n  retry = true;\r\n\r\n  while (retry) {\r\n    try {\r\n      await Promise.all(\r\n        Object.keys(networkContracts.votingMachines).map(\r\n          async votingMachineAddress => {\r\n            if (!networkCache.votingMachines[votingMachineAddress])\r\n              networkCache.votingMachines[votingMachineAddress] = {\r\n                name: networkContracts.votingMachines[votingMachineAddress]\r\n                  .name,\r\n                events: {\r\n                  votes: [],\r\n                  stakes: [],\r\n                  redeems: [],\r\n                  redeemsRep: [],\r\n                  redeemsDaoBounty: [],\r\n                  proposalStateChanges: [],\r\n                  newProposal: [],\r\n                },\r\n                token:\r\n                  networkContracts.votingMachines[votingMachineAddress].token\r\n                    ._address,\r\n                votingParameters: {},\r\n              };\r\n\r\n            networkCache = await updateVotingMachine(\r\n              networkCache,\r\n              networkContracts.avatar._address,\r\n              networkContracts.votingMachines[votingMachineAddress].contract,\r\n              networkContracts.multicall,\r\n              fromBlock,\r\n              toBlock,\r\n              web3\r\n            );\r\n          }\r\n        )\r\n      );\r\n    } finally {\r\n      retry = false;\r\n    }\r\n  }\r\n  retry = true;\r\n\r\n  while (retry) {\r\n    try {\r\n      networkCache = await updateSchemes(\r\n        networkCache,\r\n        networkConfig,\r\n        fromBlock,\r\n        toBlock,\r\n        web3\r\n      );\r\n    } finally {\r\n      retry = false;\r\n    }\r\n  }\r\n  retry = true;\r\n\r\n  while (retry) {\r\n    try {\r\n      (\r\n        await Promise.all([\r\n          updatePermissionRegistry(\r\n            networkCache,\r\n            networkConfig,\r\n            fromBlock,\r\n            toBlock,\r\n            web3\r\n          ),\r\n          updateProposals(\r\n            networkCache,\r\n            networkConfig,\r\n            fromBlock,\r\n            toBlock,\r\n            web3\r\n          ),\r\n        ])\r\n      ).map(networkCacheUpdated => {\r\n        networkCache = networkCacheUpdated;\r\n      });\r\n    } finally {\r\n      retry = false;\r\n    }\r\n  }\r\n\r\n  networkCache.l1BlockNumber = Number(toBlock);\r\n  networkCache.l2BlockNumber = 0;\r\n\r\n  console.debug('Total Proposals', Object.keys(networkCache.proposals).length);\r\n\r\n  return networkCache;\r\n};\r\n\r\n// Update the DAOinfo field in cache\r\nexport const updateDaoInfo = async function (\r\n  networkCache: DaoNetworkCache,\r\n  networkContracts: any,\r\n  web3: any\r\n): Promise<DaoNetworkCache> {\r\n  let callsToExecute = [\r\n    [networkContracts.reputation, 'totalSupply', []],\r\n    [\r\n      networkContracts.multicall,\r\n      'getEthBalance',\r\n      [networkContracts.avatar._address],\r\n    ],\r\n  ];\r\n  const callsResponse = await executeMulticall(\r\n    web3,\r\n    networkContracts.multicall,\r\n    callsToExecute\r\n  );\r\n  networkCache.daoInfo.address = networkContracts.avatar._address;\r\n  networkCache.daoInfo.repEvents = !networkCache.daoInfo.repEvents\r\n    ? []\r\n    : networkCache.daoInfo.repEvents;\r\n  networkCache.daoInfo.totalRep = bnum(callsResponse.decodedReturnData[0]);\r\n  networkCache.daoInfo.ethBalance = bnum(callsResponse.decodedReturnData[1]);\r\n  if (!networkCache.daoInfo.tokenBalances)\r\n    networkCache.daoInfo.tokenBalances = {};\r\n  return networkCache;\r\n};\r\n\r\n// Get all Mint and Burn reputation events to calculate rep by time off chain\r\nexport const updateReputationEvents = async function (\r\n  networkCache: DaoNetworkCache,\r\n  reputation: any,\r\n  fromBlock: number,\r\n  toBlock: number,\r\n  web3: any\r\n): Promise<DaoNetworkCache> {\r\n  if (!networkCache.daoInfo.repEvents) networkCache.daoInfo.repEvents = [];\r\n\r\n  let reputationEvents = sortEvents(\r\n    await getEvents(web3, reputation, fromBlock, toBlock, 'allEvents')\r\n  );\r\n\r\n  reputationEvents.map(reputationEvent => {\r\n    switch (reputationEvent.event) {\r\n      case 'Mint':\r\n        networkCache.daoInfo.repEvents.push({\r\n          event: reputationEvent.event,\r\n          signature: reputationEvent.signature,\r\n          address: reputationEvent.address,\r\n          account: reputationEvent.returnValues._to,\r\n          amount: bnum(reputationEvent.returnValues._amount),\r\n          tx: reputationEvent.transactionHash,\r\n          l1BlockNumber: reputationEvent.l1BlockNumber,\r\n          l2BlockNumber: reputationEvent.l2BlockNumber,\r\n          timestamp: reputationEvent.timestamp,\r\n          transactionIndex: reputationEvent.transactionIndex,\r\n          logIndex: reputationEvent.logIndex,\r\n        });\r\n        break;\r\n      case 'Burn':\r\n        networkCache.daoInfo.repEvents.push({\r\n          event: reputationEvent.event,\r\n          signature: reputationEvent.signature,\r\n          address: reputationEvent.address,\r\n          account: reputationEvent.returnValues._from,\r\n          amount: bnum(reputationEvent.returnValues._amount),\r\n          tx: reputationEvent.transactionHash,\r\n          l1BlockNumber: reputationEvent.l1BlockNumber,\r\n          l2BlockNumber: reputationEvent.l2BlockNumber,\r\n          timestamp: reputationEvent.timestamp,\r\n          transactionIndex: reputationEvent.transactionIndex,\r\n          logIndex: reputationEvent.logIndex,\r\n        });\r\n        break;\r\n    }\r\n  });\r\n\r\n  return networkCache;\r\n};\r\n\r\n// Update all voting machine information, events, token and voting parameters used.\r\nexport const updateVotingMachine = async function (\r\n  networkCache: DaoNetworkCache,\r\n  avatarAddress: string,\r\n  votingMachine: any,\r\n  multicall: any,\r\n  fromBlock: number,\r\n  toBlock: number,\r\n  web3: any\r\n): Promise<DaoNetworkCache> {\r\n  let newVotingMachineEvents = sortEvents(\r\n    await getEvents(web3, votingMachine, fromBlock, toBlock, 'allEvents')\r\n  );\r\n  const votingMachineEventsInCache =\r\n    networkCache.votingMachines[votingMachine._address].events;\r\n  const votingMachineParamsHash = [];\r\n\r\n  newVotingMachineEvents.map(votingMachineEvent => {\r\n    const proposalCreated =\r\n      votingMachineEventsInCache.newProposal.findIndex(\r\n        newProposalEvent =>\r\n          votingMachineEvent.returnValues._proposalId ===\r\n          newProposalEvent.proposalId\r\n      ) > -1;\r\n\r\n    if (\r\n      votingMachineEvent.returnValues._organization === avatarAddress ||\r\n      (votingMachineEvent.event === 'StateChange' && proposalCreated)\r\n    )\r\n      switch (votingMachineEvent.event) {\r\n        case 'NewProposal':\r\n          votingMachineEventsInCache.newProposal.push({\r\n            event: votingMachineEvent.event,\r\n            signature: votingMachineEvent.signature,\r\n            address: votingMachineEvent.address,\r\n            proposer: votingMachineEvent.returnValues._proposer,\r\n            paramHash: votingMachineEvent.returnValues._paramsHash,\r\n            proposalId: votingMachineEvent.returnValues._proposalId,\r\n            tx: votingMachineEvent.transactionHash,\r\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\r\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\r\n            timestamp: votingMachineEvent.timestamp,\r\n            transactionIndex: votingMachineEvent.transactionIndex,\r\n            logIndex: votingMachineEvent.logIndex,\r\n          });\r\n\r\n          if (\r\n            votingMachineParamsHash.indexOf(\r\n              votingMachineEvent.returnValues._paramsHash\r\n            ) < 0\r\n          )\r\n            votingMachineParamsHash.push(\r\n              votingMachineEvent.returnValues._paramsHash\r\n            );\r\n          break;\r\n        case 'StateChange':\r\n          votingMachineEventsInCache.proposalStateChanges.push({\r\n            event: votingMachineEvent.event,\r\n            signature: votingMachineEvent.signature,\r\n            address: votingMachineEvent.address,\r\n            state: votingMachineEvent.returnValues._proposalState,\r\n            proposalId: votingMachineEvent.returnValues._proposalId,\r\n            tx: votingMachineEvent.transactionHash,\r\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\r\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\r\n            timestamp: votingMachineEvent.timestamp,\r\n            transactionIndex: votingMachineEvent.transactionIndex,\r\n            logIndex: votingMachineEvent.logIndex,\r\n          });\r\n          break;\r\n        case 'VoteProposal':\r\n          const preBoosted =\r\n            votingMachineEventsInCache.proposalStateChanges.findIndex(\r\n              i => i.state === '5'\r\n            ) >= 0;\r\n\r\n          votingMachineEventsInCache.votes.push({\r\n            event: votingMachineEvent.event,\r\n            signature: votingMachineEvent.signature,\r\n            address: votingMachineEvent.address,\r\n            voter: votingMachineEvent.returnValues._voter,\r\n            vote: votingMachineEvent.returnValues._vote,\r\n            amount: votingMachineEvent.returnValues._reputation,\r\n            preBoosted: preBoosted,\r\n            proposalId: votingMachineEvent.returnValues._proposalId,\r\n            tx: votingMachineEvent.transactionHash,\r\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\r\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\r\n            timestamp: votingMachineEvent.timestamp,\r\n            transactionIndex: votingMachineEvent.transactionIndex,\r\n            logIndex: votingMachineEvent.logIndex,\r\n          });\r\n          break;\r\n        case 'Stake':\r\n          votingMachineEventsInCache.stakes.push({\r\n            event: votingMachineEvent.event,\r\n            signature: votingMachineEvent.signature,\r\n            address: votingMachineEvent.address,\r\n            staker: votingMachineEvent.returnValues._staker,\r\n            vote: votingMachineEvent.returnValues._vote,\r\n            amount: votingMachineEvent.returnValues._amount,\r\n            amount4Bounty: bnum('0'),\r\n            proposalId: votingMachineEvent.returnValues._proposalId,\r\n            tx: votingMachineEvent.transactionHash,\r\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\r\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\r\n            timestamp: votingMachineEvent.timestamp,\r\n            transactionIndex: votingMachineEvent.transactionIndex,\r\n            logIndex: votingMachineEvent.logIndex,\r\n          });\r\n          break;\r\n        case 'Redeem':\r\n          votingMachineEventsInCache.redeems.push({\r\n            event: votingMachineEvent.event,\r\n            signature: votingMachineEvent.signature,\r\n            address: votingMachineEvent.address,\r\n            beneficiary: votingMachineEvent.returnValues._beneficiary,\r\n            amount: votingMachineEvent.returnValues._amount,\r\n            proposalId: votingMachineEvent.returnValues._proposalId,\r\n            tx: votingMachineEvent.transactionHash,\r\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\r\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\r\n            timestamp: votingMachineEvent.timestamp,\r\n            transactionIndex: votingMachineEvent.transactionIndex,\r\n            logIndex: votingMachineEvent.logIndex,\r\n          });\r\n          break;\r\n        case 'RedeemReputation':\r\n          votingMachineEventsInCache.redeemsRep.push({\r\n            event: votingMachineEvent.event,\r\n            signature: votingMachineEvent.signature,\r\n            address: votingMachineEvent.address,\r\n            beneficiary: votingMachineEvent.returnValues._beneficiary,\r\n            amount: votingMachineEvent.returnValues._amount,\r\n            proposalId: votingMachineEvent.returnValues._proposalId,\r\n            tx: votingMachineEvent.transactionHash,\r\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\r\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\r\n            timestamp: votingMachineEvent.timestamp,\r\n            transactionIndex: votingMachineEvent.transactionIndex,\r\n            logIndex: votingMachineEvent.logIndex,\r\n          });\r\n          break;\r\n        case 'RedeemDaoBounty':\r\n          votingMachineEventsInCache.redeemsDaoBounty.push({\r\n            event: votingMachineEvent.event,\r\n            signature: votingMachineEvent.signature,\r\n            address: votingMachineEvent.address,\r\n            beneficiary: votingMachineEvent.returnValues._beneficiary,\r\n            amount: votingMachineEvent.returnValues._amount,\r\n            proposalId: votingMachineEvent.returnValues._proposalId,\r\n            tx: votingMachineEvent.transactionHash,\r\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\r\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\r\n            timestamp: votingMachineEvent.timestamp,\r\n            transactionIndex: votingMachineEvent.transactionIndex,\r\n            logIndex: votingMachineEvent.logIndex,\r\n          });\r\n          break;\r\n      }\r\n  });\r\n\r\n  const callsToExecute = [];\r\n  for (let i = 0; i < votingMachineParamsHash.length; i++) {\r\n    callsToExecute.push([\r\n      votingMachine,\r\n      'parameters',\r\n      [votingMachineParamsHash[i]],\r\n    ]);\r\n  }\r\n\r\n  const callsResponse = await executeMulticall(web3, multicall, callsToExecute);\r\n\r\n  for (let i = 0; i < callsResponse.returnData.length; i++) {\r\n    networkCache.votingMachines[votingMachine._address].votingParameters[\r\n      votingMachineParamsHash[i]\r\n    ] = decodeSchemeParameters(\r\n      web3.eth.abi.decodeParameters(\r\n        [\r\n          { type: 'uint256', name: 'queuedVoteRequiredPercentage' },\r\n          { type: 'uint256', name: 'queuedVotePeriodLimit' },\r\n          { type: 'uint256', name: 'boostedVotePeriodLimit' },\r\n          { type: 'uint256', name: 'preBoostedVotePeriodLimit' },\r\n          { type: 'uint256', name: 'thresholdConst' },\r\n          { type: 'uint256', name: 'limitExponentValue' },\r\n          { type: 'uint256', name: 'quietEndingPeriod' },\r\n          { type: 'uint256', name: 'proposingRepReward' },\r\n          { type: 'uint256', name: 'votersReputationLossRatio' },\r\n          { type: 'uint256', name: 'minimumDaoBounty' },\r\n          { type: 'uint256', name: 'daoBountyConst' },\r\n          { type: 'uint256', name: 'activationTime' },\r\n        ],\r\n        callsResponse.returnData[i]\r\n      )\r\n    );\r\n  }\r\n\r\n  networkCache.votingMachines[votingMachine._address].events =\r\n    votingMachineEventsInCache;\r\n\r\n  return networkCache;\r\n};\r\n\r\n// Gets all teh events form the permission registry and stores the permissions set.\r\nexport const updatePermissionRegistry = async function (\r\n  networkCache: DaoNetworkCache,\r\n  networkConfig: NetworkContracts,\r\n  fromBlock: number,\r\n  toBlock: number,\r\n  web3: any\r\n): Promise<DaoNetworkCache> {\r\n  const networkContracts = await getContracts(networkConfig, web3);\r\n  if (networkContracts.permissionRegistry._address !== ZERO_ADDRESS) {\r\n    let permissionRegistryEvents = sortEvents(\r\n      await getEvents(\r\n        web3,\r\n        networkContracts.permissionRegistry,\r\n        fromBlock,\r\n        toBlock,\r\n        'allEvents'\r\n      )\r\n    );\r\n\r\n    permissionRegistryEvents.map(permissionRegistryEvent => {\r\n      const eventValues = permissionRegistryEvent.returnValues;\r\n\r\n      if (!networkCache.callPermissions[eventValues.asset])\r\n        networkCache.callPermissions[eventValues.asset] = {};\r\n\r\n      if (!networkCache.callPermissions[eventValues.asset][eventValues.from])\r\n        networkCache.callPermissions[eventValues.asset][eventValues.from] = {};\r\n\r\n      if (\r\n        !networkCache.callPermissions[eventValues.asset][eventValues.from][\r\n          eventValues.to\r\n        ]\r\n      )\r\n        networkCache.callPermissions[eventValues.asset][eventValues.from][\r\n          eventValues.to\r\n        ] = {};\r\n\r\n      networkCache.callPermissions[eventValues.asset][eventValues.from][\r\n        eventValues.to\r\n      ][eventValues.functionSignature] = {\r\n        value: eventValues.value,\r\n        fromTime: eventValues.fromTime,\r\n      };\r\n    });\r\n  }\r\n\r\n  return networkCache;\r\n};\r\n\r\n// Update all the schemes information\r\nexport const updateSchemes = async function (\r\n  networkCache: DaoNetworkCache,\r\n  networkConfig: NetworkContracts,\r\n  fromBlock: number,\r\n  toBlock: number,\r\n  web3: any\r\n): Promise<DaoNetworkCache> {\r\n  const networkContracts = await getContracts(networkConfig, web3);\r\n\r\n  let controllerEvents = sortEvents(\r\n    await getEvents(\r\n      web3,\r\n      networkContracts.controller,\r\n      fromBlock,\r\n      toBlock,\r\n      'allEvents'\r\n    )\r\n  );\r\n\r\n  for (\r\n    let controllerEventsIndex = 0;\r\n    controllerEventsIndex < controllerEvents.length;\r\n    controllerEventsIndex++\r\n  ) {\r\n    const controllerEvent = controllerEvents[controllerEventsIndex];\r\n\r\n    const schemeAddress = controllerEvent.returnValues._scheme;\r\n\r\n    // Add or update the scheme information, register scheme is used to add and updates scheme parametersHash\r\n    if (controllerEvent.event === 'RegisterScheme') {\r\n      const schemeTypeData = getSchemeTypeData(networkConfig, schemeAddress);\r\n      const votingMachine =\r\n        networkContracts.votingMachines[schemeTypeData.votingMachine].contract;\r\n\r\n      console.debug(\r\n        'Register Scheme event for ',\r\n        schemeAddress,\r\n        schemeTypeData.name\r\n      );\r\n\r\n      let callsToExecute = [\r\n        [networkContracts.multicall, 'getEthBalance', [schemeAddress]],\r\n        [\r\n          networkContracts.controller,\r\n          'getSchemePermissions',\r\n          [schemeAddress, networkContracts.avatar._address],\r\n        ],\r\n        [\r\n          networkContracts.controller,\r\n          'getSchemeParameters',\r\n          [schemeAddress, networkContracts.avatar._address],\r\n        ],\r\n      ];\r\n\r\n      if (schemeTypeData.type === 'WalletScheme') {\r\n        const walletSchemeContract = await new web3.eth.Contract(\r\n          WalletSchemeJSON.abi,\r\n          schemeAddress\r\n        );\r\n        callsToExecute.push([walletSchemeContract, 'controllerAddress', []]);\r\n        callsToExecute.push([walletSchemeContract, 'schemeName', []]);\r\n        callsToExecute.push([\r\n          walletSchemeContract,\r\n          'maxSecondsForExecution',\r\n          [],\r\n        ]);\r\n        callsToExecute.push([\r\n          walletSchemeContract,\r\n          'maxRepPercentageChange',\r\n          [],\r\n        ]);\r\n      }\r\n\r\n      const callsResponse1 = await executeMulticall(\r\n        web3,\r\n        networkContracts.multicall,\r\n        callsToExecute\r\n      );\r\n\r\n      const ethBalance = callsResponse1.decodedReturnData[0];\r\n\r\n      const permissions = decodePermission(callsResponse1.decodedReturnData[1]);\r\n      const paramsHash = schemeTypeData.voteParams\r\n        ? schemeTypeData.voteParams\r\n        : callsResponse1.decodedReturnData[2];\r\n\r\n      const controllerAddress =\r\n        schemeTypeData.type === 'WalletScheme'\r\n          ? callsResponse1.decodedReturnData[3]\r\n          : networkContracts.avatar._address;\r\n      const schemeName =\r\n        schemeTypeData.type === 'WalletScheme'\r\n          ? callsResponse1.decodedReturnData[4]\r\n          : schemeTypeData.name;\r\n      const maxSecondsForExecution =\r\n        schemeTypeData.type === 'WalletScheme'\r\n          ? callsResponse1.decodedReturnData[5]\r\n          : 0;\r\n      const maxRepPercentageChange =\r\n        schemeTypeData.type === 'WalletScheme'\r\n          ? callsResponse1.decodedReturnData[6]\r\n          : 0;\r\n\r\n      callsToExecute = [];\r\n      if (schemeTypeData.type === 'WalletScheme') {\r\n        callsToExecute.push([\r\n          votingMachine,\r\n          'getBoostedVoteRequiredPercentage',\r\n          [schemeAddress, networkContracts.avatar._address, paramsHash],\r\n        ]);\r\n      }\r\n\r\n      if (\r\n        paramsHash !== ZERO_HASH &&\r\n        !networkCache.votingMachines[votingMachine._address].votingParameters[\r\n          paramsHash\r\n        ]\r\n      ) {\r\n        callsToExecute.push([votingMachine, 'parameters', [paramsHash]]);\r\n      }\r\n\r\n      const callsResponse2 = await executeMulticall(\r\n        web3,\r\n        networkContracts.multicall,\r\n        callsToExecute\r\n      );\r\n\r\n      const boostedVoteRequiredPercentage =\r\n        schemeTypeData.type === 'WalletScheme'\r\n          ? web3.eth.abi.decodeParameters(\r\n              ['uint256'],\r\n              callsResponse2.returnData[0]\r\n            )['0']\r\n          : 0;\r\n\r\n      if (\r\n        paramsHash !== ZERO_HASH &&\r\n        !networkCache.votingMachines[votingMachine._address].votingParameters[\r\n          paramsHash\r\n        ]\r\n      ) {\r\n        try {\r\n          networkCache.votingMachines[votingMachine._address].votingParameters[\r\n            paramsHash\r\n          ] = decodeSchemeParameters(\r\n            web3.eth.abi.decodeParameters(\r\n              [\r\n                { type: 'uint256', name: 'queuedVoteRequiredPercentage' },\r\n                { type: 'uint256', name: 'queuedVotePeriodLimit' },\r\n                { type: 'uint256', name: 'boostedVotePeriodLimit' },\r\n                { type: 'uint256', name: 'preBoostedVotePeriodLimit' },\r\n                { type: 'uint256', name: 'thresholdConst' },\r\n                { type: 'uint256', name: 'limitExponentValue' },\r\n                { type: 'uint256', name: 'quietEndingPeriod' },\r\n                { type: 'uint256', name: 'proposingRepReward' },\r\n                { type: 'uint256', name: 'votersReputationLossRatio' },\r\n                { type: 'uint256', name: 'minimumDaoBounty' },\r\n                { type: 'uint256', name: 'daoBountyConst' },\r\n                { type: 'uint256', name: 'activationTime' },\r\n              ],\r\n              callsResponse2.returnData[1]\r\n            )\r\n          );\r\n        } catch (error) {\r\n          console.error(\r\n            'Error getting parameters configuration for',\r\n            schemeTypeData.name\r\n          );\r\n        }\r\n      }\r\n\r\n      if (!networkCache.schemes[schemeAddress]) {\r\n        networkCache.schemes[schemeAddress] = {\r\n          address: schemeAddress,\r\n          registered: true,\r\n          controllerAddress,\r\n          name: schemeName,\r\n          type: schemeTypeData.type,\r\n          ethBalance: ethBalance,\r\n          tokenBalances: {},\r\n          votingMachine: schemeTypeData.votingMachine,\r\n          paramsHash: paramsHash,\r\n          permissions,\r\n          boostedVoteRequiredPercentage,\r\n          proposalIds: [],\r\n          boostedProposals: 0,\r\n          maxSecondsForExecution,\r\n          maxRepPercentageChange,\r\n          newProposalEvents: [],\r\n        };\r\n      } else {\r\n        networkCache.schemes[schemeAddress].paramsHash = paramsHash;\r\n        networkCache.schemes[schemeAddress].permissions = permissions;\r\n        networkCache.schemes[schemeAddress].boostedVoteRequiredPercentage =\r\n          boostedVoteRequiredPercentage;\r\n      }\r\n\r\n      // Mark scheme as not registered but save all previous data\r\n    } else if (\r\n      controllerEvent.event === 'UnregisterScheme' &&\r\n      // This condition is added to skip the first scheme added (that is the dao creator account)\r\n      controllerEvent.returnValues._sender !== schemeAddress\r\n    ) {\r\n      const schemeTypeData = getSchemeTypeData(networkConfig, schemeAddress);\r\n      const votingMachine =\r\n        networkContracts.votingMachines[schemeTypeData.votingMachine].contract;\r\n\r\n      console.debug(\r\n        'Unregister scheme event',\r\n        schemeAddress,\r\n        schemeTypeData.name\r\n      );\r\n      let callsToExecute = [\r\n        [networkContracts.multicall, 'getEthBalance', [schemeAddress]],\r\n        [\r\n          votingMachine,\r\n          'orgBoostedProposalsCnt',\r\n          [\r\n            web3.utils.soliditySha3(\r\n              schemeAddress,\r\n              networkContracts.avatar._address\r\n            ),\r\n          ],\r\n        ],\r\n      ];\r\n\r\n      if (networkCache.schemes[schemeAddress].type === 'WalletScheme') {\r\n        callsToExecute.push([\r\n          await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress),\r\n          'maxSecondsForExecution',\r\n          [],\r\n        ]);\r\n      }\r\n      const callsResponse = await executeMulticall(\r\n        web3,\r\n        networkContracts.multicall,\r\n        callsToExecute\r\n      );\r\n\r\n      const maxSecondsForExecution =\r\n        networkCache.schemes[schemeAddress].type === 'WalletScheme'\r\n          ? callsResponse.decodedReturnData[2]\r\n          : 0;\r\n\r\n      // Update the scheme values a last time\r\n      networkCache.schemes[schemeAddress].ethBalance =\r\n        callsResponse.decodedReturnData[0];\r\n      networkCache.schemes[schemeAddress].boostedProposals =\r\n        callsResponse.decodedReturnData[1];\r\n      networkCache.schemes[schemeAddress].maxSecondsForExecution =\r\n        maxSecondsForExecution;\r\n      networkCache.schemes[schemeAddress].registered = false;\r\n    }\r\n  }\r\n\r\n  // Update registered schemes\r\n  await Promise.all(\r\n    Object.keys(networkCache.schemes).map(async schemeAddress => {\r\n      if (networkCache.schemes[schemeAddress].registered) {\r\n        const schemeTypeData = getSchemeTypeData(networkConfig, schemeAddress);\r\n        const votingMachine =\r\n          networkContracts.votingMachines[schemeTypeData.votingMachine]\r\n            .contract;\r\n\r\n        let callsToExecute = [\r\n          [networkContracts.multicall, 'getEthBalance', [schemeAddress]],\r\n          [\r\n            votingMachine,\r\n            'orgBoostedProposalsCnt',\r\n            [\r\n              web3.utils.soliditySha3(\r\n                schemeAddress,\r\n                networkContracts.avatar._address\r\n              ),\r\n            ],\r\n          ],\r\n        ];\r\n\r\n        if (networkCache.schemes[schemeAddress].type === 'WalletScheme') {\r\n          callsToExecute.push([\r\n            await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress),\r\n            'maxSecondsForExecution',\r\n            [],\r\n          ]);\r\n          callsToExecute.push([\r\n            votingMachine,\r\n            'boostedVoteRequiredPercentage',\r\n            [\r\n              web3.utils.soliditySha3(\r\n                schemeAddress,\r\n                networkContracts.avatar._address\r\n              ),\r\n              networkCache.schemes[schemeAddress].paramsHash,\r\n            ],\r\n          ]);\r\n        }\r\n        const callsResponse = await executeMulticall(\r\n          web3,\r\n          networkContracts.multicall,\r\n          callsToExecute\r\n        );\r\n\r\n        const maxSecondsForExecution =\r\n          networkCache.schemes[schemeAddress].type === 'WalletScheme'\r\n            ? callsResponse.decodedReturnData[2]\r\n            : 0;\r\n\r\n        const boostedVoteRequiredPercentage =\r\n          schemeTypeData.type === 'WalletScheme'\r\n            ? web3.eth.abi.decodeParameters(\r\n                ['uint256'],\r\n                callsResponse.returnData[3]\r\n              )['0']\r\n            : 0;\r\n\r\n        networkCache.schemes[schemeAddress].ethBalance =\r\n          callsResponse.decodedReturnData[0];\r\n        networkCache.schemes[schemeAddress].boostedProposals =\r\n          callsResponse.decodedReturnData[1];\r\n        networkCache.schemes[schemeAddress].maxSecondsForExecution =\r\n          maxSecondsForExecution;\r\n        networkCache.schemes[schemeAddress].boostedVoteRequiredPercentage =\r\n          boostedVoteRequiredPercentage;\r\n      }\r\n    })\r\n  );\r\n\r\n  return networkCache;\r\n};\r\n\r\n// Update all the proposals information\r\nexport const updateProposals = async function (\r\n  networkCache: DaoNetworkCache,\r\n  networkConfig: NetworkContracts,\r\n  fromBlock: number,\r\n  toBlock: number,\r\n  web3: any\r\n): Promise<DaoNetworkCache> {\r\n  const networkContracts = await getContracts(networkConfig, web3);\r\n  const avatarAddress = networkContracts.avatar._address;\r\n  const avatarAddressEncoded = web3.eth.abi.encodeParameter(\r\n    'address',\r\n    avatarAddress\r\n  );\r\n\r\n  // Get new proposals\r\n  await Promise.all(\r\n    Object.keys(networkCache.schemes).map(async schemeAddress => {\r\n      const schemeTypeData = getSchemeTypeData(networkConfig, schemeAddress);\r\n      const votingMachine =\r\n        networkContracts.votingMachines[schemeTypeData.votingMachine].contract;\r\n\r\n      let schemeEvents = [];\r\n      for (let i = 0; i < schemeTypeData.newProposalTopics.length; i++) {\r\n        schemeEvents = schemeEvents.concat(\r\n          await getRawEvents(\r\n            web3,\r\n            schemeAddress,\r\n            fromBlock,\r\n            toBlock,\r\n            schemeTypeData.newProposalTopics[i]\r\n          )\r\n        );\r\n      }\r\n\r\n      console.debug(\r\n        'Getting proposals of',\r\n        schemeTypeData.name,\r\n        schemeEvents.length\r\n      );\r\n\r\n      let schemeEventsBatchs = [];\r\n      let schemeEventsBatchsIndex = 0;\r\n      for (var i = 0; i < schemeEvents.length; i += 50)\r\n        schemeEventsBatchs.push(schemeEvents.slice(i, i + 50));\r\n\r\n      while (schemeEventsBatchsIndex < schemeEventsBatchs.length) {\r\n        try {\r\n          console.debug(\r\n            'Getting proposals in event batch index',\r\n            schemeEventsBatchsIndex,\r\n            'in',\r\n            schemeTypeData.name\r\n          );\r\n          await Promise.all(\r\n            schemeEventsBatchs[schemeEventsBatchsIndex].map(\r\n              async schemeEvent => {\r\n                const proposalId =\r\n                  schemeEvent.topics[1] === avatarAddressEncoded\r\n                    ? web3.eth.abi.decodeParameter(\r\n                        'bytes32',\r\n                        schemeEvent.topics[2]\r\n                      )\r\n                    : web3.eth.abi.decodeParameter(\r\n                        'bytes32',\r\n                        schemeEvent.topics[1]\r\n                      );\r\n                // Get all the proposal information from the scheme and voting machine\r\n                let callsToExecute = [\r\n                  [votingMachine, 'proposals', [proposalId]],\r\n                  [votingMachine, 'voteStatus', [proposalId, 1]],\r\n                  [votingMachine, 'voteStatus', [proposalId, 2]],\r\n                  [votingMachine, 'proposalStatus', [proposalId]],\r\n                  [votingMachine, 'getProposalTimes', [proposalId]],\r\n                ];\r\n\r\n                if (schemeTypeData.type === 'WalletScheme') {\r\n                  callsToExecute.push([\r\n                    await new web3.eth.Contract(\r\n                      WalletSchemeJSON.abi,\r\n                      schemeAddress\r\n                    ),\r\n                    'getOrganizationProposal',\r\n                    [proposalId],\r\n                  ]);\r\n                } else if (schemeTypeData.type === 'ContributionReward') {\r\n                  callsToExecute.push([\r\n                    await new web3.eth.Contract(\r\n                      ContributionRewardJSON.abi,\r\n                      schemeAddress\r\n                    ),\r\n                    'getRedeemedPeriods',\r\n                    [proposalId, networkContracts.avatar._address, 0],\r\n                  ]);\r\n                  callsToExecute.push([\r\n                    await new web3.eth.Contract(\r\n                      ContributionRewardJSON.abi,\r\n                      schemeAddress\r\n                    ),\r\n                    'getRedeemedPeriods',\r\n                    [proposalId, networkContracts.avatar._address, 1],\r\n                  ]);\r\n                  callsToExecute.push([\r\n                    await new web3.eth.Contract(\r\n                      ContributionRewardJSON.abi,\r\n                      schemeAddress\r\n                    ),\r\n                    'getRedeemedPeriods',\r\n                    [proposalId, networkContracts.avatar._address, 2],\r\n                  ]);\r\n                  callsToExecute.push([\r\n                    await new web3.eth.Contract(\r\n                      ContributionRewardJSON.abi,\r\n                      schemeAddress\r\n                    ),\r\n                    'getRedeemedPeriods',\r\n                    [proposalId, networkContracts.avatar._address, 3],\r\n                  ]);\r\n                }\r\n\r\n                const callsResponse = await executeMulticall(\r\n                  web3,\r\n                  networkContracts.multicall,\r\n                  callsToExecute\r\n                );\r\n\r\n                const votingMachineProposalInfo = web3.eth.abi.decodeParameters(\r\n                  [\r\n                    { type: 'bytes32', name: 'organizationId' },\r\n                    { type: 'address', name: 'callbacks' },\r\n                    { type: 'uint256', name: 'state' },\r\n                    { type: 'uint256', name: 'winningVote' },\r\n                    { type: 'address', name: 'proposer' },\r\n                    { type: 'uint256', name: 'currentBoostedVotePeriodLimit' },\r\n                    { type: 'bytes32', name: 'paramsHash' },\r\n                    { type: 'uint256', name: 'daoBountyRemain' },\r\n                    { type: 'uint256', name: 'daoBounty' },\r\n                    { type: 'uint256', name: 'totalStakes' },\r\n                    { type: 'uint256', name: 'confidenceThreshold' },\r\n                    {\r\n                      type: 'uint256',\r\n                      name: 'secondsFromTimeOutTillExecuteBoosted',\r\n                    },\r\n                  ],\r\n                  callsResponse.returnData[0]\r\n                );\r\n                const positiveVotes = callsResponse.returnData[1];\r\n                const negativeVotes = callsResponse.returnData[2];\r\n\r\n                const proposalStatusWithVotes = web3.eth.abi.decodeParameters(\r\n                  ['uint256', 'uint256', 'uint256', 'uint256'],\r\n                  callsResponse.returnData[3]\r\n                );\r\n                const proposalTimes = callsResponse.decodedReturnData[4];\r\n\r\n                let schemeProposalInfo = {\r\n                  to: [],\r\n                  callData: [],\r\n                  value: [],\r\n                  state: WalletSchemeProposalState.Submitted,\r\n                  title: '',\r\n                  descriptionHash: '',\r\n                  submittedTime: 0,\r\n                };\r\n                let decodedProposer;\r\n                let creationLogDecoded;\r\n\r\n                if (schemeTypeData.type === 'WalletScheme') {\r\n                  schemeProposalInfo = web3.eth.abi.decodeParameters(\r\n                    [\r\n                      { type: 'address[]', name: 'to' },\r\n                      { type: 'bytes[]', name: 'callData' },\r\n                      { type: 'uint256[]', name: 'value' },\r\n                      { type: 'uint256', name: 'state' },\r\n                      { type: 'string', name: 'title' },\r\n                      { type: 'string', name: 'descriptionHash' },\r\n                      { type: 'uint256', name: 'submittedTime' },\r\n                    ],\r\n                    callsResponse.returnData[5]\r\n                  );\r\n                } else {\r\n                  if (schemeTypeData.type === 'GenericMulticall') {\r\n                    const executionEvent = await web3.eth.getPastLogs({\r\n                      fromBlock: schemeEvent.l1BlockNumber,\r\n                      address: schemeAddress,\r\n                      topics: [\r\n                        '0x253ad9614c337848bbe7dc3b18b439d139ef5787282b5a517ba7296513d1f533',\r\n                        avatarAddressEncoded,\r\n                        proposalId,\r\n                      ],\r\n                    });\r\n                    if (executionEvent.length > 0)\r\n                      schemeProposalInfo.state =\r\n                        WalletSchemeProposalState.ExecutionSucceded;\r\n                    else\r\n                      schemeProposalInfo.state =\r\n                        WalletSchemeProposalState.Submitted;\r\n                  } else if (schemeTypeData.type === 'ContributionReward') {\r\n                    if (\r\n                      callsResponse.decodedReturnData[5] > 0 ||\r\n                      callsResponse.decodedReturnData[6] > 0 ||\r\n                      callsResponse.decodedReturnData[7] > 0 ||\r\n                      callsResponse.decodedReturnData[8] > 0\r\n                    ) {\r\n                      schemeProposalInfo.state =\r\n                        WalletSchemeProposalState.ExecutionSucceded;\r\n                    } else if (\r\n                      votingMachineProposalInfo.state === '1' ||\r\n                      votingMachineProposalInfo.state === '2'\r\n                    ) {\r\n                      schemeProposalInfo.state =\r\n                        WalletSchemeProposalState.Rejected;\r\n                    } else {\r\n                      schemeProposalInfo.state =\r\n                        WalletSchemeProposalState.Submitted;\r\n                    }\r\n                  }\r\n\r\n                  const transactionReceipt =\r\n                    await web3.eth.getTransactionReceipt(\r\n                      schemeEvent.transactionHash\r\n                    );\r\n                  try {\r\n                    schemeTypeData.newProposalTopics.map(\r\n                      (newProposalTopic, i) => {\r\n                        transactionReceipt.logs.map(log => {\r\n                          if (\r\n                            log.topics[0] ===\r\n                            '0x75b4ff136cc5de5957574c797de3334eb1c141271922b825eb071e0487ba2c5c'\r\n                          ) {\r\n                            decodedProposer = web3.eth.abi.decodeParameters(\r\n                              [\r\n                                { type: 'uint256', name: '_numOfChoices' },\r\n                                { type: 'address', name: '_proposer' },\r\n                                { type: 'bytes32', name: '_paramsHash' },\r\n                              ],\r\n                              log.data\r\n                            )._proposer;\r\n                          }\r\n                          if (\r\n                            !creationLogDecoded &&\r\n                            log.topics[0] === newProposalTopic[0]\r\n                          ) {\r\n                            creationLogDecoded = web3.eth.abi.decodeParameters(\r\n                              schemeTypeData.creationLogEncoding[i],\r\n                              log.data\r\n                            );\r\n                            if (\r\n                              creationLogDecoded._descriptionHash.length > 0 &&\r\n                              creationLogDecoded._descriptionHash !== ZERO_HASH\r\n                            ) {\r\n                              schemeProposalInfo.descriptionHash =\r\n                                ipfsHashToDescriptionHash(\r\n                                  creationLogDecoded._descriptionHash\r\n                                );\r\n                            }\r\n                          }\r\n                        });\r\n                      }\r\n                    );\r\n                  } catch (error) {\r\n                    console.error(\r\n                      'Error on adding content hash from tx',\r\n                      schemeEvent.transactionHash\r\n                    );\r\n                  }\r\n\r\n                  if (schemeTypeData.type === 'SchemeRegistrar') {\r\n                    schemeProposalInfo.to = [schemeTypeData.contractToCall];\r\n                    schemeProposalInfo.value = [0];\r\n\r\n                    if (creationLogDecoded._parametersHash) {\r\n                      schemeProposalInfo.callData = [\r\n                        web3.eth.abi.encodeFunctionCall(\r\n                          {\r\n                            name: 'registerScheme',\r\n                            type: 'function',\r\n                            inputs: [\r\n                              { type: 'address', name: '_scheme' },\r\n                              { type: 'bytes32', name: '_paramsHash' },\r\n                              { type: 'bytes4', name: '_permissions' },\r\n                              { type: 'address', name: '_avatar' },\r\n                            ],\r\n                          },\r\n                          [\r\n                            creationLogDecoded['_scheme '],\r\n                            creationLogDecoded._parametersHash,\r\n                            creationLogDecoded._permissions,\r\n                            avatarAddress,\r\n                          ]\r\n                        ),\r\n                      ];\r\n                    } else {\r\n                      schemeProposalInfo.callData = [\r\n                        web3.eth.abi.encodeFunctionCall(\r\n                          {\r\n                            name: 'unregisterScheme',\r\n                            type: 'function',\r\n                            inputs: [\r\n                              { type: 'address', name: '_scheme' },\r\n                              { type: 'address', name: '_avatar' },\r\n                            ],\r\n                          },\r\n                          [creationLogDecoded['_scheme '], avatarAddress]\r\n                        ),\r\n                      ];\r\n                    }\r\n                  } else if (schemeTypeData.type === 'ContributionReward') {\r\n                    if (creationLogDecoded._reputationChange > 0) {\r\n                      schemeProposalInfo.to.push(schemeTypeData.contractToCall);\r\n                      schemeProposalInfo.value.push(0);\r\n                      schemeProposalInfo.callData.push(\r\n                        web3.eth.abi.encodeFunctionCall(\r\n                          {\r\n                            name: 'mintReputation',\r\n                            type: 'function',\r\n                            inputs: [\r\n                              { type: 'uint256', name: '_amount' },\r\n                              { type: 'address', name: '_to' },\r\n                              { type: 'address', name: '_avatar' },\r\n                            ],\r\n                          },\r\n                          [\r\n                            creationLogDecoded._reputationChange,\r\n                            creationLogDecoded._beneficiary,\r\n                            avatarAddress,\r\n                          ]\r\n                        )\r\n                      );\r\n                    } else if (creationLogDecoded._reputationChange < 0) {\r\n                      schemeProposalInfo.to.push(schemeTypeData.contractToCall);\r\n                      schemeProposalInfo.value.push(0);\r\n                      schemeProposalInfo.callData.push(\r\n                        web3.eth.abi.encodeFunctionCall(\r\n                          {\r\n                            name: 'burnReputation',\r\n                            type: 'function',\r\n                            inputs: [\r\n                              { type: 'uint256', name: '_amount' },\r\n                              { type: 'address', name: '_from' },\r\n                              { type: 'address', name: '_avatar' },\r\n                            ],\r\n                          },\r\n                          [\r\n                            bnum(creationLogDecoded._reputationChange).times(\r\n                              -1\r\n                            ),\r\n                            creationLogDecoded._beneficiary,\r\n                            avatarAddress,\r\n                          ]\r\n                        )\r\n                      );\r\n                    }\r\n\r\n                    if (creationLogDecoded._rewards[0] > 0) {\r\n                      schemeProposalInfo.to.push(schemeTypeData.contractToCall);\r\n                      schemeProposalInfo.value.push(0);\r\n                      schemeProposalInfo.callData.push(\r\n                        web3.eth.abi.encodeFunctionCall(\r\n                          {\r\n                            name: 'mintTokens',\r\n                            type: 'function',\r\n                            inputs: [\r\n                              { type: 'uint256', name: '_amount' },\r\n                              { type: 'address', name: '_beneficiary' },\r\n                              { type: 'address', name: '_avatar' },\r\n                            ],\r\n                          },\r\n                          [\r\n                            creationLogDecoded._rewards[0],\r\n                            creationLogDecoded._beneficiary,\r\n                            avatarAddress,\r\n                          ]\r\n                        )\r\n                      );\r\n                    }\r\n\r\n                    if (creationLogDecoded._rewards[1] > 0) {\r\n                      schemeProposalInfo.to.push(schemeTypeData.contractToCall);\r\n                      schemeProposalInfo.value.push(0);\r\n                      schemeProposalInfo.callData.push(\r\n                        web3.eth.abi.encodeFunctionCall(\r\n                          {\r\n                            name: 'sendEther',\r\n                            type: 'function',\r\n                            inputs: [\r\n                              { type: 'uint256', name: '_amountInWei' },\r\n                              { type: 'address', name: '_to' },\r\n                              { type: 'address', name: '_avatar' },\r\n                            ],\r\n                          },\r\n                          [\r\n                            creationLogDecoded._rewards[1],\r\n                            creationLogDecoded._beneficiary,\r\n                            avatarAddress,\r\n                          ]\r\n                        )\r\n                      );\r\n                    }\r\n\r\n                    if (creationLogDecoded._rewards[2] > 0) {\r\n                      schemeProposalInfo.to.push(schemeTypeData.contractToCall);\r\n                      schemeProposalInfo.value.push(0);\r\n                      schemeProposalInfo.callData.push(\r\n                        web3.eth.abi.encodeFunctionCall(\r\n                          {\r\n                            name: 'externalTokenTransfer',\r\n                            type: 'function',\r\n                            inputs: [\r\n                              { type: 'address', name: '_externalToken' },\r\n                              { type: 'address', name: '_to' },\r\n                              { type: 'uint256', name: '_value' },\r\n                              { type: 'address', name: '_avatar' },\r\n                            ],\r\n                          },\r\n                          [\r\n                            creationLogDecoded._externalToken,\r\n                            creationLogDecoded._beneficiary,\r\n                            creationLogDecoded._rewards[2],\r\n                            avatarAddress,\r\n                          ]\r\n                        )\r\n                      );\r\n                    }\r\n                  } else if (schemeTypeData.type === 'GenericScheme') {\r\n                    schemeProposalInfo.to = [\r\n                      networkContracts.controller._address,\r\n                    ];\r\n                    schemeProposalInfo.value = [0];\r\n                    schemeProposalInfo.callData = [\r\n                      web3.eth.abi.encodeFunctionCall(\r\n                        {\r\n                          name: 'genericCall',\r\n                          type: 'function',\r\n                          inputs: [\r\n                            { type: 'address', name: '_contract' },\r\n                            { type: 'bytes', name: '_data' },\r\n                            { type: 'address', name: '_avatar' },\r\n                            { type: 'uint256', name: '_value' },\r\n                          ],\r\n                        },\r\n                        [\r\n                          schemeTypeData.contractToCall,\r\n                          creationLogDecoded._data,\r\n                          avatarAddress,\r\n                          creationLogDecoded._value,\r\n                        ]\r\n                      ),\r\n                    ];\r\n                  } else if (schemeTypeData.type === 'GenericMulticall') {\r\n                    for (\r\n                      let callIndex = 0;\r\n                      callIndex < creationLogDecoded._contractsToCall.length;\r\n                      callIndex++\r\n                    ) {\r\n                      schemeProposalInfo.to.push(\r\n                        networkContracts.controller._address\r\n                      );\r\n                      schemeProposalInfo.value.push(0);\r\n                      schemeProposalInfo.callData.push(\r\n                        web3.eth.abi.encodeFunctionCall(\r\n                          {\r\n                            name: 'genericCall',\r\n                            type: 'function',\r\n                            inputs: [\r\n                              { type: 'address', name: '_contract' },\r\n                              { type: 'bytes', name: '_data' },\r\n                              { type: 'address', name: '_avatar' },\r\n                              { type: 'uint256', name: '_value' },\r\n                            ],\r\n                          },\r\n                          [\r\n                            creationLogDecoded._contractsToCall[callIndex],\r\n                            creationLogDecoded._callsData[callIndex],\r\n                            avatarAddress,\r\n                            creationLogDecoded._values[callIndex],\r\n                          ]\r\n                        )\r\n                      );\r\n                    }\r\n                  }\r\n                }\r\n\r\n                networkCache.proposals[proposalId] = {\r\n                  id: proposalId,\r\n                  scheme: schemeAddress,\r\n                  to: schemeProposalInfo.to,\r\n                  title: schemeProposalInfo.title,\r\n                  callData: schemeProposalInfo.callData,\r\n                  values: schemeProposalInfo.value.map(value => bnum(value)),\r\n                  stateInScheme: Number(schemeProposalInfo.state),\r\n                  stateInVotingMachine: Number(votingMachineProposalInfo.state),\r\n                  descriptionHash: schemeProposalInfo.descriptionHash,\r\n                  creationEvent: {\r\n                    event: schemeEvent.event,\r\n                    signature: schemeEvent.signature,\r\n                    address: schemeEvent.address,\r\n                    tx: schemeEvent.transactionHash,\r\n                    l1BlockNumber: schemeEvent.l1BlockNumber,\r\n                    l2BlockNumber: schemeEvent.l2BlockNumber,\r\n                    timestamp: schemeEvent.timestamp,\r\n                    transactionIndex: schemeEvent.transactionIndex,\r\n                    logIndex: schemeEvent.logIndex,\r\n                  },\r\n                  winningVote: votingMachineProposalInfo.winningVote,\r\n                  proposer: decodedProposer\r\n                    ? decodedProposer\r\n                    : votingMachineProposalInfo.proposer,\r\n                  currentBoostedVotePeriodLimit:\r\n                    votingMachineProposalInfo.currentBoostedVotePeriodLimit,\r\n                  paramsHash: votingMachineProposalInfo.paramsHash,\r\n                  daoBountyRemain: bnum(\r\n                    votingMachineProposalInfo.daoBountyRemain\r\n                  ),\r\n                  daoBounty: bnum(votingMachineProposalInfo.daoBounty),\r\n                  totalStakes: bnum(votingMachineProposalInfo.totalStakes),\r\n                  confidenceThreshold:\r\n                    votingMachineProposalInfo.confidenceThreshold,\r\n                  secondsFromTimeOutTillExecuteBoosted:\r\n                    votingMachineProposalInfo.secondsFromTimeOutTillExecuteBoosted,\r\n                  submittedTime: bnum(proposalTimes[0]),\r\n                  boostedPhaseTime: bnum(proposalTimes[1]),\r\n                  preBoostedPhaseTime: bnum(proposalTimes[2]),\r\n                  daoRedeemItsWinnings:\r\n                    votingMachineProposalInfo.daoRedeemItsWinnings,\r\n                  shouldBoost: false,\r\n                  positiveVotes: bnum(positiveVotes),\r\n                  negativeVotes: bnum(negativeVotes),\r\n                  preBoostedPositiveVotes: bnum(proposalStatusWithVotes[0]),\r\n                  preBoostedNegativeVotes: bnum(proposalStatusWithVotes[1]),\r\n                  positiveStakes: bnum(proposalStatusWithVotes[2]),\r\n                  negativeStakes: bnum(proposalStatusWithVotes[3]),\r\n                };\r\n\r\n                networkCache.schemes[schemeAddress].proposalIds.push(\r\n                  proposalId\r\n                );\r\n                networkCache.schemes[schemeAddress].newProposalEvents.push({\r\n                  proposalId: proposalId,\r\n                  event: schemeEvent.event,\r\n                  signature: schemeEvent.signature,\r\n                  address: schemeEvent.address,\r\n                  tx: schemeEvent.transactionHash,\r\n                  l1BlockNumber: schemeEvent.l1BlockNumber,\r\n                  l2BlockNumber: schemeEvent.l2BlockNumber,\r\n                  timestamp: schemeEvent.timestamp,\r\n                  transactionIndex: schemeEvent.transactionIndex,\r\n                  logIndex: schemeEvent.logIndex,\r\n                });\r\n\r\n                if (schemeProposalInfo.descriptionHash.length > 1) {\r\n                  networkCache.ipfsHashes.push({\r\n                    hash: descriptionHashToIPFSHash(\r\n                      schemeProposalInfo.descriptionHash\r\n                    ),\r\n                    type: 'proposal',\r\n                    name: proposalId,\r\n                  });\r\n                }\r\n              }\r\n            )\r\n          );\r\n\r\n          schemeEventsBatchsIndex++;\r\n        } catch (error) {\r\n          console.error('Error:', (error as Error).message);\r\n          console.debug(\r\n            'Trying again getting proposal info of schemeEventsBatchs index',\r\n            schemeEventsBatchsIndex\r\n          );\r\n        }\r\n      }\r\n    })\r\n  );\r\n\r\n  let retryIntent = 0;\r\n  // Update proposals title\r\n  for (\r\n    let proposalIndex = 0;\r\n    proposalIndex < Object.keys(networkCache.proposals).length;\r\n    proposalIndex++\r\n  ) {\r\n    const proposal =\r\n      networkCache.proposals[\r\n        Object.keys(networkCache.proposals)[proposalIndex]\r\n      ];\r\n    const ipfsHash = descriptionHashToIPFSHash(proposal.descriptionHash);\r\n    if (retryIntent > 3) {\r\n      retryIntent = 0;\r\n      continue;\r\n    }\r\n    if (\r\n      networkCache.schemes[proposal.scheme].type !== 'WalletScheme' &&\r\n      proposal.descriptionHash &&\r\n      proposal.descriptionHash.length > 0 &&\r\n      // Try to get title if cache is running in node script or if proposal was submitted in last 100000 blocks\r\n      proposal.title.length === 0 &&\r\n      (isNode() ||\r\n        proposal.creationEvent.l1BlockNumber > Number(toBlock) - 100000)\r\n    )\r\n      try {\r\n        console.debug(\r\n          'Getting title from proposal',\r\n          proposal.id,\r\n          proposal.descriptionHash,\r\n          ipfsHash\r\n        );\r\n        const response = await axios.request({\r\n          url: 'https://ipfs.io/ipfs/' + ipfsHash,\r\n          method: 'GET',\r\n          timeout: isNode() ? 5000 : 1000,\r\n        });\r\n        if (response && response.data && response.data.title) {\r\n          networkCache.proposals[proposal.id].title = response.data.title;\r\n        } else {\r\n          console.error('Couldnt not get title from', proposal.id, ipfsHash);\r\n        }\r\n      } catch (error) {\r\n        console.error(\r\n          'Error getting title from',\r\n          proposal.id,\r\n          ipfsHash,\r\n          'waiting 2 seconds and trying again..'\r\n        );\r\n        console.error((error as Error).message);\r\n        if ((error as Error).message === 'Request failed with status code 429')\r\n          await sleep(10000);\r\n        if (isNode()) {\r\n          proposalIndex--;\r\n          retryIntent++;\r\n          await sleep(1000);\r\n        }\r\n      }\r\n  }\r\n\r\n  // Update existent active proposals\r\n  await Promise.all(\r\n    Object.keys(networkCache.proposals).map(async proposalId => {\r\n      if (\r\n        isNode() ||\r\n        networkCache.proposals[proposalId].stateInVotingMachine >\r\n          VotingMachineProposalState.Executed ||\r\n        networkCache.proposals[proposalId].stateInScheme ===\r\n          WalletSchemeProposalState.Submitted\r\n      ) {\r\n        const schemeAddress = networkCache.proposals[proposalId].scheme;\r\n        const schemeTypeData = getSchemeTypeData(networkConfig, schemeAddress);\r\n        const votingMachine =\r\n          networkContracts.votingMachines[schemeTypeData.votingMachine]\r\n            .contract;\r\n\r\n        // Get all the proposal information from the scheme and voting machine\r\n        let callsToExecute = [\r\n          [votingMachine, 'proposals', [proposalId]],\r\n          [votingMachine, 'voteStatus', [proposalId, 1]],\r\n          [votingMachine, 'voteStatus', [proposalId, 2]],\r\n          [votingMachine, 'proposalStatus', [proposalId]],\r\n          [votingMachine, 'getProposalTimes', [proposalId]],\r\n          [votingMachine, 'shouldBoost', [proposalId]],\r\n        ];\r\n\r\n        if (schemeTypeData.type === 'WalletScheme') {\r\n          callsToExecute.push([\r\n            await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress),\r\n            'getOrganizationProposal',\r\n            [proposalId],\r\n          ]);\r\n        } else if (\r\n          schemeTypeData.type === 'ContributionReward' &&\r\n          networkCache.proposals[proposalId].stateInVotingMachine ===\r\n            VotingMachineProposalState.Executed &&\r\n          networkCache.proposals[proposalId].stateInScheme ===\r\n            WalletSchemeProposalState.Submitted\r\n        ) {\r\n          callsToExecute.push([\r\n            await new web3.eth.Contract(\r\n              ContributionRewardJSON.abi,\r\n              schemeAddress\r\n            ),\r\n            'getRedeemedPeriods',\r\n            [proposalId, networkContracts.avatar._address, 0],\r\n          ]);\r\n          callsToExecute.push([\r\n            await new web3.eth.Contract(\r\n              ContributionRewardJSON.abi,\r\n              schemeAddress\r\n            ),\r\n            'getRedeemedPeriods',\r\n            [proposalId, networkContracts.avatar._address, 1],\r\n          ]);\r\n          callsToExecute.push([\r\n            await new web3.eth.Contract(\r\n              ContributionRewardJSON.abi,\r\n              schemeAddress\r\n            ),\r\n            'getRedeemedPeriods',\r\n            [proposalId, networkContracts.avatar._address, 2],\r\n          ]);\r\n          callsToExecute.push([\r\n            await new web3.eth.Contract(\r\n              ContributionRewardJSON.abi,\r\n              schemeAddress\r\n            ),\r\n            'getRedeemedPeriods',\r\n            [proposalId, networkContracts.avatar._address, 3],\r\n          ]);\r\n        }\r\n\r\n        const callsResponse = await executeMulticall(\r\n          web3,\r\n          networkContracts.multicall,\r\n          callsToExecute\r\n        );\r\n\r\n        const votingMachineProposalInfo = web3.eth.abi.decodeParameters(\r\n          [\r\n            { type: 'bytes32', name: 'organizationId' },\r\n            { type: 'address', name: 'callbacks' },\r\n            { type: 'uint256', name: 'state' },\r\n            { type: 'uint256', name: 'winningVote' },\r\n            { type: 'address', name: 'proposer' },\r\n            { type: 'uint256', name: 'currentBoostedVotePeriodLimit' },\r\n            { type: 'bytes32', name: 'paramsHash' },\r\n            { type: 'uint256', name: 'daoBountyRemain' },\r\n            { type: 'uint256', name: 'daoBounty' },\r\n            { type: 'uint256', name: 'totalStakes' },\r\n            { type: 'uint256', name: 'confidenceThreshold' },\r\n            { type: 'uint256', name: 'secondsFromTimeOutTillExecuteBoosted' },\r\n          ],\r\n          callsResponse.returnData[0]\r\n        );\r\n        const positiveVotes = callsResponse.returnData[1];\r\n        const negativeVotes = callsResponse.returnData[2];\r\n\r\n        const proposalStatusWithVotes = web3.eth.abi.decodeParameters(\r\n          ['uint256', 'uint256', 'uint256', 'uint256'],\r\n          callsResponse.returnData[3]\r\n        );\r\n        const proposalTimes = callsResponse.decodedReturnData[4];\r\n        const proposalShouldBoost = callsResponse.decodedReturnData[5];\r\n\r\n        if (schemeTypeData.type === 'WalletScheme') {\r\n          networkCache.proposals[proposalId].stateInScheme = Number(\r\n            web3.eth.abi.decodeParameters(\r\n              [\r\n                { type: 'address[]', name: 'to' },\r\n                { type: 'bytes[]', name: 'callData' },\r\n                { type: 'uint256[]', name: 'value' },\r\n                { type: 'uint256', name: 'state' },\r\n                { type: 'string', name: 'title' },\r\n                { type: 'string', name: 'descriptionHash' },\r\n                { type: 'uint256', name: 'submittedTime' },\r\n              ],\r\n              callsResponse.returnData[6]\r\n            ).state\r\n          );\r\n        } else if (\r\n          schemeTypeData.type === 'ContributionReward' &&\r\n          networkCache.proposals[proposalId].stateInVotingMachine ===\r\n            VotingMachineProposalState.Executed &&\r\n          networkCache.proposals[proposalId].stateInScheme ===\r\n            WalletSchemeProposalState.Submitted\r\n        ) {\r\n          if (schemeTypeData.type === 'ContributionReward') {\r\n            if (\r\n              callsResponse.decodedReturnData[6] > 0 ||\r\n              callsResponse.decodedReturnData[7] > 0 ||\r\n              callsResponse.decodedReturnData[8] > 0 ||\r\n              callsResponse.decodedReturnData[9] > 0\r\n            ) {\r\n              networkCache.proposals[proposalId].stateInScheme =\r\n                WalletSchemeProposalState.ExecutionSucceded;\r\n            } else if (\r\n              votingMachineProposalInfo.state === '1' ||\r\n              votingMachineProposalInfo.state === '2'\r\n            ) {\r\n              networkCache.proposals[proposalId].stateInScheme =\r\n                WalletSchemeProposalState.Rejected;\r\n            }\r\n          }\r\n        } else if (schemeTypeData.type === 'GenericMulticall') {\r\n          const executionEvent = await web3.eth.getPastLogs({\r\n            fromBlock:\r\n              networkCache.proposals[proposalId].creationEvent.l1BlockNumber,\r\n            address: schemeAddress,\r\n            topics: [\r\n              '0x6bc0cb9e9967b59a69ace442598e1df4368d38661bd5c0800fbcbc9fe855fbbe',\r\n              avatarAddressEncoded,\r\n              proposalId,\r\n            ],\r\n          });\r\n          if (executionEvent.length > 0)\r\n            networkCache.proposals[proposalId].stateInScheme =\r\n              WalletSchemeProposalState.ExecutionSucceded;\r\n          else\r\n            networkCache.proposals[proposalId].stateInScheme =\r\n              WalletSchemeProposalState.Submitted;\r\n        } else if (\r\n          networkCache.proposals[proposalId].stateInVotingMachine ===\r\n          VotingMachineProposalState.Executed\r\n        ) {\r\n          networkCache.proposals[proposalId].stateInScheme =\r\n            WalletSchemeProposalState.ExecutionSucceded;\r\n        }\r\n\r\n        networkCache.proposals[proposalId].stateInVotingMachine = Number(\r\n          votingMachineProposalInfo.state\r\n        );\r\n        networkCache.proposals[proposalId].winningVote =\r\n          votingMachineProposalInfo.winningVote;\r\n        networkCache.proposals[proposalId].currentBoostedVotePeriodLimit =\r\n          votingMachineProposalInfo.currentBoostedVotePeriodLimit;\r\n        networkCache.proposals[proposalId].daoBountyRemain = bnum(\r\n          votingMachineProposalInfo.daoBountyRemain\r\n        );\r\n        networkCache.proposals[proposalId].daoBounty = bnum(\r\n          votingMachineProposalInfo.daoBounty\r\n        );\r\n        networkCache.proposals[proposalId].totalStakes = bnum(\r\n          votingMachineProposalInfo.totalStakes\r\n        );\r\n        networkCache.proposals[proposalId].confidenceThreshold =\r\n          votingMachineProposalInfo.confidenceThreshold;\r\n        networkCache.proposals[\r\n          proposalId\r\n        ].secondsFromTimeOutTillExecuteBoosted =\r\n          votingMachineProposalInfo.secondsFromTimeOutTillExecuteBoosted;\r\n        networkCache.proposals[proposalId].boostedPhaseTime = bnum(\r\n          proposalTimes[1]\r\n        );\r\n        networkCache.proposals[proposalId].preBoostedPhaseTime = bnum(\r\n          proposalTimes[2]\r\n        );\r\n        networkCache.proposals[proposalId].daoRedeemItsWinnings =\r\n          votingMachineProposalInfo.daoRedeemItsWinnings;\r\n        networkCache.proposals[proposalId].shouldBoost = proposalShouldBoost;\r\n        networkCache.proposals[proposalId].positiveVotes = bnum(positiveVotes);\r\n        networkCache.proposals[proposalId].negativeVotes = bnum(negativeVotes);\r\n        networkCache.proposals[proposalId].preBoostedPositiveVotes = bnum(\r\n          proposalStatusWithVotes[0]\r\n        );\r\n        networkCache.proposals[proposalId].preBoostedNegativeVotes = bnum(\r\n          proposalStatusWithVotes[1]\r\n        );\r\n        networkCache.proposals[proposalId].positiveStakes = bnum(\r\n          proposalStatusWithVotes[2]\r\n        );\r\n        networkCache.proposals[proposalId].negativeStakes = bnum(\r\n          proposalStatusWithVotes[3]\r\n        );\r\n      }\r\n    })\r\n  );\r\n\r\n  return networkCache;\r\n};\r\n","import RootContext from '../contexts';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\r\nimport { isChainIdSupported } from '../provider/connectors';\r\nimport { ContractType } from './Provider';\r\nimport { bnum } from '../utils';\r\nimport { getUpdatedCache } from '../cache';\r\n\r\nexport default class BlockchainStore {\r\n  activeFetchLoop: boolean = false;\r\n  initialLoadComplete: boolean;\r\n  contractStorage: ContractStorage = {};\r\n  eventsStorage: EventStorage = {};\r\n  context: RootContext;\r\n\r\n  constructor(context) {\r\n    this.context = context;\r\n    makeObservable(this, {\r\n      activeFetchLoop: observable,\r\n      initialLoadComplete: observable,\r\n      updateStore: action,\r\n      fetchData: action,\r\n    });\r\n  }\r\n\r\n  reduceMulticall(\r\n    calls: Call[],\r\n    results: any,\r\n    blockNumber: number\r\n  ): CallEntry[] {\r\n    const { multicallService } = this.context;\r\n    return calls.map((call, index) => {\r\n      const value = multicallService.decodeCall(call, results[index]);\r\n      return {\r\n        contractType: call.contractType,\r\n        address: call.address,\r\n        method: call.method,\r\n        params: call.params,\r\n        response: {\r\n          value: value,\r\n          lastFetched: blockNumber,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  async executeAndUpdateMulticall(multicallService) {\r\n    const multicallResponse = await multicallService.executeCalls();\r\n    this.updateStore(\r\n      this.reduceMulticall(\r\n        multicallResponse.calls,\r\n        multicallResponse.results,\r\n        multicallResponse.blockNumber\r\n      ),\r\n      multicallResponse.blockNumber\r\n    );\r\n    multicallService.resetActiveCalls();\r\n  }\r\n\r\n  has(entry: Call): boolean {\r\n    const params = entry.params ? entry.params : [];\r\n    return (\r\n      !!this.contractStorage[entry.contractType] &&\r\n      !!this.contractStorage[entry.contractType][entry.address] &&\r\n      !!this.contractStorage[entry.contractType][entry.address][entry.method] &&\r\n      !!this.contractStorage[entry.contractType][entry.address][entry.method][\r\n        params.toString()\r\n      ]\r\n    );\r\n  }\r\n\r\n  getCachedValue(entry: Call) {\r\n    if (this.has(entry)) {\r\n      return this.get(entry).value.toString();\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  getCachedEvents(address: string, eventName: string) {\r\n    if (this.eventsStorage[address] && this.eventsStorage[address][eventName])\r\n      return this.eventsStorage[address][eventName].emitions;\r\n    else return [];\r\n  }\r\n\r\n  get(entry: Call): CallValue | undefined {\r\n    if (this.has(entry)) {\r\n      const params = entry.params ? entry.params : [];\r\n      return this.contractStorage[entry.contractType][entry.address][\r\n        entry.method\r\n      ][params.toString()];\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  updateStore(entries: CallEntry[], blockNumber: number) {\r\n    entries.forEach(entry => {\r\n      const params = entry.params ? entry.params : [];\r\n      if (!this.contractStorage[entry.contractType]) {\r\n        this.contractStorage[entry.contractType] = {};\r\n      }\r\n\r\n      if (!this.contractStorage[entry.contractType][entry.address]) {\r\n        this.contractStorage[entry.contractType][entry.address] = {};\r\n      }\r\n\r\n      if (\r\n        !this.contractStorage[entry.contractType][entry.address][entry.method]\r\n      ) {\r\n        this.contractStorage[entry.contractType][entry.address][entry.method] =\r\n          {};\r\n      }\r\n\r\n      if (\r\n        !this.contractStorage[entry.contractType][entry.address][entry.method][\r\n          params.toString()\r\n        ]\r\n      ) {\r\n        this.contractStorage[entry.contractType][entry.address][entry.method][\r\n          params.toString()\r\n        ] = {\r\n          value: entry.response.value,\r\n          lastFetched: entry.response.lastFetched,\r\n        };\r\n      }\r\n\r\n      const oldEntry =\r\n        this.contractStorage[entry.contractType][entry.address][entry.method][\r\n          params.toString()\r\n        ];\r\n\r\n      // Set if never fetched, or if the new data isn't stale\r\n      if (\r\n        !oldEntry.lastFetched ||\r\n        (oldEntry.lastFetched && oldEntry.lastFetched <= blockNumber)\r\n      ) {\r\n        this.contractStorage[entry.contractType][entry.address][entry.method][\r\n          params.toString()\r\n        ] = {\r\n          value: entry.response.value,\r\n          lastFetched: entry.response.lastFetched,\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  async fetchData(web3React: Web3ReactContextInterface, reset: boolean) {\r\n    if (\r\n      !this.activeFetchLoop ||\r\n      (reset &&\r\n        web3React &&\r\n        web3React.active &&\r\n        isChainIdSupported(web3React.chainId))\r\n    ) {\r\n      this.initialLoadComplete = reset ? false : this.initialLoadComplete;\r\n      this.activeFetchLoop = true;\r\n      try {\r\n        const { library, chainId } = web3React;\r\n        const {\r\n          providerStore,\r\n          configStore,\r\n          multicallService,\r\n          ipfsService,\r\n          daoStore,\r\n        } = this.context;\r\n        const networkName = configStore.getActiveChainName();\r\n\r\n        const cache = await caches.open(`dxvote-cache`);\r\n        let match = await cache.match(networkName);\r\n        let networkCache = null;\r\n        if (match) {\r\n          networkCache = JSON.parse(await match.text());\r\n        }\r\n\r\n        const blockNumber = (await library.eth.getBlockNumber()) - 1;\r\n\r\n        // Fetch cache from ipfs if not in localStorage or newer hash is available\r\n        const newestCacheIpfsHash = configStore.getCacheIPFSHash(networkName);\r\n        if (\r\n          !networkCache ||\r\n          !(newestCacheIpfsHash === networkCache.baseCacheIpfsHash)\r\n        ) {\r\n          console.debug('[IPFS Cache Fetch]', networkName, newestCacheIpfsHash);\r\n          networkCache = daoStore.parseCache(\r\n            await ipfsService.getContentFromIPFS(newestCacheIpfsHash)\r\n          );\r\n          networkCache.baseCacheIpfsHash = newestCacheIpfsHash;\r\n        }\r\n\r\n        const lastCheckedBlockNumber = networkCache.l1BlockNumber;\r\n\r\n        if (blockNumber > lastCheckedBlockNumber + 1) {\r\n          console.debug(\r\n            '[Fetch Loop] Fetch Blockchain Data',\r\n            blockNumber,\r\n            chainId\r\n          );\r\n\r\n          const fromBlock = lastCheckedBlockNumber;\r\n          const toBlock = blockNumber;\r\n          const networkContracts = configStore.getNetworkContracts();\r\n          networkCache = await getUpdatedCache(\r\n            networkCache,\r\n            networkContracts,\r\n            fromBlock,\r\n            toBlock,\r\n            library\r\n          );\r\n\r\n          let tokensBalancesCalls = [];\r\n          const tokens = configStore.getTokensToFetchPrice();\r\n          tokens.map(token => {\r\n            if (!networkCache.daoInfo.tokenBalances[token.address])\r\n              tokensBalancesCalls.push({\r\n                contractType: ContractType.ERC20,\r\n                address: token.address,\r\n                method: 'balanceOf',\r\n                params: [networkContracts.avatar],\r\n              });\r\n            Object.keys(networkCache.schemes).map(schemeAddress => {\r\n              if (\r\n                networkCache.schemes[schemeAddress].controllerAddress !==\r\n                networkContracts.controller\r\n              )\r\n                tokensBalancesCalls.push({\r\n                  contractType: ContractType.ERC20,\r\n                  address: token.address,\r\n                  method: 'balanceOf',\r\n                  params: [schemeAddress],\r\n                });\r\n            });\r\n          });\r\n\r\n          if (tokensBalancesCalls.length > 0)\r\n            multicallService.addCalls(tokensBalancesCalls);\r\n          await this.executeAndUpdateMulticall(multicallService);\r\n\r\n          tokensBalancesCalls.map(tokensBalancesCall => {\r\n            if (tokensBalancesCall.params[0] === networkContracts.avatar) {\r\n              networkCache.daoInfo.tokenBalances[tokensBalancesCall.address] =\r\n                this.context.blockchainStore.getCachedValue(\r\n                  tokensBalancesCall\r\n                ) || bnum(0);\r\n            } else {\r\n              networkCache.schemes[tokensBalancesCall.params[0]].tokenBalances[\r\n                tokensBalancesCall.address\r\n              ] =\r\n                this.context.blockchainStore.getCachedValue(\r\n                  tokensBalancesCall\r\n                ) || bnum(0);\r\n            }\r\n          });\r\n\r\n          networkCache.l1BlockNumber = toBlock;\r\n          providerStore.setCurrentBlockNumber(toBlock);\r\n\r\n          await cache.put(\r\n            networkName,\r\n            new Response(JSON.stringify(networkCache))\r\n          );\r\n        }\r\n        daoStore.setCache(networkCache);\r\n        this.initialLoadComplete = true;\r\n        this.activeFetchLoop = false;\r\n      } catch (error) {\r\n        console.error((error as Error).message);\r\n        this.activeFetchLoop = false;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import RootContext from '../contexts';\r\nimport axios from 'axios';\r\nimport { ETH_NETWORKS_IDS } from 'provider/connectors';\r\n\r\nexport default class CustomRpcService {\r\n  context: RootContext;\r\n  auth: Boolean = false;\r\n\r\n  constructor(context: RootContext) {\r\n    this.context = context;\r\n  }\r\n\r\n  async isAuthenticated() {\r\n    const customRpcUrl = this.context.configStore.getLocalConfig().customRpcUrl;\r\n\r\n    if (customRpcUrl && customRpcUrl.length > 0) {\r\n      try {\r\n        const auth = await axios({\r\n          method: 'POST',\r\n          url: customRpcUrl,\r\n          data: {\r\n            jsonrpc: '2.0',\r\n            method: 'eth_blockNumber',\r\n            params: [],\r\n            id: 1,\r\n          },\r\n        });\r\n        this.auth = auth.status === 200;\r\n      } catch (e) {\r\n        this.auth = false;\r\n      }\r\n    } else {\r\n      this.auth = false;\r\n    }\r\n  }\r\n\r\n  getRpcUrls() {\r\n    const customRpcUrl = this.context.configStore.getLocalConfig().customRpcUrl;\r\n    if (!customRpcUrl) return null;\r\n\r\n    return ETH_NETWORKS_IDS.reduce((prevUrls, chainId) => {\r\n      prevUrls[chainId] = customRpcUrl;\r\n      return prevUrls;\r\n    }, {});\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport ABIService from '../services/ABIService';\r\nimport MulticallService from '../services/MulticallService';\r\nimport DaoService from '../services/DaoService';\r\nimport EventsService from '../services/EventsService';\r\nimport IPFSService from '../services/IPFSService';\r\nimport PinataService from '../services/PinataService';\r\nimport EtherscanService from '../services/EtherscanService';\r\nimport CoingeckoService from '../services/CoingeckoService';\r\nimport InfuraService from 'services/InfuraService';\r\nimport AlchemyService from 'services/AlchemyService';\r\n\r\nimport ProviderStore from '../stores/Provider';\r\nimport TransactionStore from '../stores/Transaction';\r\nimport ModalStore from '../stores/Modal';\r\nimport ConfigStore from '../stores/ConfigStore';\r\nimport DaoStore from '../stores/DaoStore';\r\nimport UserStore from '../stores/UserStore';\r\nimport BlockchainStore from '../stores/BlockchainStore';\r\nimport CustomRpcService from 'services/CustomRpcService';\r\n\r\n/*\r\nhttps://reactjs.org/docs/context.html#reactcreatecontext\r\n\r\nContext provides a way to pass data through the component tree without having to pass props down manually at every level.\r\n\r\nIn a typical React application, data is passed top-down (parent to child) via props, but such usage can be cumbersome for certain types of props (e.g. locale preference, UI theme) that are required by many components within an application. Context provides a way to share values like these between components without having to explicitly pass a prop through every level of the tree.\r\n\r\nA root single context calss is exported with the services and stores of the dapp.\r\n\r\nServices: Contexts that are not use to store data, only to process information in the dapp and fecth information from external protocols and APIs.\r\nStores: Context that are used to store data and expose them all around the dapp.\r\n*/\r\n\r\nexport default class RootContext {\r\n  providerStore: ProviderStore;\r\n  transactionStore: TransactionStore;\r\n  modalStore: ModalStore;\r\n  configStore: ConfigStore;\r\n  daoStore: DaoStore;\r\n  userStore: UserStore;\r\n  blockchainStore: BlockchainStore;\r\n\r\n  abiService: ABIService;\r\n  multicallService: MulticallService;\r\n  daoService: DaoService;\r\n  eventsService: EventsService;\r\n  ipfsService: IPFSService;\r\n  pinataService: PinataService;\r\n  etherscanService: EtherscanService;\r\n  coingeckoService: CoingeckoService;\r\n  infuraService: InfuraService;\r\n  alchemyService: AlchemyService;\r\n  customRpcService: CustomRpcService;\r\n\r\n  constructor() {\r\n    this.providerStore = new ProviderStore(this);\r\n    this.transactionStore = new TransactionStore(this);\r\n    this.modalStore = new ModalStore(this);\r\n    this.configStore = new ConfigStore(this);\r\n    this.daoStore = new DaoStore(this);\r\n    this.userStore = new UserStore(this);\r\n    this.blockchainStore = new BlockchainStore(this);\r\n\r\n    this.abiService = new ABIService(this);\r\n    this.multicallService = new MulticallService(this);\r\n    this.eventsService = new EventsService(this);\r\n    this.daoService = new DaoService(this);\r\n    this.ipfsService = new IPFSService(this);\r\n    this.pinataService = new PinataService(this);\r\n    this.etherscanService = new EtherscanService(this);\r\n    this.coingeckoService = new CoingeckoService(this);\r\n    this.infuraService = new InfuraService(this);\r\n    this.alchemyService = new AlchemyService(this);\r\n    this.customRpcService = new CustomRpcService(this);\r\n  }\r\n}\r\n\r\nexport const rootContext = React.createContext({\r\n  context: new RootContext(),\r\n});\r\n\r\nexport const useContext = () => React.useContext(rootContext);\r\n","import { useWeb3React } from '@web3-react/core';\r\nimport styled from 'styled-components';\r\nimport { web3ContextNames } from 'provider/connectors';\r\nimport { useEagerConnect, useInactiveListener } from 'provider/providerHooks';\r\nimport { useContext } from '../../contexts';\r\nimport { useInterval } from 'utils';\r\n\r\nconst BLOKCHAIN_FETCH_INTERVAL = 10000;\r\n\r\nconst Web3ReactManager = ({ children }) => {\r\n  const {\r\n    context: { providerStore, blockchainStore, userStore },\r\n  } = useContext();\r\n\r\n  const web3ContextInjected = useWeb3React(web3ContextNames.injected);\r\n  const { active: networkActive, error: networkError } = web3ContextInjected;\r\n\r\n  if (!providerStore.activeChainId)\r\n    providerStore.setWeb3Context(\r\n      web3ContextNames.injected,\r\n      web3ContextInjected\r\n    );\r\n\r\n  console.debug('[Web3ReactManager] Start of render', {\r\n    injected: web3ContextInjected,\r\n    web3React: providerStore.getActiveWeb3React(),\r\n  });\r\n\r\n  // try to eagerly connect to an injected provider, if it exists and has granted access already\r\n  const triedEager = useEagerConnect();\r\n\r\n  try {\r\n    // @ts-ignore\r\n    ethereum.on('chainChanged', chainId => {\r\n      // Handle the new chain.\r\n      // Correctly handling chain changes can be complicated.\r\n      // We recommend reloading the page unless you have good reason not to.\r\n      // providerStore.setWeb3Context(web3ContextNames.injected, web3ContextInjected);\r\n      // blockchainStore.fetchData(providerStore.getActiveWeb3React(), true);\r\n      window.location.reload();\r\n    });\r\n\r\n    // @ts-ignore\r\n    ethereum.on('accountsChanged', accounts => {\r\n      // Handle the new accounts, or lack thereof.\r\n      // \"accounts\" will always be an array, but it can be empty.\r\n      // blockchainStore.fetchData(web3React, false);\r\n      if (networkActive) userStore.update(providerStore.getActiveWeb3React());\r\n    });\r\n  } catch (error) {\r\n    console.debug(\r\n      '[Web3ReactManager] Render: Ethereum Provider not available.'\r\n    );\r\n  }\r\n\r\n  // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\r\n  useInactiveListener(!triedEager);\r\n\r\n  // Fetch user blockchain data on an interval using current params\r\n  useInterval(\r\n    async () => {\r\n      if (networkActive) {\r\n        userStore.update(providerStore.getActiveWeb3React());\r\n        blockchainStore.fetchData(providerStore.getActiveWeb3React(), false);\r\n      }\r\n    },\r\n    networkActive ? BLOKCHAIN_FETCH_INTERVAL : 10\r\n  );\r\n\r\n  const BlurWrapper = styled.div`\r\n    filter: blur(1px);\r\n  `;\r\n\r\n  const OverBlurModal = styled.div`\r\n    position: fixed;\r\n    z-index: 1;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: auto;\r\n    background-color: rgb(0, 0, 0);\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n\r\n    .connectModalContent {\r\n      background-color: #fefefe;\r\n      max-width: 350px;\r\n      text-align: center;\r\n      margin: 15% auto;\r\n      padding: 20px;\r\n      border-radius: 4px;\r\n    }\r\n  `;\r\n\r\n  // on page load, do nothing until we've tried to connect to the injected connector\r\n  if (!triedEager) {\r\n    console.debug('[Web3ReactManager] Render: Eager load not tried');\r\n    return null;\r\n  }\r\n\r\n  if (networkError) {\r\n    console.debug(\r\n      '[Web3ReactManager] Render: Network error, showing modal error.'\r\n    );\r\n    return (\r\n      <div>\r\n        <OverBlurModal>\r\n          <div className=\"connectModalContent\">Ups, something broke :(</div>\r\n        </OverBlurModal>\r\n        <BlurWrapper>{children}</BlurWrapper>\r\n      </div>\r\n    );\r\n    // If network is not active show blur content\r\n  } else if (!networkActive) {\r\n    console.debug('[Web3ReactManager] Render: No active network');\r\n    return children;\r\n  } else {\r\n    console.debug(\r\n      '[Web3ReactManager] Render: Active network, render children',\r\n      { networkActive }\r\n    );\r\n    return children;\r\n  }\r\n};\r\n\r\nexport default Web3ReactManager;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker === null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { useEffect } from 'react';\r\nimport {\r\n  createGlobalStyle,\r\n  css,\r\n  ThemeProvider as StyledComponentsThemeProvider,\r\n} from 'styled-components';\r\nimport { useContext } from '../contexts';\r\n\r\nexport const SUPPORTED_THEMES = {\r\n  DARK: 'DARK',\r\n  LIGHT: 'LIGHT',\r\n};\r\n\r\nconst MEDIA_WIDTHS = {\r\n  upToSmall: 600,\r\n  upToMedium: 960,\r\n  upToLarge: 1280,\r\n};\r\n\r\nconst mediaWidthTemplates = Object.keys(MEDIA_WIDTHS).reduce(\r\n  (accumulator, size) => {\r\n    accumulator[size] = (...args) => css`\r\n      @media (max-width: ${MEDIA_WIDTHS[size]}px) {\r\n        ${css(...args)}\r\n      }\r\n    `;\r\n    return accumulator;\r\n  },\r\n  {}\r\n);\r\n\r\nconst white = '#FFFFFF';\r\nconst black = '#000000';\r\n\r\nexport default function ThemeProvider({ children }) {\r\n  const {\r\n    context: { configStore },\r\n  } = useContext();\r\n\r\n  const darkMode = configStore.darkMode;\r\n\r\n  useEffect(() => {\r\n    configStore.setDarkMode(darkMode);\r\n  }, [configStore, darkMode]);\r\n  return (\r\n    <StyledComponentsThemeProvider theme={theme(darkMode)}>\r\n      {children}\r\n    </StyledComponentsThemeProvider>\r\n  );\r\n}\r\n\r\nconst theme = darkMode => ({\r\n  white,\r\n  black,\r\n  textColor: darkMode ? white : '#010101',\r\n  greyText: darkMode ? white : '#6C7284',\r\n\r\n  // for setting css on <html>\r\n  backgroundColor: darkMode ? '#333639' : white,\r\n\r\n  activeButtonBackground: '#536DFE',\r\n\r\n  modalBackground: darkMode ? 'rgba(0,0,0,0.6)' : 'rgba(0,0,0,0.5)',\r\n  inputBackground: darkMode ? '#202124' : white,\r\n  placeholderGray: darkMode ? '#5F5F5F' : '#E1E1E1',\r\n  shadowColor: darkMode ? '#000' : '#2F80ED',\r\n\r\n  borderStyle:\r\n    'rgba(14, 0, 135, 0.1) 0px 2px 10px, rgba(14, 0, 135, 0.05) 0px 12px 32px',\r\n\r\n  // grays\r\n  concreteGray: darkMode ? '#292C2F' : '#FAFAFA',\r\n  mercuryGray: darkMode ? '#333333' : '#E1E1E1',\r\n  silverGray: darkMode ? '#737373' : '#C4C4C4',\r\n  chaliceGray: darkMode ? '#7B7B7B' : '#AEAEAE',\r\n  doveGray: darkMode ? '#C4C4C4' : '#737373',\r\n  mineshaftGray: darkMode ? '#E1E1E1' : '#2B2B2B',\r\n  activeGray: darkMode ? '#292C2F' : '#F7F8FA',\r\n  buttonOutlineGrey: darkMode ? '#FAFAFA' : '#F2F2F2',\r\n  tokenRowHover: darkMode ? '#404040' : '#F2F2F2',\r\n\r\n  //blacks\r\n  charcoalBlack: darkMode ? '#F2F2F2' : '#404040',\r\n  // blues\r\n  zumthorBlue: darkMode ? '#212529' : '#EBF4FF',\r\n  // TODO refactor; malibuBlue changed as quick hack to a different color JK 013120\r\n  malibuBlue: darkMode ? '#E67AEF' : '#4C5480',\r\n  // TODO refactor; royalBlue changed as quick hack to a different color JK 013120\r\n  royalBlue: darkMode ? '#DC6BE5' : '#fafafa',\r\n  loadingBlue: darkMode ? '#e4f0ff' : '#e4f0ff',\r\n\r\n  // purples\r\n  wisteriaPurple: '#DC6BE5',\r\n  // reds\r\n  salmonRed: '#FF6871',\r\n  // orange\r\n  pizazzOrange: '#FF8F05',\r\n  // yellows\r\n  warningYellow: '#FFE270',\r\n  // body text color\r\n  bodyText: '#90a4ae',\r\n  //green\r\n  connectedGreen: '#27AE60',\r\n\r\n  //branded\r\n  metaMaskOrange: '#E8831D',\r\n\r\n  //specific\r\n  textHover: darkMode ? '#90a4ae' : '#C4C4C4',\r\n\r\n  // connect button when loggedout\r\n  buttonFaded: darkMode ? '#DC6BE5' : '#737373',\r\n\r\n  // media queries\r\n  mediaWidth: mediaWidthTemplates,\r\n  // css snippets\r\n  flexColumnNoWrap: css`\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n  `,\r\n  flexRowNoWrap: css`\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n  `,\r\n  flexRowWrap: css`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n  `,\r\n});\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    font-size: 16px;\r\n    font-variant: none;\r\n    color: ${({ theme }) => theme.textColor};\r\n    background-color: ${({ theme }) => theme.backgroundColor};\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n  }\r\n`;\r\n","var _line, _line2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgX(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"feather feather-x\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 18,\n    y1: 6,\n    x2: 6,\n    y2: 18\n  })), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 6,\n    y1: 6,\n    x2: 18,\n    y2: 18\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgX);\nexport default __webpack_public_path__ + \"static/media/x.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst Button = styled.div`\r\n  background-color: ${({ theme }) => theme.activeButtonBackground};\r\n  border-radius: 4px;\r\n  color: white;\r\n  height: 34px;\r\n  letter-spacing: 1px;\r\n  font-weight: 500;\r\n  line-height: 34px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  width: max-content;\r\n  padding: 0px 10px;\r\n  margin: 5px;\r\n`;\r\n\r\nconst ButtonWithRouter = withRouter(({ route, history, children }) => {\r\n  return (\r\n    <Button\r\n      onClick={() => {\r\n        history.push(route);\r\n      }}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n});\r\nconst ActiveButton = ({ children, onClick = undefined, route = undefined }) => {\r\n  if (route) {\r\n    return <ButtonWithRouter route={route}>{children}</ButtonWithRouter>;\r\n  } else {\r\n    return <Button onClick={onClick}>{children}</Button>;\r\n  }\r\n};\r\n\r\nexport default ActiveButton;\r\n","import styled from 'styled-components';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport ActiveButton from '../common/ActiveButton';\r\n\r\nimport { ReactComponent as Close } from '../../assets/images/x.svg';\r\n\r\nexport const Wrapper = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 700;\r\n  width: 40%;\r\n  min-width: 400px;\r\n  outline: 0;\r\n`;\r\nexport const Backdrop = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  background: rgba(0, 6, 41, 0.5);\r\n  z-index: 500;\r\n`;\r\nexport const StyledModal = styled.div`\r\n  z-index: 100;\r\n  background: white;\r\n  position: relative;\r\n  margin: auto;\r\n  border-radius: 10px;\r\n`;\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  padding: 24px;\r\n`;\r\nexport const HeaderText = styled.div`\r\n  color: #000629;\r\n  flex: 1;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst CloseIcon = styled.div`\r\n  position: absolute;\r\n  color: var(--header-text);\r\n  right: 1rem;\r\n  top: 14px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n\r\nconst CloseColor = styled(Close)`\r\n  path {\r\n    stroke: ${({ theme }) => theme.chaliceGray};\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  color: #7b7f93;\r\n  max-height: 30rem;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding: 0 16px 16px 16px;\r\n`;\r\n\r\nexport interface ModalProps {\r\n  isOpen: boolean;\r\n  onDismiss: () => void;\r\n  header: JSX.Element;\r\n  hideHeader?: boolean;\r\n  confirmText?: string;\r\n  cancelText?: string;\r\n  onConfirm?: (any?: any) => void;\r\n  onCancel?: () => void;\r\n  children: JSX.Element;\r\n}\r\n\r\nexport const ModalButton = styled(ActiveButton)`\r\n  margin: 8px;\r\n  flex: 1;\r\n`;\r\n\r\nexport const Modal: React.FC<ModalProps> = ({\r\n  isOpen,\r\n  onDismiss,\r\n  header,\r\n  confirmText = 'Confirm',\r\n  cancelText = 'Cancel',\r\n  onConfirm,\r\n  onCancel,\r\n  hideHeader,\r\n  children,\r\n}) => {\r\n  const modal = (\r\n    <div>\r\n      <Backdrop onClick={onDismiss} />\r\n      <Wrapper>\r\n        <StyledModal>\r\n          {!hideHeader && (\r\n            <Header>\r\n              <HeaderText>{header}</HeaderText>\r\n              <CloseIcon onClick={onDismiss}>\r\n                <CloseColor />\r\n              </CloseIcon>\r\n            </Header>\r\n          )}\r\n          <Content>{children}</Content>\r\n          <Footer>\r\n            {onCancel && (\r\n              <ModalButton\r\n                variant=\"secondary\"\r\n                onClick={() => {\r\n                  onCancel();\r\n                  onDismiss();\r\n                }}\r\n              >\r\n                {cancelText}\r\n              </ModalButton>\r\n            )}\r\n            {onConfirm && (\r\n              <ModalButton onClick={onConfirm}>{confirmText}</ModalButton>\r\n            )}\r\n          </Footer>\r\n        </StyledModal>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n\r\n  return isOpen ? ReactDOM.createPortal(modal, document.body) : null;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Link = styled.a.attrs({\r\n  target: '_blank',\r\n  rel: 'noopener noreferrer',\r\n})`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  color: var(--turquois-text);\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport default Link;\r\n","import styled from 'styled-components';\r\nimport { useCopyClipboard } from '../../utils';\r\n\r\nimport Link from '../../components/common/Link';\r\nimport { FiCopy, FiCheckCircle } from 'react-icons/fi';\r\n\r\nconst CopyIcon = styled(Link)`\r\n  color: ${({ theme }) => theme.silverGray};\r\n  flex-shrink: 0;\r\n  margin-right: 1rem;\r\n  margin-left: 0.5rem;\r\n  text-decoration: none;\r\n  :hover,\r\n  :active,\r\n  :focus {\r\n    text-decoration: none;\r\n    color: ${({ theme }) => theme.doveGray};\r\n  }\r\n`;\r\nconst TransactionStatusText = styled.span`\r\n  margin-left: 0.25rem;\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  align-items: center;\r\n`;\r\n\r\nexport default function CopyHelper({ toCopy }) {\r\n  const [isCopied, setCopied] = useCopyClipboard();\r\n\r\n  return (\r\n    <CopyIcon onClick={() => setCopied(toCopy)}>\r\n      <TransactionStatusText>\r\n        {isCopied ? <FiCheckCircle /> : <FiCopy />}\r\n      </TransactionStatusText>\r\n    </CopyIcon>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport Copy from '../common/Copy';\r\nimport { injected } from 'provider/connectors';\r\nimport { getBlockchainLink } from '../../utils';\r\n\r\nimport Link from '../../components/common/Link';\r\nimport { useContext } from '../../contexts';\r\n\r\nconst OptionButton = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap}\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 4px;\r\n  border: 1px solid var(--active-button-border);\r\n  background-color: var(--blue-text);\r\n  color: #ffffff;\r\n  padding: 8px 24px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    border: 1px solid var(--blue-onHover-border);\r\n    background-color: var(--blue-onHover);\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n      font-size: 12px;\r\n    `};\r\n`;\r\n\r\nconst UpperSection = styled.div`\r\n  position: relative;\r\n  background-color: var(--panel-background);\r\n\r\n  h5 {\r\n    margin: 0;\r\n    margin-bottom: 0.5rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n  }\r\n\r\n  h5:last-child {\r\n    margin-bottom: 0px;\r\n  }\r\n\r\n  h4 {\r\n    margin-top: 0;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nconst InfoCard = styled.div`\r\n  padding: 1rem;\r\n  border: 1px solid ${({ theme }) => theme.placeholderGray};\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst AccountGroupingRow = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-weight: 500;\r\n  color: ${({ theme }) => theme.textColor};\r\n\r\n  div {\r\n    ${({ theme }) => theme.flexRowNoWrap}\r\n    align-items: center;\r\n  }\r\n\r\n  &:first-of-type {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst AccountSection = styled.div`\r\n  background-color: var(--panel-background);\r\n  padding: 0rem 1.5rem;\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 0rem 1rem 1rem 1rem;`};\r\n`;\r\n\r\nconst YourAccount = styled.div`\r\n  h5 {\r\n    margin: 0 0 1rem 0;\r\n    font-weight: 400;\r\n  }\r\n\r\n  h4 {\r\n    margin: 0;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nconst GreenCircle = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  &:first-child {\r\n    height: 8px;\r\n    width: 8px;\r\n    margin-left: 12px;\r\n    margin-right: 2px;\r\n    background-color: ${({ theme }) => theme.connectedGreen};\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nconst CircleWrapper = styled.div`\r\n  color: ${({ theme }) => theme.connectedGreen};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst AccountControl = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  align-items: center;\r\n  min-width: 0;\r\n\r\n  font-weight: 500;\r\n  font-size: 1rem;\r\n\r\n  a:hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  a {\r\n    min-width: 0;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n`;\r\n\r\nconst ConnectButtonRow = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 30px;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  color: var(--turquois-text);\r\n`;\r\n\r\nconst WalletAction = styled.div`\r\n  color: ${({ theme }) => theme.chaliceGray};\r\n  margin-left: 16px;\r\n  font-weight: 400;\r\n  :hover {\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  openOptions: any;\r\n}\r\n\r\nexport default function AccountDetails(props: Props) {\r\n  const { openOptions } = props;\r\n  const {\r\n    context: { providerStore, configStore },\r\n  } = useContext();\r\n  const { account, connector } = providerStore.getActiveWeb3React();\r\n\r\n  const networkName = configStore.getActiveChainName();\r\n\r\n  return (\r\n    <UpperSection>\r\n      <AccountSection>\r\n        <YourAccount>\r\n          <InfoCard>\r\n            <AccountGroupingRow>\r\n              <div>\r\n                {connector !== injected && (\r\n                  <WalletAction\r\n                    onClick={() => {\r\n                      //@ts-ignore\r\n                      connector.close();\r\n                    }}\r\n                  >\r\n                    Disconnect\r\n                  </WalletAction>\r\n                )}\r\n                <CircleWrapper>\r\n                  {' '}\r\n                  <GreenCircle />{' '}\r\n                </CircleWrapper>\r\n              </div>\r\n            </AccountGroupingRow>\r\n            <AccountGroupingRow>\r\n              <AccountControl>\r\n                <StyledLink\r\n                  href={getBlockchainLink(account, networkName, 'address')}\r\n                >\r\n                  {account} ↗\r\n                </StyledLink>\r\n                <Copy toCopy={account} />\r\n              </AccountControl>\r\n            </AccountGroupingRow>\r\n          </InfoCard>\r\n        </YourAccount>\r\n\r\n        <ConnectButtonRow>\r\n          <OptionButton\r\n            onClick={() => {\r\n              openOptions();\r\n            }}\r\n          >\r\n            Connect to a different wallet\r\n          </OptionButton>\r\n        </ConnectButtonRow>\r\n      </AccountSection>\r\n    </UpperSection>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { transparentize } from 'polished';\r\nimport Link from '../../components/common/Link';\r\n\r\nconst InfoCard = styled.button`\r\n  background-color: ${({ theme, active }) =>\r\n    active ? theme.activeGray : theme.backgroundColor};\r\n  padding: 1rem;\r\n  outline: none;\r\n  border: 1px solid;\r\n  border-radius: 12px;\r\n  width: 100% !important;\r\n  : 0 4px 8px 0 ${({ theme, clickable }) =>\r\n    clickable ? transparentize(0.95, theme.shadowColor) : 'none'};\r\n  &:focus {\r\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.royalBlue};\r\n  }\r\n  border-color: ${({ theme, active }) =>\r\n    active ? 'transparent' : theme.placeholderGray};\r\n`;\r\n\r\nconst OptionCard = styled(InfoCard)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-top: 2rem;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst OptionCardLeft = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap};\r\n  justify-content: center;\r\n  height: 100%;\r\n`;\r\n\r\nconst OptionCardClickable = styled(OptionCard)`\r\n  margin-top: 0;\r\n  &:hover {\r\n    cursor: ${({ clickable }) => (clickable ? 'pointer' : '')};\r\n    border: ${({ clickable, theme }) =>\r\n      clickable ? `1px solid ${theme.malibuBlue}` : ``};\r\n  }\r\n  opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\r\n`;\r\n\r\nconst GreenCircle = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  &:first-child {\r\n    height: 8px;\r\n    width: 8px;\r\n    margin-right: 8px;\r\n    background-color: ${({ theme }) => theme.connectedGreen};\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nconst CircleWrapper = styled.div`\r\n  color: ${({ theme }) => theme.connectedGreen};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst HeaderText = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  color: ${props =>\r\n    props.color === 'blue'\r\n      ? ({ theme }) => theme.royalBlue\r\n      : ({ theme }) => theme.textColor};\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst SubHeader = styled.div`\r\n  color: ${({ theme }) => theme.textColor};\r\n  margin-top: 10px;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap};\r\n  align-items: center;\r\n  justify-content: center;\r\n  & > img,\r\n  span {\r\n    height: ${({ size }) => (size ? size + 'px' : '24px')};\r\n    width: ${({ size }) => (size ? size + 'px' : '24px')};\r\n  }\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    align-items: flex-end;\r\n  `};\r\n`;\r\n\r\nexport default function Option({\r\n  link = null,\r\n  clickable = true,\r\n  size = null,\r\n  onClick = null,\r\n  color,\r\n  icon,\r\n  header,\r\n  subheader = null,\r\n  active = false,\r\n}) {\r\n  const content = (\r\n    <OptionCardClickable\r\n      onClick={onClick}\r\n      clickable={clickable && !active}\r\n      active={active}\r\n    >\r\n      <OptionCardLeft>\r\n        <HeaderText color={color}>\r\n          {' '}\r\n          {active ? (\r\n            <CircleWrapper>\r\n              <GreenCircle>\r\n                <div />\r\n              </GreenCircle>\r\n            </CircleWrapper>\r\n          ) : (\r\n            ''\r\n          )}\r\n          {header}\r\n        </HeaderText>\r\n        {subheader && <SubHeader>{subheader}</SubHeader>}\r\n      </OptionCardLeft>\r\n      <IconWrapper size={size} active={active}>\r\n        {icon && <img src={icon} alt={'Icon'} />}\r\n      </IconWrapper>\r\n    </OptionCardClickable>\r\n  );\r\n  if (link) {\r\n    return <Link href={link}>{content}</Link>;\r\n  }\r\n\r\n  return content;\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport { Modal } from '../Modal';\r\nimport AccountDetails from '../AccountDetails';\r\nimport Option from './Option';\r\nimport { DEFAULT_RPC_URLS, usePrevious } from 'utils';\r\nimport Link from '../../components/common/Link';\r\nimport { injected, getWallets } from 'provider/connectors';\r\nimport { useContext } from '../../contexts';\r\nimport { isChainIdSupported } from '../../provider/connectors';\r\nimport { useActiveWeb3React } from 'provider/providerHooks';\r\n\r\nconst Wrapper = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap}\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.backgroundColor};\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst HeaderRow = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  padding: 1.5rem 1.5rem;\r\n  font-weight: 500;\r\n  color: var(--header-text);\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    padding: 1rem;\r\n  `};\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  background-color: var(--panel-background);\r\n  color: var(--body-text);\r\n  padding: 2rem;\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 1rem`};\r\n`;\r\n\r\nconst UpperSection = styled.div`\r\n  position: relative;\r\n  background-color: var(--panel-background);\r\n\r\n  h5 {\r\n    margin: 0;\r\n    margin-bottom: 0.5rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n  }\r\n\r\n  h5:last-child {\r\n    margin-bottom: 0px;\r\n  }\r\n\r\n  h4 {\r\n    margin-top: 0;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nconst Blurb = styled.div`\r\n  ${({ theme }) => theme.flexRowWrap}\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 2rem;\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    margin: 1rem;\r\n    font-size: 12px;\r\n  `};\r\n`;\r\n\r\nconst OptionGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 10px;\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 10px;\r\n  `};\r\n`;\r\n\r\nconst HoverText = styled.div`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst WALLET_VIEWS = {\r\n  OPTIONS: 'options',\r\n  OPTIONS_SECONDARY: 'options_secondary',\r\n  ACCOUNT: 'account',\r\n  PENDING: 'pending',\r\n};\r\n\r\nconst WalletModal = observer(() => {\r\n  const {\r\n    context: {\r\n      modalStore,\r\n      infuraService,\r\n      alchemyService,\r\n      customRpcService,\r\n      configStore,\r\n    },\r\n  } = useContext();\r\n  const { active, connector, error, activate, account, chainId } =\r\n    useActiveWeb3React();\r\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\r\n  const [connectionErrorMessage, setConnectionErrorMessage] = useState(false);\r\n\r\n  const walletModalOpen = modalStore.walletModalVisible;\r\n\r\n  const toggleWalletModal = () => {\r\n    modalStore.toggleWalletModal();\r\n  };\r\n\r\n  // always reset to account view\r\n  useEffect(() => {\r\n    if (walletModalOpen) {\r\n      setConnectionErrorMessage(false);\r\n      setWalletView(WALLET_VIEWS.ACCOUNT);\r\n    }\r\n  }, [walletModalOpen]);\r\n\r\n  // close modal when a connection is successful\r\n  const activePrevious = usePrevious(active);\r\n  const connectorPrevious = usePrevious(connector);\r\n  useEffect(() => {\r\n    if (\r\n      walletModalOpen &&\r\n      ((active && !activePrevious) ||\r\n        (connector && connector !== connectorPrevious && !error))\r\n    ) {\r\n      setWalletView(WALLET_VIEWS.ACCOUNT);\r\n    }\r\n  }, [\r\n    setWalletView,\r\n    active,\r\n    error,\r\n    connector,\r\n    walletModalOpen,\r\n    activePrevious,\r\n    connectorPrevious,\r\n  ]);\r\n\r\n  const tryActivation = async connector => {\r\n    setWalletView(WALLET_VIEWS.PENDING);\r\n    activate(connector, undefined, true).catch(e => {\r\n      setConnectionErrorMessage(e);\r\n      console.debug('[Activation Error]', e);\r\n    });\r\n  };\r\n\r\n  // get wallets user can switch too, depending on device/browser\r\n  function getOptions() {\r\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask;\r\n    const rpcUrls = getRpcUrls();\r\n    const wallets = getWallets(rpcUrls);\r\n    return Object.keys(wallets).map(key => {\r\n      const option = wallets[key];\r\n      // check for mobile options\r\n      if (isMobile) {\r\n        if (!window.ethereum && option.mobile) {\r\n          return (\r\n            <Option\r\n              onClick={() => {\r\n                option.connector !== connector &&\r\n                  !option.href &&\r\n                  tryActivation(option.connector);\r\n              }}\r\n              key={key}\r\n              icon={option.icon}\r\n              active={option.connector && option.connector === connector}\r\n              color={option.color}\r\n              link={option.href}\r\n              header={option.name}\r\n              subheader={null}\r\n            />\r\n          );\r\n        }\r\n        return null;\r\n      }\r\n\r\n      // overwrite injected when needed\r\n      if (option.connector === injected) {\r\n        // don't show injected if there's no injected provider\r\n        if (!window.ethereum) {\r\n          if (option.name === 'MetaMask') {\r\n            return (\r\n              <Option\r\n                key={key}\r\n                color={'#E8831D'}\r\n                icon={option.icon}\r\n                header={'Install Metamask'}\r\n                subheader={null}\r\n                link={'https://metamask.io/'}\r\n              />\r\n            );\r\n          } else {\r\n            return null; //dont want to return install twice\r\n          }\r\n        }\r\n        // don't return metamask if injected provider isn't metamask\r\n        else if (option.name === 'MetaMask' && !isMetamask) {\r\n          return null;\r\n        }\r\n        // likewise for generic\r\n        else if (option.name === 'Injected' && isMetamask) {\r\n          return null;\r\n        }\r\n      }\r\n\r\n      // return rest of options\r\n      return (\r\n        !isMobile &&\r\n        !option.mobileOnly && (\r\n          <Option\r\n            onClick={() => {\r\n              option.connector === connector\r\n                ? setWalletView(WALLET_VIEWS.ACCOUNT)\r\n                : !option.href && tryActivation(option.connector);\r\n            }}\r\n            key={key}\r\n            active={option.connector === connector}\r\n            color={option.color}\r\n            icon={option.icon}\r\n            link={option.href}\r\n            header={option.name}\r\n            subheader={null} //use option.descriptio to bring back multi-line\r\n          />\r\n        )\r\n      );\r\n    });\r\n  }\r\n\r\n  function getRpcUrls() {\r\n    const preferredRpc = configStore.getLocalConfig().rpcType;\r\n    if (preferredRpc == 'infura' && infuraService.auth) {\r\n      return infuraService.getRpcUrls();\r\n    } else if (preferredRpc == 'alchemy' && alchemyService.auth) {\r\n      return alchemyService.getRpcUrls();\r\n    } else if (preferredRpc == 'custom' && customRpcService.auth) {\r\n      return customRpcService.getRpcUrls();\r\n    } else {\r\n      return DEFAULT_RPC_URLS;\r\n    }\r\n  }\r\n\r\n  function getModalContent() {\r\n    if (connectionErrorMessage) {\r\n      return (\r\n        <UpperSection>\r\n          <HeaderRow>\r\n            {connectionErrorMessage\r\n              .toString()\r\n              .indexOf('UnsupportedChainIdError') >= 0\r\n              ? 'Wrong Network'\r\n              : 'Error connecting'}\r\n          </HeaderRow>\r\n          <ContentWrapper>\r\n            {connectionErrorMessage\r\n              .toString()\r\n              .indexOf('UnsupportedChainIdError') >= 0 ? (\r\n              <h5> Please connect to a valid ethereum network. </h5>\r\n            ) : (\r\n              'Error connecting. Try refreshing the page.'\r\n            )}\r\n          </ContentWrapper>\r\n        </UpperSection>\r\n      );\r\n    }\r\n    if (\r\n      account &&\r\n      !isChainIdSupported(chainId) &&\r\n      walletView === WALLET_VIEWS.ACCOUNT\r\n    ) {\r\n      return (\r\n        <UpperSection>\r\n          <HeaderRow>{'Wrong Network'}</HeaderRow>\r\n          <ContentWrapper>\r\n            <h5>Please connect to a valid ethereum network.</h5>\r\n          </ContentWrapper>\r\n        </UpperSection>\r\n      );\r\n    }\r\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\r\n      return (\r\n        <AccountDetails\r\n          openOptions={() => setWalletView(WALLET_VIEWS.OPTIONS)}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <UpperSection>\r\n        <ContentWrapper>\r\n          <OptionGrid>{getOptions()}</OptionGrid>\r\n          {walletView !== WALLET_VIEWS.PENDING && (\r\n            <Blurb>\r\n              <span style={{ color: '#90a4ae' }}>New to Ethereum? &nbsp;</span>{' '}\r\n              <Link href=\"https://ethereum.org/use/#3-what-is-a-wallet-and-which-one-should-i-use\">\r\n                Learn more about wallets\r\n              </Link>\r\n            </Blurb>\r\n          )}\r\n        </ContentWrapper>\r\n      </UpperSection>\r\n    );\r\n  }\r\n\r\n  const Header = (\r\n    <div>\r\n      {walletView !== WALLET_VIEWS.ACCOUNT ? (\r\n        <HoverText\r\n          onClick={() => {\r\n            setWalletView(WALLET_VIEWS.ACCOUNT);\r\n          }}\r\n        >\r\n          Back\r\n        </HoverText>\r\n      ) : walletView === WALLET_VIEWS.ACCOUNT ? (\r\n        'Account'\r\n      ) : (\r\n        'Connect to a wallet'\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      header={Header}\r\n      isOpen={walletModalOpen}\r\n      onDismiss={toggleWalletModal}\r\n    >\r\n      <Wrapper>{getModalContent()}</Wrapper>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default WalletModal;\r\n","import styled from 'styled-components';\r\n\r\nexport const Box = styled.div`\r\n  border: 1px solid #e1e3e7;\r\n  padding: 10px 0px;\r\n  background: white;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  box-shadow: ${({ theme }) => theme.borderStyle};\r\n`;\r\n\r\nexport default Box;\r\n","import styled from 'styled-components';\r\nimport { observer } from 'mobx-react';\r\nimport { shortenAddress, toCamelCaseString } from '../../utils';\r\nimport WalletModal from 'components/WalletModal';\r\nimport { isChainIdSupported } from 'provider/connectors';\r\nimport { useContext } from '../../contexts';\r\nimport Box from '../../components/common/Box';\r\n\r\nconst WrongNetworkButton = styled(Box)`\r\n  color: var(--dark-text-gray);\r\n  padding: 5px 10px;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  height: 28px;\r\n  border-radius: 6px;\r\n  background: var(--wrong-network);\r\n  color: var(--white);\r\n  cursor: pointer;\r\n`;\r\n\r\nconst AccountButton = styled(Box)`\r\n  color: var(--dark-text-gray);\r\n  padding: 5px 10px;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  margin-right: 10px;\r\n  height: 28px;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ConnectButton = styled(Box)`\r\n  color: var(--dark-text-gray);\r\n  padding: 5px 10px;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  height: 28px;\r\n  border-radius: 6px;\r\n  background: var(--blue-text);\r\n  color: var(--white);\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Web3ConnectStatus = observer(props => {\r\n  const {\r\n    context: { modalStore, providerStore, configStore },\r\n  } = useContext();\r\n  const { chainId, account, error } = providerStore.getActiveWeb3React();\r\n\r\n  const toggleWalletModal = () => {\r\n    modalStore.toggleWalletModal();\r\n  };\r\n\r\n  function getWeb3Status() {\r\n    console.debug('[GetWeb3Status]', {\r\n      account,\r\n      chainId: chainId,\r\n      error,\r\n    });\r\n    // Wrong network\r\n    if (account && chainId && !isChainIdSupported(chainId)) {\r\n      return (\r\n        <WrongNetworkButton onClick={toggleWalletModal}>\r\n          Wrong Network\r\n        </WrongNetworkButton>\r\n      );\r\n    } else if (account) {\r\n      return (\r\n        <div style={{ display: 'flex' }}>\r\n          <AccountButton onClick={toggleWalletModal}>\r\n            {shortenAddress(account)}\r\n          </AccountButton>\r\n          <AccountButton\r\n            onClick={toggleWalletModal}\r\n            style={{ fontSize: '14px' }}\r\n          >\r\n            {toCamelCaseString(configStore.getActiveChainName())}\r\n          </AccountButton>\r\n        </div>\r\n      );\r\n    } else if (error) {\r\n      return (\r\n        <WrongNetworkButton onClick={toggleWalletModal}>\r\n          Wrong Network\r\n        </WrongNetworkButton>\r\n      );\r\n    } else {\r\n      return (\r\n        <ConnectButton onClick={toggleWalletModal} active={true}>\r\n          {props.text}\r\n        </ConnectButton>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {getWeb3Status()}\r\n      <WalletModal />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Web3ConnectStatus;\r\n","export default __webpack_public_path__ + \"static/media/DXdao.svg\";","import { withRouter } from 'react-router-dom';\r\nimport { observer } from 'mobx-react';\r\nimport styled from 'styled-components';\r\nimport Web3ConnectStatus from '../Web3ConnectStatus';\r\nimport { useContext } from '../../contexts';\r\nimport { FiSettings, FiUser, FiBarChart2 } from 'react-icons/fi';\r\nimport dxdaoIcon from 'assets/images/DXdao.svg';\r\nimport Web3 from 'web3';\r\nimport { bnum } from '../../utils';\r\nimport Box from '../../components/common/Box';\r\n\r\nconst NavWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  padding: 20px 0px 0px 0px;\r\n`;\r\n\r\nconst NavSection = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst MenuItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: var(--nav-text-light);\r\n  font-size: 16px;\r\n  line-height: 19px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ItemBox = styled(Box)`\r\n  color: var(--dark-text-gray);\r\n  padding: 5px 10px;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  margin-right: 10px;\r\n  height: 28px;\r\n  border-radius: 6px;\r\n`;\r\n\r\nconst Header = observer(() => {\r\n  const NavItem = withRouter(({ route, history, children }) => {\r\n    return (\r\n      <div\r\n        style={{ cursor: 'pointer' }}\r\n        onClick={() => {\r\n          history.push(route);\r\n        }}\r\n      >\r\n        {' '}\r\n        {children}{' '}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const {\r\n    context: {\r\n      userStore,\r\n      providerStore,\r\n      blockchainStore,\r\n      configStore,\r\n      daoStore,\r\n    },\r\n  } = useContext();\r\n\r\n  const { active, account } = providerStore.getActiveWeb3React();\r\n\r\n  if (!active) {\r\n    return (\r\n      <NavWrapper>\r\n        <NavSection>\r\n          <NavItem route={`/`}>\r\n            <MenuItem>\r\n              <img alt=\"dxdao\" src={dxdaoIcon} />\r\n            </MenuItem>\r\n          </NavItem>\r\n        </NavSection>\r\n        <NavSection>\r\n          <Web3ConnectStatus text=\"Connect Wallet\" />\r\n          <NavItem route={`/config`}>\r\n            <a>\r\n              <FiSettings style={{ margin: '0px 10px', color: '#616161' }} />\r\n            </a>\r\n          </NavItem>\r\n        </NavSection>\r\n      </NavWrapper>\r\n    );\r\n  } else {\r\n    const networkName = configStore.getActiveChainName();\r\n    const userInfo = userStore.getUserInfo();\r\n    const votingMachines = blockchainStore.initialLoadComplete\r\n      ? configStore.getNetworkContracts().votingMachines\r\n      : {};\r\n\r\n    const dxdBalance =\r\n      active && userInfo.dxdBalance\r\n        ? parseFloat(\r\n            Number(Web3.utils.fromWei(userInfo.dxdBalance.toString())).toFixed(\r\n              2\r\n            )\r\n          )\r\n        : 0;\r\n    const genBalance =\r\n      active && userInfo.genBalance\r\n        ? parseFloat(\r\n            Number(Web3.utils.fromWei(userInfo.genBalance.toString())).toFixed(\r\n              2\r\n            )\r\n          )\r\n        : 0;\r\n    const { userRep, totalSupply } =\r\n      active && blockchainStore.initialLoadComplete\r\n        ? daoStore.getRepAt(account, providerStore.getCurrentBlockNumber())\r\n        : { userRep: bnum(0), totalSupply: bnum(0) };\r\n    const repPercentage = active\r\n      ? userRep.times(100).div(totalSupply).toFixed(4)\r\n      : bnum(0);\r\n\r\n    return (\r\n      <NavWrapper>\r\n        <NavSection>\r\n          <NavItem route={`/${networkName}/proposals`}>\r\n            <MenuItem>\r\n              <img alt=\"dxdao\" src={dxdaoIcon} />\r\n            </MenuItem>\r\n          </NavItem>\r\n        </NavSection>\r\n        {blockchainStore.initialLoadComplete ? (\r\n          <NavSection>\r\n            {votingMachines.dxd ? (\r\n              <ItemBox> {dxdBalance} DXD </ItemBox>\r\n            ) : (\r\n              <div />\r\n            )}\r\n            {votingMachines.gen ? (\r\n              <ItemBox> {genBalance} GEN </ItemBox>\r\n            ) : (\r\n              <div />\r\n            )}\r\n            <ItemBox> {repPercentage.toString()} % REP </ItemBox>\r\n            <Web3ConnectStatus text=\"Connect Wallet\" />\r\n            <NavItem route={`/${networkName}/info`}>\r\n              <a>\r\n                <FiBarChart2 style={{ margin: '0px 10px', color: '#616161' }} />\r\n              </a>\r\n            </NavItem>\r\n            <NavItem route={`/config`}>\r\n              <a>\r\n                <FiSettings style={{ margin: '0px 10px', color: '#616161' }} />\r\n              </a>\r\n            </NavItem>\r\n            <NavItem route={`/${networkName}/user/${account}`}>\r\n              <a>\r\n                <FiUser style={{ margin: '0px 10px', color: '#616161' }} />\r\n              </a>\r\n            </NavItem>\r\n          </NavSection>\r\n        ) : (\r\n          <NavSection>\r\n            <Web3ConnectStatus text=\"Connect Wallet\" />\r\n            <NavItem route={`/config`}>\r\n              <a>\r\n                <FiSettings style={{ margin: '0px 10px', color: '#616161' }} />\r\n              </a>\r\n            </NavItem>\r\n          </NavSection>\r\n        )}\r\n      </NavWrapper>\r\n    );\r\n  }\r\n});\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst FooterWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  padding: 24px 0px 32px;\r\n  color: var(--footer-text-gray);\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst LeftFooter = styled.div`\r\n  margin-top: auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst FooterItem = styled.div`\r\n  a {\r\n    text-decoration: none;\r\n    color: var(--footer-text-gray);\r\n    cursor: pointer;\r\n  }\r\n  a:hover {\r\n    color: var(--text-gray-onHover);\r\n  }a\r\n    \r\n`;\r\n\r\nconst FooterDivider = styled.div`\r\n  background: var(--footer-text-gray);\r\n  width: 4px;\r\n  height: 4px;\r\n  border-radius: 2px;\r\n  line-height: 24px;\r\n  margin: 7px;\r\n`;\r\n\r\nconst Footer = () => {\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <FooterWrapper>\r\n      <LeftFooter>\r\n        <FooterItem>\r\n          <a href=\"https://dxdao.eth.link/#/\" target=\"_blank\">\r\n            {' '}\r\n            Website{' '}\r\n          </a>\r\n        </FooterItem>\r\n        <FooterDivider></FooterDivider>\r\n        <FooterItem>\r\n          <a\r\n            onClick={() => {\r\n              history.push('/forum');\r\n            }}\r\n            target=\"_self\"\r\n          >\r\n            {' '}\r\n            Forum{' '}\r\n          </a>\r\n        </FooterItem>\r\n        <FooterDivider></FooterDivider>\r\n        <FooterItem>\r\n          <a href=\"https://github.com/AugustoL/dxvote\" target=\"_blank\">\r\n            {' '}\r\n            Source Code{' '}\r\n          </a>\r\n        </FooterItem>\r\n        <FooterDivider></FooterDivider>\r\n        <FooterItem>\r\n          <a\r\n            onClick={() => {\r\n              history.push('/faq');\r\n            }}\r\n          >\r\n            {' '}\r\n            FAQ{' '}\r\n          </a>\r\n        </FooterItem>\r\n        <FooterDivider></FooterDivider>\r\n        <FooterItem>\r\n          <a\r\n            href=\"https://github.com/AugustoL/dxvote/issues/new/choose\"\r\n            target=\"_blank\"\r\n          >\r\n            {' '}\r\n            Submit Issue{' '}\r\n          </a>\r\n        </FooterItem>\r\n      </LeftFooter>\r\n    </FooterWrapper>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import styled from 'styled-components';\r\nimport { observer } from 'mobx-react';\r\nimport { useContext } from './contexts';\r\nimport { FiZapOff, FiZap } from 'react-icons/fi';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport Box from './components/common/Box';\r\n\r\nconst PageRouterWrapper = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst LoadingBox = styled(Box)`\r\n  .loader {\r\n    text-align: center;\r\n    font-weight: 500;\r\n    font-size: 20px;\r\n    line-height: 18px;\r\n    color: var(--dark-text-gray);\r\n    padding: 25px 0px;\r\n\r\n    .svg {\r\n      height: 30px;\r\n      width: 30px;\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PageRouter = observer(({ children }) => {\r\n  const {\r\n    context: {\r\n      providerStore,\r\n      blockchainStore,\r\n      configStore,\r\n      ipfsService,\r\n      etherscanService,\r\n      pinataService,\r\n      coingeckoService,\r\n      infuraService,\r\n      alchemyService,\r\n      customRpcService,\r\n    },\r\n  } = useContext();\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const noLoading = ['/faq', '/config', '/forum'];\r\n\r\n  // Start or auth services\r\n  ipfsService.start();\r\n  etherscanService.isAuthenticated();\r\n  pinataService.isAuthenticated();\r\n  alchemyService.isAuthenticated();\r\n  infuraService.isAuthenticated();\r\n  customRpcService.isAuthenticated();\r\n\r\n  const { active: providerActive } = providerStore.getActiveWeb3React();\r\n\r\n  if (noLoading.indexOf(location.pathname) > -1) {\r\n    return <PageRouterWrapper> {children} </PageRouterWrapper>;\r\n  } else if (!providerActive)\r\n    return (\r\n      <PageRouterWrapper>\r\n        <LoadingBox>\r\n          <div className=\"loader\">\r\n            {' '}\r\n            <FiZapOff /> <br /> Connect to your wallet{' '}\r\n          </div>\r\n        </LoadingBox>\r\n      </PageRouterWrapper>\r\n    );\r\n  else {\r\n    const networkName = configStore.getActiveChainName();\r\n    if (location.pathname === '/') {\r\n      history.push(`/${networkName}/proposals`);\r\n    }\r\n\r\n    if (\r\n      location.pathname.split('/')[1] &&\r\n      location.pathname.split('/')[1] !== networkName\r\n    ) {\r\n      history.push(`/${networkName}/proposals`);\r\n    }\r\n\r\n    if (!blockchainStore.initialLoadComplete) {\r\n      return (\r\n        <PageRouterWrapper>\r\n          <LoadingBox>\r\n            <div className=\"loader\">\r\n              {' '}\r\n              <FiZap /> <br /> Loading..{' '}\r\n            </div>\r\n          </LoadingBox>\r\n        </PageRouterWrapper>\r\n      );\r\n    } else {\r\n      coingeckoService.loadPrices();\r\n      if (configStore.getLocalConfig().pinOnStart)\r\n        pinataService.updatePinList();\r\n      return <PageRouterWrapper> {children} </PageRouterWrapper>;\r\n    }\r\n  }\r\n});\r\n\r\nexport default PageRouter;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { observer } from 'mobx-react';\r\nimport { useContext } from '../contexts';\r\nimport ActiveButton from '../components/common/ActiveButton';\r\nimport Box from '../components/common/Box';\r\nimport {\r\n  ZERO_ADDRESS,\r\n  formatPercentage,\r\n  normalizeBalance,\r\n  timeToTimestamp,\r\n  formatNumberValue,\r\n} from '../utils';\r\nimport { FiFeather, FiCheckCircle, FiCheckSquare } from 'react-icons/fi';\r\n\r\nconst ProposalsTableWrapper = styled(Box)`\r\n  width: 100%;\r\n`;\r\n\r\nconst ProposalsFilter = styled.select`\r\n  background-color: ${props => props.color || '#536DFE'};\r\n  border-radius: 4px;\r\n  color: white;\r\n  height: 34px;\r\n  letter-spacing: 1px;\r\n  font-weight: 500;\r\n  line-height: 34px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  width: max-content;\r\n  padding: 0px 10px;\r\n  margin: 5px;\r\n  font-family: var(--roboto);\r\n  border: 0px;\r\n`;\r\n\r\nconst ProposalsNameFilter = styled.input`\r\n  background-color: white;\r\n  border: 1px solid #536dfe;\r\n  border-radius: 4px;\r\n  color: #536dfe;\r\n  height: 34px;\r\n  letter-spacing: 1px;\r\n  font-weight: 500;\r\n  line-height: 32px;\r\n  text-align: left;\r\n  cursor: pointer;\r\n  width: max-content;\r\n  padding: 0px 10px;\r\n  margin: 5px;\r\n  font-family: var(--roboto);\r\n`;\r\n\r\nconst ProposalTableHeaderActions = styled.div`\r\n  padding: 0px 10px 10px 10px;\r\n  color: var(--dark-text-gray);\r\n  border-bottom: 1px solid var(--line-gray);\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  letter-spacing: 1px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n\r\n  span {\r\n    font-size: 20px;\r\n    padding: 10px 5px 5px 5px;\r\n  }\r\n`;\r\n\r\nconst ProposalTableHeaderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  color: var(--light-text-gray);\r\n  padding: 20px 24px 8px 24px;\r\n  font-size: 14px;\r\n  text-align: center;\r\n`;\r\n\r\nconst TableHeader = styled.div`\r\n  width: ${props => props.width || '25%'};\r\n  text-align: ${props => props.align};\r\n`;\r\n\r\nconst TableRowsWrapper = styled.div`\r\n  overflow-y: scroll;\r\n  height: 60vh;\r\n  min-height: 350px;\r\n\r\n  h3 {\r\n    text-align: center;\r\n    margin-top: 30px;\r\n    color: var(--dark-text-gray);\r\n  }\r\n`;\r\n\r\nconst TableRow = styled.div`\r\n  font-size: 16px;\r\n  line-height: 18px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid var(--line-gray);\r\n  padding: 16px 24px;\r\n  color: var(--dark-text-gray);\r\n  text-align: right;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TableCell = styled.div`\r\n  display: flex;\r\n  color: ${props => props.color};\r\n  width: ${props => props.width || '25%'};\r\n  justify-content: ${props => props.align};\r\n  font-weight: ${props => props.weight};\r\n  white-space: ${props => (props.wrapText ? 'nowrap' : 'inherit')};\r\n  overflow: ${props => (props.wrapText ? 'hidden' : 'inherit')};\r\n  text-overflow: ${props => (props.wrapText ? 'ellipsis' : 'inherit')};\r\n`;\r\n\r\nconst ProposalsPage = observer(() => {\r\n  const {\r\n    context: { daoStore, configStore, providerStore },\r\n  } = useContext();\r\n\r\n  const schemes = daoStore.getAllSchemes();\r\n  const votingMachines = configStore.getNetworkContracts().votingMachines;\r\n  const [stateFilter, setStateFilter] = React.useState('Any Status');\r\n  const [schemeFilter, setSchemeFilter] = React.useState('All Schemes');\r\n  const [titleFilter, setTitleFilter] = React.useState('');\r\n  const [proposals, setProposals] = React.useState([]);\r\n  const networkName = configStore.getActiveChainName();\r\n  const { account } = providerStore.getActiveWeb3React();\r\n  const userEvents = daoStore.getUserEvents(account);\r\n\r\n  const allProposals = daoStore.getAllProposals().map(cacheProposal => {\r\n    return Object.assign(\r\n      cacheProposal,\r\n      daoStore.getProposalStatus(cacheProposal.id)\r\n    );\r\n  });\r\n\r\n  // First show the proposals that still have an active status in teh boting machine and order them from lower\r\n  // to higher based on the finish time.\r\n  // Then show the proposals who finished based on the statte in the voting machine and order them from higher to\r\n  // lower in the finish time.\r\n  // This way we show the proposals that will finish soon first and the latest proposals that finished later\r\n\r\n  const sortedProposals = allProposals\r\n    .filter(proposal => proposal.stateInVotingMachine > 4)\r\n    .sort(function (a, b) {\r\n      return a.finishTime - b.finishTime;\r\n    })\r\n    .concat(\r\n      allProposals\r\n        .filter(proposal => proposal.stateInVotingMachine < 5)\r\n        .sort(function (a, b) {\r\n          return b.finishTime - a.finishTime;\r\n        })\r\n    );\r\n\r\n  if (sortedProposals.length > proposals.length) setProposals(sortedProposals);\r\n\r\n  function onStateFilterChange(newValue) {\r\n    setStateFilter(newValue.target.value);\r\n  }\r\n  function onTitleFilterChange(newValue) {\r\n    setTitleFilter(newValue.target.value);\r\n  }\r\n  function onSchemeFilterChange(newValue) {\r\n    setSchemeFilter(newValue.target.value);\r\n  }\r\n\r\n  console.debug('All Proposals', allProposals, allProposals.length, daoStore);\r\n\r\n  return (\r\n    <ProposalsTableWrapper>\r\n      <ProposalTableHeaderActions>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <ProposalsNameFilter\r\n            type=\"text\"\r\n            placeholder=\"Search by proposal title\"\r\n            name=\"titleFilter\"\r\n            id=\"titleFilter\"\r\n            onChange={onTitleFilterChange}\r\n          ></ProposalsNameFilter>\r\n          <ProposalsFilter\r\n            name=\"stateFilter\"\r\n            id=\"stateSelector\"\r\n            onChange={onStateFilterChange}\r\n          >\r\n            <option value=\"Any Status\">Any Status</option>\r\n            <option value=\"Pending Boost\">Pending Boost</option>\r\n            <option value=\"Pre Boosted\">Pre Boosted</option>\r\n            <option value=\"Boosted\">Boosted</option>\r\n            <option value=\"In Queue\">Queue</option>\r\n            <option value=\"Quiet Ending Period\">Quiet Ending Period</option>\r\n            <option value=\"Passed\">Passed</option>\r\n            <option value=\"Pending Execution\">Pending Execution</option>\r\n            <option value=\"Rejected\">Rejected</option>\r\n            <option value=\"Executed\">Executed</option>\r\n            <option value=\"Expired in Queue\">Expired</option>\r\n          </ProposalsFilter>\r\n          <ProposalsFilter\r\n            name=\"schemeFilter\"\r\n            id=\"schemeSelector\"\r\n            onChange={onSchemeFilterChange}\r\n          >\r\n            <option value=\"All Schemes\">All Schemes</option>\r\n            {schemes.map(scheme => {\r\n              return (\r\n                <option key={scheme.address} value={scheme.address}>\r\n                  {scheme.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </ProposalsFilter>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <ActiveButton route={`/${networkName}/new`}>\r\n            + New Proposal\r\n          </ActiveButton>\r\n        </div>\r\n      </ProposalTableHeaderActions>\r\n      <ProposalTableHeaderWrapper>\r\n        <TableHeader width=\"35%\" align=\"left\">\r\n          {' '}\r\n          Title{' '}\r\n        </TableHeader>\r\n        <TableHeader width=\"15%\" align=\"center\">\r\n          {' '}\r\n          Scheme{' '}\r\n        </TableHeader>\r\n        <TableHeader width=\"15%\" align=\"center\">\r\n          {' '}\r\n          Status{' '}\r\n        </TableHeader>\r\n        <TableHeader width=\"17.5%\" align=\"center\">\r\n          {' '}\r\n          Stakes{' '}\r\n        </TableHeader>\r\n        <TableHeader width=\"17.5%\" align=\"center\">\r\n          {' '}\r\n          Votes{' '}\r\n        </TableHeader>\r\n      </ProposalTableHeaderWrapper>\r\n      {proposals.length === 0 ? (\r\n        <TableRowsWrapper>\r\n          <h3>No Proposals Found</h3>\r\n        </TableRowsWrapper>\r\n      ) : (\r\n        <TableRowsWrapper>\r\n          {proposals.map((proposal, i) => {\r\n            if (\r\n              proposal &&\r\n              (stateFilter === 'Any Status' ||\r\n                (stateFilter !== 'Any Status' &&\r\n                  proposal.status === stateFilter)) &&\r\n              (titleFilter.length === 0 ||\r\n                (titleFilter.length > 0 &&\r\n                  proposal.title.indexOf(titleFilter) >= 0)) &&\r\n              (schemeFilter === 'All Schemes' ||\r\n                proposal.scheme === schemeFilter)\r\n            ) {\r\n              const minimumDaoBounty = daoStore.getVotingParametersOfProposal(\r\n                proposal.id\r\n              ).minimumDaoBounty;\r\n              const positiveStake = formatNumberValue(\r\n                normalizeBalance(proposal.positiveStakes, 18),\r\n                1\r\n              );\r\n              const negativeStake = formatNumberValue(\r\n                normalizeBalance(\r\n                  proposal.negativeStakes.plus(minimumDaoBounty),\r\n                  18\r\n                ),\r\n                1\r\n              );\r\n              const repAtCreation = daoStore.getRepAt(\r\n                ZERO_ADDRESS,\r\n                proposal.creationEvent.l1BlockNumber\r\n              ).totalSupply;\r\n\r\n              const positiveVotesPercentage = formatPercentage(\r\n                proposal.positiveVotes.div(repAtCreation),\r\n                2\r\n              );\r\n              const negativeVotesPercentage = formatPercentage(\r\n                proposal.negativeVotes.div(repAtCreation),\r\n                2\r\n              );\r\n              const timeToBoost = timeToTimestamp(proposal.boostTime);\r\n              const timeToFinish = timeToTimestamp(proposal.finishTime);\r\n\r\n              const votingMachineTokenName =\r\n                votingMachines.dxd &&\r\n                daoStore.getVotingMachineOfProposal(proposal.id) ===\r\n                  votingMachines.dxd.address\r\n                  ? 'DXD'\r\n                  : 'GEN';\r\n\r\n              const voted =\r\n                userEvents.votes.findIndex(\r\n                  event => event.proposalId === proposal.id\r\n                ) > -1;\r\n              const staked =\r\n                userEvents.stakes.findIndex(\r\n                  event => event.proposalId === proposal.id\r\n                ) > -1;\r\n              const created =\r\n                userEvents.newProposal.findIndex(\r\n                  event => event.proposalId === proposal.id\r\n                ) > -1;\r\n              return (\r\n                <Link\r\n                  key={'proposal' + i}\r\n                  to={`/${networkName}/proposal/${proposal.id}`}\r\n                  style={{ textDecoration: 'none' }}\r\n                >\r\n                  <TableRow>\r\n                    <TableCell\r\n                      width=\"35%\"\r\n                      align=\"left\"\r\n                      weight=\"500\"\r\n                      wrapText=\"true\"\r\n                    >\r\n                      {created && (\r\n                        <FiFeather\r\n                          style={{ minWidth: '15px', margin: '0px 2px' }}\r\n                        />\r\n                      )}\r\n                      {voted && (\r\n                        <FiCheckCircle\r\n                          style={{ minWidth: '15px', margin: '0px 2px' }}\r\n                        />\r\n                      )}\r\n                      {staked && (\r\n                        <FiCheckSquare\r\n                          style={{ minWidth: '15px', margin: '0px 2px' }}\r\n                        />\r\n                      )}\r\n                      {proposal.title.length > 0 ? proposal.title : proposal.id}\r\n                    </TableCell>\r\n                    <TableCell width=\"15%\" align=\"center\">\r\n                      {daoStore.getCache().schemes[proposal.scheme].name}\r\n                    </TableCell>\r\n                    <TableCell width=\"15%\" align=\"center\">\r\n                      <span style={{ textAlign: 'center' }}>\r\n                        {proposal.status} <br />\r\n                        {timeToBoost !== '' ? (\r\n                          <small>\r\n                            Boost {timeToBoost} <br />\r\n                          </small>\r\n                        ) : (\r\n                          <span></span>\r\n                        )}\r\n                        {timeToFinish !== '' ? (\r\n                          <small>Finish {timeToFinish} </small>\r\n                        ) : (\r\n                          <span></span>\r\n                        )}\r\n                        {proposal.pendingAction === 3 ? (\r\n                          <small> Pending Finish Execution </small>\r\n                        ) : (\r\n                          <span></span>\r\n                        )}\r\n                      </span>\r\n                    </TableCell>\r\n                    <TableCell\r\n                      width=\"17.5%\"\r\n                      align=\"space-evenly\"\r\n                      style={{ minWidth: '15px', margin: '0px 2px' }}\r\n                    >\r\n                      <span\r\n                        style={{\r\n                          color: 'green',\r\n                          flex: '5',\r\n                          textAlign: 'right',\r\n                        }}\r\n                      >\r\n                        {positiveStake.toString()} {votingMachineTokenName}{' '}\r\n                      </span>\r\n                      <span style={{ flex: '1', textAlign: 'center' }}>|</span>\r\n                      <span\r\n                        style={{ color: 'red', flex: '5', textAlign: 'left' }}\r\n                      >\r\n                        {' '}\r\n                        {negativeStake.toString()} {votingMachineTokenName}\r\n                      </span>\r\n                    </TableCell>\r\n                    <TableCell width=\"17.5%\" align=\"space-evenly\">\r\n                      <span\r\n                        style={{\r\n                          color: 'green',\r\n                          flex: '3',\r\n                          textAlign: 'right',\r\n                        }}\r\n                      >\r\n                        {positiveVotesPercentage}{' '}\r\n                      </span>\r\n                      <span style={{ flex: '1', textAlign: 'center' }}>|</span>\r\n                      <span\r\n                        style={{ color: 'red', flex: '3', textAlign: 'left' }}\r\n                      >\r\n                        {' '}\r\n                        {negativeVotesPercentage}\r\n                      </span>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n        </TableRowsWrapper>\r\n      )}\r\n    </ProposalsTableWrapper>\r\n  );\r\n});\r\n\r\nexport default ProposalsPage;\r\n","import styled from 'styled-components';\r\nimport { FaQuestionCircle } from 'react-icons/fa';\r\n\r\nconst QuestionLink = styled.a`\r\n  color: var(--dark-text-gray);\r\n\r\n  svg {\r\n    height: 15px;\r\n  }\r\n  svg:hover {\r\n    color: var(--text-gray-onHover);\r\n  }\r\n`;\r\n\r\nconst QuestionIcon = ({ question }) => {\r\n  return (\r\n    <QuestionLink href={'/#/faq?question=' + question} target=\"_self\">\r\n      <FaQuestionCircle> </FaQuestionCircle>\r\n    </QuestionLink>\r\n  );\r\n};\r\n\r\nexport default QuestionIcon;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { observer } from 'mobx-react';\r\nimport { useContext } from '../contexts';\r\nimport ActiveButton from '../components/common/ActiveButton';\r\nimport Question from '../components/common/Question';\r\nimport Box from '../components/common/Box';\r\nimport MDEditor, { commands } from '@uiw/react-md-editor';\r\nimport contentHash from 'content-hash';\r\nimport { NETWORK_ASSET_SYMBOL } from '../utils';\r\n\r\nimport {\r\n  ZERO_ADDRESS,\r\n  ANY_ADDRESS,\r\n  sleep,\r\n  bnum,\r\n  normalizeBalance,\r\n  denormalizeBalance,\r\n  TXEvents,\r\n} from '../utils';\r\n\r\nconst NewProposalFormWrapper = styled(Box)`\r\n  width: cacl(100% -40px);\r\n  display: flex;\r\n  padding: 10px 10px;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst PlaceHolders = styled.div`\r\n  width: calc(100% - 1px);\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  padding-bottom: 0px;\r\n`;\r\n\r\nconst TitleInput = styled.div`\r\n  width: calc(100% - 1px);\r\n  display: flex;\r\n  justify-content: left;\r\n  flex-direction: row;\r\n  margin-bottom: 10px;\r\n\r\n  input {\r\n    margin-top: 5px;\r\n    width: 100%;\r\n    height: 32px;\r\n    margin-top: 5px;\r\n    border-radius: 3px;\r\n    border: 1px solid gray;\r\n    padding: 0px 5px;\r\n  }\r\n\r\n  select {\r\n    margin-left: 5px;\r\n    background-color: white;\r\n    min-width: 150px;\r\n    height: 34px;\r\n    margin-top: 5px;\r\n    border-radius: 3px;\r\n    border: 1px solid gray;\r\n  }\r\n`;\r\n\r\nconst TextActions = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: left;\r\n  flex-direction: column;\r\n  margin: 10px 0px;\r\n  line-height: 30px;\r\n`;\r\n\r\nconst CallRow = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: left;\r\n  flex-direction: row;\r\n  margin-bottom: 10px;\r\n\r\n  span {\r\n    text-align: center;\r\n    font-family: Roboto;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 20px;\r\n    line-height: 18px;\r\n    padding: 10px 10px;\r\n  }\r\n`;\r\n\r\nconst RemoveButton = styled.div`\r\n  background-color: grey;\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n  color: white;\r\n  height: 25px;\r\n  letter-spacing: 1px;\r\n  font-weight: 500;\r\n  line-height: 25px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  width: max-content;\r\n  padding: 0px 5px;\r\n  margin: 5px;\r\n`;\r\n\r\nconst TextInput = styled.input`\r\n  width: ${props => props.width || '25%'};\r\n  height: 34px;\r\n  border-radius: 3px;\r\n  border: 1px solid gray;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst SelectInput = styled.select`\r\n  width: ${props => props.width || '25%'};\r\n  height: 38px;\r\n  border-radius: 3px;\r\n  border: 1px solid gray;\r\n  margin-right: 5px;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst NewProposalPage = observer(() => {\r\n  const {\r\n    context: {\r\n      providerStore,\r\n      daoStore,\r\n      configStore,\r\n      daoService,\r\n      ipfsService,\r\n      pinataService,\r\n    },\r\n  } = useContext();\r\n\r\n  const networkTokens = configStore.getTokensOfNetwork();\r\n  const schemes = daoStore.getAllSchemes();\r\n  const networkContracts = configStore.getNetworkContracts();\r\n  const schemeInLocalStorage = localStorage.getItem(\r\n    'dxvote-newProposal-scheme'\r\n  );\r\n  const networkAssetSymbol =\r\n    NETWORK_ASSET_SYMBOL[configStore.getActiveChainName()];\r\n\r\n  const defaultSchemeToUse = schemeInLocalStorage\r\n    ? schemes.findIndex(scheme => scheme.address === schemeInLocalStorage)\r\n    : schemes.findIndex(scheme => scheme.name === 'MasterWalletScheme');\r\n\r\n  const [schemeToUse, setSchemeToUse] = React.useState(\r\n    defaultSchemeToUse > -1 ? schemes[defaultSchemeToUse] : schemes[0]\r\n  );\r\n  const [titleText, setTitleText] = React.useState(\r\n    localStorage.getItem('dxvote-newProposal-title') || ''\r\n  );\r\n  const [ipfsHash, setIpfsHash] = React.useState('');\r\n  const [descriptionText, setDescriptionText] = React.useState(\r\n    localStorage.getItem('dxvote-newProposal-description') || ''\r\n  );\r\n\r\n  let callsInStorage = [];\r\n  try {\r\n    if (localStorage.getItem('dxvote-newProposal-calls')) {\r\n      callsInStorage = JSON.parse(\r\n        localStorage.getItem('dxvote-newProposal-calls')\r\n      );\r\n      if (callsInStorage.length > 0 && !callsInStorage[0].dataValues)\r\n        callsInStorage = callsInStorage.map(callInStorage =>\r\n          Object.assign(callInStorage, {\r\n            dataValues: new Array(callInStorage.functionParams.length),\r\n          })\r\n        );\r\n    }\r\n  } catch (error) {\r\n    callsInStorage = [];\r\n  }\r\n  const [calls, setCalls] = React.useState(callsInStorage);\r\n\r\n  const [contributionRewardCalls, setContributionRewardCalls] = React.useState({\r\n    beneficiary: 'ZERO_ADDRESS',\r\n    repChange: '0',\r\n    ethValue: '0',\r\n    externalToken: ZERO_ADDRESS,\r\n    tokenValue: '0',\r\n  });\r\n\r\n  const [, forceUpdate] = React.useReducer(x => x + 1, 0);\r\n\r\n  const [submitionState, setSubmitionState] = React.useState(0);\r\n  // 0 = Proposal Description not uploaded\r\n  // 1 = Uploading proposal description\r\n  // 2 = Proposal description uploaded\r\n  // 3 = Submiting new proposal tx\r\n  // 4 = Proposal creation tx submited\r\n  // 5 = Proposal creation tx receipt received\r\n\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const proposalTemplates = configStore.getProposalTemplates();\r\n\r\n  const { assetLimits: transferLimits, recommendedCalls } =\r\n    daoStore.getSchemeRecommendedCalls(schemeToUse.address);\r\n  console.debug('[PERMISSIONS]', schemeToUse, transferLimits, recommendedCalls);\r\n\r\n  let allowedToCall = [];\r\n\r\n  recommendedCalls.map(recommendedCall => {\r\n    if (\r\n      recommendedCall.fromTime > 0 &&\r\n      allowedToCall.findIndex(\r\n        allowedPermission => allowedPermission.value === recommendedCall.to\r\n      ) < 0\r\n    ) {\r\n      allowedToCall.push({\r\n        value: recommendedCall.to,\r\n        name: recommendedCall.toName,\r\n      });\r\n    }\r\n  });\r\n\r\n  const callPermissions = daoStore.getCache().callPermissions;\r\n  if (\r\n    schemeToUse.type === 'WalletScheme' &&\r\n    callPermissions[ZERO_ADDRESS] &&\r\n    callPermissions[ZERO_ADDRESS][\r\n      schemeToUse.controllerAddress === networkContracts.controller\r\n        ? networkContracts.avatar\r\n        : schemeToUse.address\r\n    ] &&\r\n    callPermissions[ZERO_ADDRESS][\r\n      schemeToUse.controllerAddress === networkContracts.controller\r\n        ? networkContracts.avatar\r\n        : schemeToUse.address\r\n    ][ANY_ADDRESS]\r\n  )\r\n    allowedToCall.push({ value: ANY_ADDRESS, name: 'Custom' });\r\n\r\n  const uploadToIPFS = async function () {\r\n    if (titleText.length < 10) {\r\n      setErrorMessage('Title has to be at mimimum 10 characters length');\r\n    } else if (descriptionText.length === 0) {\r\n      setErrorMessage('Description has to be at mimimum 100 characters length');\r\n    } else {\r\n      setSubmitionState(1);\r\n      setErrorMessage('');\r\n      console.log(schemeToUse.type);\r\n      const bodyTextToUpload = JSON.stringify({\r\n        description: descriptionText,\r\n        title: titleText,\r\n        tags: ['dxvote'],\r\n        url: '',\r\n      });\r\n\r\n      const hash = await ipfsService.add(bodyTextToUpload);\r\n      setIpfsHash(hash);\r\n\r\n      if (pinataService.auth) {\r\n        const pinataPin = await pinataService.pin(hash);\r\n        console.debug('[PINATA PIN]', pinataPin.data);\r\n      }\r\n      const ipfsPin = await ipfsService.pin(hash);\r\n      console.debug('[IPFS PIN]', ipfsPin);\r\n\r\n      let uploaded = false;\r\n      while (!uploaded) {\r\n        const ipfsContent = await ipfsService.getContent(hash);\r\n        console.debug('[IPFS CONTENT]', ipfsContent);\r\n        if (ipfsContent === bodyTextToUpload) uploaded = true;\r\n        await sleep(1000);\r\n      }\r\n\r\n      setSubmitionState(2);\r\n    }\r\n  };\r\n\r\n  const createProposal = async function () {\r\n    console.debug('[RAW PROPOSAL]', titleText, ipfsHash, calls);\r\n    setSubmitionState(3);\r\n\r\n    const { library } = providerStore.getActiveWeb3React();\r\n\r\n    let to = [],\r\n      data = [],\r\n      value = [];\r\n    try {\r\n      if (schemeToUse.type !== 'ContributionReward') {\r\n        const callToController =\r\n          schemeToUse.controllerAddress === networkContracts.controller;\r\n\r\n        to = calls.map(call => {\r\n          return callToController ? networkContracts.controller : call.to;\r\n        });\r\n\r\n        data = calls.map(call => {\r\n          if (call.to === '') return '';\r\n\r\n          let callData;\r\n\r\n          if (call.callType === 'simple') {\r\n            let callDataFunctionSignature = '0x0';\r\n            let callDataFunctionParamsEncoded = '';\r\n\r\n            if (call.functionName.length === 0) {\r\n              callDataFunctionSignature = '0x0';\r\n            } else {\r\n              callDataFunctionSignature =\r\n                library.eth.abi.encodeFunctionSignature(call.functionName);\r\n            }\r\n\r\n            if (call.dataValues.length > 0) {\r\n              call.functionParams.map((functionParam, i) => {\r\n                if (functionParam.type.indexOf('[]') > 0) {\r\n                  call.dataValues[i] = call.dataValues[i]\r\n                    .slice(1, -1)\r\n                    .split(',');\r\n                }\r\n                if (functionParam.type === 'bool') {\r\n                  call.dataValues[i] = call.dataValues[i] === 'true';\r\n                }\r\n              });\r\n              callDataFunctionParamsEncoded =\r\n                call.functionParams.length > 0\r\n                  ? library.eth.abi\r\n                      .encodeParameters(\r\n                        call.functionParams.map(\r\n                          functionParam => functionParam.type\r\n                        ),\r\n                        call.dataValues\r\n                      )\r\n                      .substring(2)\r\n                  : '';\r\n            }\r\n            callData =\r\n              callDataFunctionSignature + callDataFunctionParamsEncoded;\r\n          } else {\r\n            callData = call.dataValues[0];\r\n          }\r\n          if (callToController && call.to !== networkContracts.controller) {\r\n            return daoService.encodeControllerGenericCall(\r\n              call.to,\r\n              callData,\r\n              call.callType === 'simple'\r\n                ? library.utils.toWei(call.value).toString()\r\n                : call.value\r\n            );\r\n          } else {\r\n            return callData;\r\n          }\r\n        });\r\n\r\n        value = calls.map(call => {\r\n          return callToController\r\n            ? '0'\r\n            : call.callType === 'simple'\r\n            ? library.utils.toWei(call.value).toString()\r\n            : call.value;\r\n        });\r\n      }\r\n\r\n      const proposalData =\r\n        schemeToUse.type === 'ContributionReward'\r\n          ? {\r\n              beneficiary: contributionRewardCalls.beneficiary,\r\n              reputationChange: denormalizeBalance(\r\n                bnum(contributionRewardCalls.repChange)\r\n              ).toString(),\r\n              ethValue: denormalizeBalance(\r\n                bnum(contributionRewardCalls.ethValue)\r\n              ).toString(),\r\n              externalToken: contributionRewardCalls.externalToken,\r\n              tokenValue: contributionRewardCalls.tokenValue,\r\n              descriptionHash: contentHash.fromIpfs(ipfsHash),\r\n            }\r\n          : {\r\n              to,\r\n              data,\r\n              value,\r\n              titleText,\r\n              descriptionHash: contentHash.fromIpfs(ipfsHash),\r\n            };\r\n\r\n      console.debug('[PROPOSAL]', schemeToUse.address, proposalData);\r\n\r\n      daoService\r\n        .createProposal(schemeToUse.address, schemeToUse.type, proposalData)\r\n        .on(TXEvents.TX_HASH, hash => {\r\n          console.debug('[TX_SUBMITTED]', hash);\r\n          setSubmitionState(4);\r\n          setErrorMessage('');\r\n        })\r\n        .on(TXEvents.RECEIPT, hash => {\r\n          console.debug('[TX_RECEIPT]', hash);\r\n          setSubmitionState(5);\r\n        })\r\n        .on(TXEvents.TX_ERROR, txerror => {\r\n          console.error('[TX_ERROR]', txerror);\r\n          setSubmitionState(2);\r\n          setErrorMessage((txerror as Error).message);\r\n        })\r\n        .on(TXEvents.INVARIANT, error => {\r\n          console.error('[ERROR]', error);\r\n          setSubmitionState(2);\r\n          setErrorMessage((error as Error).message);\r\n        })\r\n        .catch(error => {\r\n          console.error('[ERROR]', error);\r\n          setSubmitionState(2);\r\n          setErrorMessage((error as Error).message);\r\n        });\r\n    } catch (error) {\r\n      console.error('[PROPOSAL_ERROR]', error);\r\n      setSubmitionState(2);\r\n      setErrorMessage((error as Error).message);\r\n    }\r\n  };\r\n\r\n  function onDescriptionChange(newValue) {\r\n    if (submitionState < 1) {\r\n      setDescriptionText(newValue);\r\n      localStorage.setItem('dxvote-newProposal-description', newValue);\r\n    }\r\n  }\r\n\r\n  function onTitleChange(newValue) {\r\n    if (submitionState < 1) {\r\n      setTitleText(newValue.target.value);\r\n      localStorage.setItem('dxvote-newProposal-title', newValue.target.value);\r\n    }\r\n  }\r\n\r\n  function setCallsInState(calls) {\r\n    localStorage.setItem('dxvote-newProposal-calls', JSON.stringify(calls));\r\n    setCalls(calls);\r\n    forceUpdate();\r\n  }\r\n\r\n  function setContributionRewardCallsInState(contributionRewardCalls) {\r\n    setContributionRewardCalls(contributionRewardCalls);\r\n    forceUpdate();\r\n  }\r\n\r\n  function addCall() {\r\n    calls.push({\r\n      callType: schemeToUse.type === 'WalletScheme' ? 'simple' : 'advanced',\r\n      allowedFunctions: [],\r\n      to: '',\r\n      data: '',\r\n      functionName: '',\r\n      functionParams: [],\r\n      dataValues: [],\r\n      value: '',\r\n    });\r\n    setCallsInState(calls);\r\n  }\r\n\r\n  function removeCall(proposalIndex) {\r\n    calls.splice(proposalIndex, 1);\r\n    setCallsInState(calls);\r\n  }\r\n\r\n  function changeCallType(callIndex) {\r\n    calls[callIndex] = {\r\n      callType: calls[callIndex].callType === 'simple' ? 'advanced' : 'simple',\r\n      allowedFunctions: [],\r\n      to: '',\r\n      data: '',\r\n      functionName: '',\r\n      functionParams: [],\r\n      dataValues: [],\r\n      value: '',\r\n    };\r\n    setCallsInState(calls);\r\n  }\r\n\r\n  function onToSelectChange(callIndex, toAddress) {\r\n    console.log(toAddress);\r\n    if (toAddress === ANY_ADDRESS) {\r\n      changeCallType(callIndex);\r\n    } else {\r\n      calls[callIndex].to = toAddress;\r\n      calls[callIndex].allowedFunctions = [];\r\n      calls[callIndex].functionName = '';\r\n      calls[callIndex].functionParams = [];\r\n      calls[callIndex].dataValues = [];\r\n      calls[callIndex].value = '0';\r\n      recommendedCalls.map(recommendedCall => {\r\n        if (recommendedCall.to === toAddress && recommendedCall.fromTime > 0) {\r\n          calls[callIndex].allowedFunctions.push(recommendedCall);\r\n        }\r\n      });\r\n      if (calls[callIndex].allowedFunctions.length > 0) {\r\n        calls[callIndex].functionName =\r\n          calls[callIndex].allowedFunctions[0].functionName;\r\n        calls[callIndex].functionParams =\r\n          calls[callIndex].allowedFunctions[0].params;\r\n        calls[callIndex].dataValues = new Array(\r\n          calls[callIndex].allowedFunctions[0].params.length\r\n        );\r\n      }\r\n      onFunctionSelectChange(\r\n        callIndex,\r\n        calls[callIndex].functionName,\r\n        calls[callIndex].functionParams\r\n      );\r\n    }\r\n  }\r\n\r\n  function onFunctionSelectChange(callIndex, functionName, params) {\r\n    calls[callIndex].functionName = functionName;\r\n\r\n    if (calls[callIndex].callType === 'simple') {\r\n      calls[callIndex].functionParams = params;\r\n      calls[callIndex].dataValues = [];\r\n      calls[callIndex].dataValues = params.map(() => {\r\n        return '';\r\n      });\r\n      calls[callIndex].value = '0';\r\n    } else {\r\n      calls[callIndex].functionParams = [];\r\n      calls[callIndex].dataValues = [''];\r\n      calls[callIndex].value = '0';\r\n    }\r\n\r\n    setCallsInState(calls);\r\n  }\r\n\r\n  function onFunctionParamsChange(callIndex, event, paramIndex) {\r\n    calls[callIndex].dataValues[paramIndex] = event.target.value;\r\n    setCallsInState(calls);\r\n  }\r\n\r\n  function onValueChange(callIndex, event) {\r\n    calls[callIndex].value = event.target.value;\r\n    setCallsInState(calls);\r\n  }\r\n\r\n  function onContributionRewardValueChange(key, value) {\r\n    contributionRewardCalls[key] = value;\r\n    setContributionRewardCallsInState(contributionRewardCalls);\r\n  }\r\n\r\n  function onSchemeChange(event) {\r\n    setSchemeToUse(schemes[event.target.value]);\r\n    localStorage.setItem(\r\n      'dxvote-newProposal-scheme',\r\n      schemes[event.target.value].address\r\n    );\r\n    calls.splice(0, calls.length);\r\n    setContributionRewardCalls({\r\n      beneficiary: '',\r\n      repChange: '0',\r\n      ethValue: '0',\r\n      externalToken: ZERO_ADDRESS,\r\n      tokenValue: '0',\r\n    });\r\n    setCallsInState(calls);\r\n  }\r\n\r\n  function onProposalTemplate(event) {\r\n    if (proposalTemplates[event.target.value].name !== 'Custom') {\r\n      setTitleText(proposalTemplates[event.target.value].title);\r\n      setDescriptionText(proposalTemplates[event.target.value].description);\r\n      calls.splice(0, calls.length);\r\n      setCallsInState(calls);\r\n    }\r\n  }\r\n  if (calls[0] && calls[0].allowedFunctions.length === 0 && allowedToCall[0])\r\n    onToSelectChange(0, allowedToCall[0].value);\r\n\r\n  return (\r\n    <NewProposalFormWrapper>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <PlaceHolders>\r\n          <span style={{ width: '100%' }}>Title</span>\r\n          <span style={{ minWidth: '150px' }}>\r\n            Scheme <Question question=\"2\" />\r\n          </span>\r\n          <span style={{ minWidth: '150px' }}>Template</span>\r\n        </PlaceHolders>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <TitleInput>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Proposal Title\"\r\n            onChange={onTitleChange}\r\n            value={titleText}\r\n          />\r\n          <select\r\n            name=\"scheme\"\r\n            id=\"schemeSelector\"\r\n            onChange={onSchemeChange}\r\n            defaultValue={defaultSchemeToUse}\r\n          >\r\n            {schemes.map((scheme, i) => {\r\n              if (\r\n                scheme.type === 'WalletScheme' ||\r\n                scheme.type === 'ContributionReward' ||\r\n                scheme.type === 'GenericMulticall'\r\n              )\r\n                return (\r\n                  <option key={scheme.address} value={i}>\r\n                    {scheme.name}\r\n                  </option>\r\n                );\r\n              else return null;\r\n            })}\r\n          </select>\r\n          <select\r\n            name=\"proposalTemplate\"\r\n            id=\"proposalTemplateSelector\"\r\n            onChange={onProposalTemplate}\r\n          >\r\n            {proposalTemplates.map((template, i) => {\r\n              return (\r\n                <option key={'proposalTemplate' + i} value={i}>\r\n                  {template.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </TitleInput>\r\n      </div>\r\n      {submitionState < 1 ? (\r\n        <MDEditor\r\n          value={descriptionText}\r\n          onChange={onDescriptionChange}\r\n          preview=\"edit\"\r\n          height=\"300\"\r\n          minHeight={300}\r\n          maxHeight={1000}\r\n          commands={[\r\n            commands.bold,\r\n            commands.italic,\r\n            commands.strikethrough,\r\n            commands.hr,\r\n            commands.title,\r\n            commands.divider,\r\n            commands.link,\r\n            commands.quote,\r\n            commands.code,\r\n            commands.image,\r\n            commands.unorderedListCommand,\r\n            commands.orderedListCommand,\r\n            commands.checkedListCommand,\r\n          ]}\r\n        />\r\n      ) : (\r\n        <div />\r\n      )}\r\n      <h2>Description Preview</h2>\r\n      <MDEditor.Markdown\r\n        source={descriptionText}\r\n        style={{\r\n          backgroundColor: 'white',\r\n          borderRadius: '5px',\r\n          border: '1px solid gray',\r\n          padding: '20px 10px',\r\n        }}\r\n      />\r\n      {schemeToUse.type === 'ContributionReward' ||\r\n      schemeToUse.type === 'GenericMulticall' ||\r\n      (schemeToUse.type === 'WalletScheme' &&\r\n        schemeToUse.controllerAddress === networkContracts.controller) ? (\r\n        <h2>\r\n          Calls executed from the avatar <Question question=\"9\" />\r\n        </h2>\r\n      ) : (\r\n        <h2>\r\n          Calls executed from the scheme <Question question=\"9\" />\r\n        </h2>\r\n      )}\r\n      {Object.keys(transferLimits).map(assetAddress => {\r\n        if (assetAddress === ZERO_ADDRESS)\r\n          return (\r\n            <h3>\r\n              Transfer limit of{' '}\r\n              {normalizeBalance(transferLimits[assetAddress]).toString()}{' '}\r\n              {networkAssetSymbol}\r\n            </h3>\r\n          );\r\n        else {\r\n          const token = networkTokens.find(\r\n            networkToken => networkToken.address === assetAddress\r\n          );\r\n          if (token)\r\n            return (\r\n              <h3>\r\n                Transfer limit of{' '}\r\n                {normalizeBalance(\r\n                  transferLimits[assetAddress],\r\n                  token.decimals\r\n                ).toString()}{' '}\r\n                {token.symbol}\r\n              </h3>\r\n            );\r\n          else\r\n            return (\r\n              <h3>\r\n                Transfer limit {transferLimits[assetAddress].toString()} of\r\n                asset {assetAddress}\r\n              </h3>\r\n            );\r\n        }\r\n      })}\r\n\r\n      {schemeToUse.type === 'ContributionReward' ? (\r\n        // If scheme to use is Contribution Reward display a different form with less fields\r\n        <div>\r\n          <CallRow>\r\n            <span style={{ width: '20%', fontSize: '13px' }}>\r\n              Beneficiary Account\r\n            </span>\r\n            <span style={{ width: '20%', fontSize: '13px' }}>REP Change</span>\r\n            <span style={{ width: '20%', fontSize: '13px' }}>\r\n              {networkAssetSymbol} Value\r\n            </span>\r\n            <span style={{ width: '20%', fontSize: '13px' }}>\r\n              Address of Token\r\n            </span>\r\n            <span style={{ width: '20%', fontSize: '13px' }}>\r\n              Token Amount (in WEI)\r\n            </span>\r\n          </CallRow>\r\n          <CallRow>\r\n            <TextInput\r\n              type=\"text\"\r\n              onChange={event =>\r\n                onContributionRewardValueChange(\r\n                  'beneficiary',\r\n                  event.target.value\r\n                )\r\n              }\r\n              value={contributionRewardCalls.beneficiary}\r\n              width=\"50%\"\r\n            />\r\n            <TextInput\r\n              type=\"text\"\r\n              onChange={event =>\r\n                onContributionRewardValueChange('repChange', event.target.value)\r\n              }\r\n              value={contributionRewardCalls.repChange}\r\n              width=\"50%\"\r\n            />\r\n            <TextInput\r\n              type=\"text\"\r\n              onChange={event =>\r\n                onContributionRewardValueChange('ethValue', event.target.value)\r\n              }\r\n              value={contributionRewardCalls.ethValue}\r\n              width=\"50%\"\r\n            />\r\n            <TextInput\r\n              type=\"text\"\r\n              onChange={event =>\r\n                onContributionRewardValueChange(\r\n                  'externalToken',\r\n                  event.target.value\r\n                )\r\n              }\r\n              value={contributionRewardCalls.externalToken}\r\n              width=\"50%\"\r\n            />\r\n            <TextInput\r\n              type=\"text\"\r\n              onChange={event =>\r\n                onContributionRewardValueChange(\r\n                  'tokenValue',\r\n                  event.target.value\r\n                )\r\n              }\r\n              value={contributionRewardCalls.tokenValue}\r\n              width=\"50%\"\r\n            />\r\n          </CallRow>\r\n        </div>\r\n      ) : (\r\n        // If the scheme is GenericMulticall allow only advanced encoded calls\r\n        // At last if the scheme used is a Wallet Scheme type allow a complete edition of the calls :)\r\n        <div>\r\n          {calls.map((call, i) => (\r\n            <CallRow key={'call' + i}>\r\n              <span>#{i}</span>\r\n\r\n              {schemeToUse.type === 'WalletScheme' &&\r\n              call.callType === 'simple' ? (\r\n                <SelectInput\r\n                  value={calls[i].to}\r\n                  onChange={e => {\r\n                    onToSelectChange(i, e.target.value);\r\n                  }}\r\n                  width={'20%'}\r\n                >\r\n                  {allowedToCall.map((allowedCall, allowedCallIndex) => {\r\n                    return (\r\n                      <option\r\n                        key={'toCall' + allowedCallIndex}\r\n                        value={allowedCall.value || ''}\r\n                      >\r\n                        {allowedCall.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </SelectInput>\r\n              ) : (\r\n                schemeToUse.type !== 'ContributionReward' && (\r\n                  <TextInput\r\n                    value={calls[i].to || ''}\r\n                    onChange={e => {\r\n                      onToSelectChange(i, e.target.value);\r\n                    }}\r\n                    width={'20%'}\r\n                  />\r\n                )\r\n              )}\r\n\r\n              {call.callType === 'simple' ? (\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    width: call.callType === 'simple' ? '60%' : '50%',\r\n                  }}\r\n                >\r\n                  <SelectInput\r\n                    value={calls[i].functionName || ''}\r\n                    onChange={event => {\r\n                      const selectedFunction = calls[i].allowedFunctions.find(\r\n                        allowedFunction => {\r\n                          return (\r\n                            allowedFunction.functionName === event.target.value\r\n                          );\r\n                        }\r\n                      );\r\n                      onFunctionSelectChange(\r\n                        i,\r\n                        event.target.value,\r\n                        selectedFunction ? selectedFunction.params : ''\r\n                      );\r\n                    }}\r\n                    width=\"40%\"\r\n                  >\r\n                    {calls[i].allowedFunctions.map(\r\n                      (allowedFunc, allowedFuncIndex) => {\r\n                        return (\r\n                          <option\r\n                            key={'functionToCall' + allowedFuncIndex}\r\n                            value={allowedFunc.functionName || ''}\r\n                          >\r\n                            {allowedFunc.functionName}\r\n                          </option>\r\n                        );\r\n                      }\r\n                    )}\r\n                  </SelectInput>\r\n\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      width: '100%',\r\n                      flexDirection: 'column',\r\n                      paddingRight: '10px',\r\n                    }}\r\n                  >\r\n                    {calls[i].functionParams.length === 0 ? (\r\n                      <TextInput\r\n                        key={'functionParam00'}\r\n                        disabled\r\n                        type=\"text\"\r\n                        placeholder=\"Select address to call and function\"\r\n                        width=\"100%\"\r\n                        style={{ marginTop: '0px' }}\r\n                      />\r\n                    ) : (\r\n                      calls[i].functionParams.map(\r\n                        (funcParam, funcParamIndex) => {\r\n                          return (\r\n                            <TextInput\r\n                              key={'functionParam' + funcParamIndex}\r\n                              type=\"text\"\r\n                              onChange={value =>\r\n                                onFunctionParamsChange(i, value, funcParamIndex)\r\n                              }\r\n                              value={calls[i].dataValues[funcParamIndex] || ''}\r\n                              placeholder={funcParam.name}\r\n                              width=\"100%\"\r\n                              style={{\r\n                                marginTop: funcParamIndex > 0 ? '5px' : '0px',\r\n                              }}\r\n                            />\r\n                          );\r\n                        }\r\n                      )\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <TextInput\r\n                  type=\"text\"\r\n                  onChange={value => onFunctionParamsChange(i, value, 0)}\r\n                  value={calls[i].dataValues[0] || ''}\r\n                  placeholder=\"0x...\"\r\n                  width=\"100%\"\r\n                />\r\n              )}\r\n\r\n              <TextInput\r\n                type=\"text\"\r\n                onChange={value => onValueChange(i, value)}\r\n                value={calls[i].value || ''}\r\n                width=\"10%\"\r\n                placeholder={\r\n                  calls[i].callType === 'advanced'\r\n                    ? 'WEI'\r\n                    : { networkAssetSymbol }\r\n                }\r\n              />\r\n\r\n              <RemoveButton\r\n                onClick={() => {\r\n                  removeCall(i);\r\n                }}\r\n              >\r\n                X\r\n              </RemoveButton>\r\n              {schemeToUse.type === 'WalletScheme' ? (\r\n                <RemoveButton\r\n                  onClick={() => {\r\n                    changeCallType(i);\r\n                  }}\r\n                >\r\n                  {calls[i].callType === 'advanced' ? 'Simple' : 'Advanced'}\r\n                </RemoveButton>\r\n              ) : (\r\n                <div />\r\n              )}\r\n            </CallRow>\r\n          ))}\r\n\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <ActiveButton onClick={addCall}>Add Call</ActiveButton>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {errorMessage.length > 0 ? (\r\n        <TextActions>\r\n          <span>{errorMessage}</span>\r\n        </TextActions>\r\n      ) : (\r\n        <div />\r\n      )}\r\n      {submitionState > 1 ? (\r\n        <TextActions>\r\n          <span>\r\n            Uploaded to IPFS:\r\n            <a href={`https://ipfs.io/ipfs/${ipfsHash}`} target=\"_blank\">\r\n              https://ipfs.io/ipfs/{ipfsHash}\r\n            </a>\r\n            <br />\r\n            Check before submitting proposal\r\n          </span>\r\n        </TextActions>\r\n      ) : (\r\n        <div />\r\n      )}\r\n\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        {submitionState === 0 ? (\r\n          <ActiveButton onClick={uploadToIPFS}> Upload to IPFS </ActiveButton>\r\n        ) : submitionState === 1 ? (\r\n          <ActiveButton> Uploading descritpion to IPFS.. </ActiveButton>\r\n        ) : submitionState === 2 ? (\r\n          <ActiveButton onClick={createProposal}>Submit Proposal</ActiveButton>\r\n        ) : submitionState === 3 ? (\r\n          <ActiveButton>Submiting TX...</ActiveButton>\r\n        ) : submitionState === 4 ? (\r\n          <ActiveButton>Waiting for TX...</ActiveButton>\r\n        ) : (\r\n          <ActiveButton route=\"/\">Back to Proposals</ActiveButton>\r\n        )}\r\n      </div>\r\n    </NewProposalFormWrapper>\r\n  );\r\n});\r\n\r\nexport default NewProposalPage;\r\n","import styled from 'styled-components';\r\nimport Copy from './Copy';\r\nimport { getBlockchainLink } from '../../utils';\r\nimport { useContext } from '../../contexts';\r\nimport { FiExternalLink } from 'react-icons/fi';\r\n\r\nconst AddressLink = styled.span`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  a {\r\n    padding: 2px 5px;\r\n    font-family: var(--roboto);\r\n    line-height: 17px;\r\n    letter-spacing: 0.2px;\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n`;\r\n\r\nconst BlockchainLink = ({\r\n  text,\r\n  size = 'default',\r\n  type = 'default',\r\n  toCopy = false,\r\n  onlyIcon = false,\r\n}) => {\r\n  const {\r\n    context: { configStore },\r\n  } = useContext();\r\n\r\n  const networkName = configStore.getActiveChainName();\r\n\r\n  function formarText(toFormat) {\r\n    const start = toFormat.slice(0, 6);\r\n    const end = toFormat.slice(-4);\r\n\r\n    switch (size) {\r\n      case 'short':\r\n        return `${start}..`;\r\n      case 'long':\r\n        return toFormat;\r\n      default:\r\n        return `${start}...${end}`;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AddressLink>\r\n      <a href={getBlockchainLink(text, networkName, type)} target=\"_blank\">\r\n        {onlyIcon ? <FiExternalLink /> : formarText(text)}\r\n      </a>\r\n      {toCopy ? <Copy toCopy={text} /> : <div />}\r\n    </AddressLink>\r\n  );\r\n};\r\n\r\nexport default BlockchainLink;\r\n","import styled from 'styled-components';\r\nimport { observer } from 'mobx-react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useContext } from '../contexts';\r\nimport { useLocation } from 'react-router-dom';\r\nimport BlockchainLink from '../components/common/BlockchainLink';\r\nimport Box from '../components/common/Box';\r\nimport { formatBalance } from '../utils';\r\nconst InfoBox = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n  padding: 2px 5px;\r\n  margin: 10px 5px;\r\n  font-size: 25px;\r\n  font-weight: 300;\r\n  border-radius: 3px;\r\n  color: var(--activeButtonBackground);\r\n`;\r\n\r\nconst UserPage = observer(() => {\r\n  let history = useHistory();\r\n\r\n  const {\r\n    context: { daoStore, configStore },\r\n  } = useContext();\r\n  const userAddress = useLocation().pathname.split('/')[3];\r\n  const userEvents = daoStore.getUserEvents(userAddress);\r\n  const userInfo = daoStore.getUser(userAddress);\r\n  const networkName = configStore.getActiveChainName();\r\n  const redeemsLeft = daoStore.getUserRedeemsLeft(userAddress);\r\n\r\n  return (\r\n    <Box style={{ padding: '10px 20px' }}>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <h2 style={{ display: 'flex', alignItems: 'center' }}>\r\n          User: <BlockchainLink size=\"long\" text={userAddress} toCopy />\r\n        </h2>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        ></div>\r\n      </div>\r\n\r\n      <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n        <InfoBox>\r\n          {formatBalance(userInfo.repBalance, 18, 0)} REP (\r\n          {userInfo.repPercentage})\r\n        </InfoBox>\r\n        <InfoBox>\r\n          {userEvents.votes.filter(vote => vote.vote === 1).length} Positive\r\n          Votes\r\n        </InfoBox>\r\n        <InfoBox>\r\n          {userEvents.votes.filter(vote => vote.vote === 2).length} Negative\r\n          Votes\r\n        </InfoBox>\r\n        <InfoBox>{userEvents.newProposal.length} Proposals</InfoBox>\r\n      </div>\r\n\r\n      <h2> Redeems Left </h2>\r\n      {redeemsLeft.rep.map((proposalId, i) => {\r\n        return (\r\n          <span\r\n            key={'proposalLink' + i}\r\n            onClick={() => {\r\n              history.push(`/${networkName}/proposal/${proposalId}`);\r\n            }}\r\n            style={{\r\n              padding: '6px 0px',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            REP redeem in Proposal {proposalId}\r\n          </span>\r\n        );\r\n      })}\r\n      {redeemsLeft.stake.map((proposalId, i) => {\r\n        return (\r\n          <span\r\n            key={'proposalLink' + i}\r\n            onClick={() => {\r\n              history.push(`/${networkName}/proposal/${proposalId}`);\r\n            }}\r\n            style={{\r\n              padding: '6px 0px',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            Staking token redeem in Proposal {proposalId}\r\n          </span>\r\n        );\r\n      })}\r\n      {redeemsLeft.bounty.map((proposalId, i) => {\r\n        return (\r\n          <span\r\n            key={'proposalLink' + i}\r\n            onClick={() => {\r\n              history.push(`/${networkName}/proposal/${proposalId}`);\r\n            }}\r\n            style={{\r\n              padding: '6px 0px',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            Staking token bounty redeem in Proposal {proposalId}\r\n          </span>\r\n        );\r\n      })}\r\n\r\n      <h2> History </h2>\r\n      {userEvents.history.map((historyEvent, i) => {\r\n        return (\r\n          <div\r\n            key={'userHistoryEvent' + i}\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              padding: '6px 0px',\r\n              borderBottom:\r\n                i < userEvents.history.length - 1 ? '1px solid' : '',\r\n            }}\r\n          >\r\n            <span> {historyEvent.text} </span>\r\n            <BlockchainLink\r\n              type=\"transaction\"\r\n              size=\"short\"\r\n              text={historyEvent.event.tx}\r\n              onlyIcon\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default UserPage;\r\n","import styled from 'styled-components';\r\n\r\nimport { Modal } from '../Modal';\r\n\r\nconst Wrapper = styled.div`\r\n  ${({ theme }) => theme.flexColumnWrap}\r\n  margin: 16px 0px;\r\n  padding: 0;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.backgroundColor};\r\n  text-align: center;\r\n`;\r\n\r\nexport interface ModalProps {\r\n  onConfirm?: (any) => void;\r\n  onCancel?: () => void;\r\n  voteDecision: null | number;\r\n  positive: number;\r\n  negative: number;\r\n  toAdd: number;\r\n}\r\n\r\nexport const ConfirmVoteModal: React.FC<ModalProps> = ({\r\n  onCancel,\r\n  onConfirm,\r\n  voteDecision,\r\n  positive,\r\n  negative,\r\n  toAdd,\r\n}) => {\r\n  const header = (\r\n    <div>Confirm vote {voteDecision === 1 ? 'for' : 'against'} proposal</div>\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      header={header}\r\n      isOpen={!(voteDecision === null)}\r\n      onDismiss={onCancel}\r\n      onCancel={onCancel}\r\n      onConfirm={() => onConfirm(voteDecision)}\r\n    >\r\n      <Wrapper>\r\n        <b>State after your vote</b>\r\n        <div>For: {voteDecision === 1 ? positive + toAdd : positive}%</div>\r\n        <div>Against: {voteDecision === 2 ? negative + toAdd : negative}%</div>\r\n      </Wrapper>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { observer } from 'mobx-react';\r\nimport { useContext } from '../contexts';\r\nimport moment from 'moment';\r\nimport Countdown from 'react-countdown';\r\nimport {\r\n  FiPlayCircle,\r\n  FiFastForward,\r\n  FiThumbsUp,\r\n  FiThumbsDown,\r\n  FiZoomIn,\r\n  FiZoomOut,\r\n} from 'react-icons/fi';\r\nimport MDEditor from '@uiw/react-md-editor';\r\nimport { useHistory } from 'react-router-dom';\r\nimport contentHash from 'content-hash';\r\nimport BlockchainLink from '../components/common/BlockchainLink';\r\nimport Question from '../components/common/Question';\r\nimport Box from '../components/common/Box';\r\nimport {\r\n  WalletSchemeProposalState,\r\n  VotingMachineProposalState,\r\n  bnum,\r\n  calculateStakes,\r\n  formatBalance,\r\n  denormalizeBalance,\r\n} from '../utils';\r\nimport { ConfirmVoteModal } from 'components/ConfirmVoteModal';\r\n\r\nconst ProposalInformationWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst InfoSidebarBox = styled(Box)`\r\n  max-width: 400px;\r\n  min-width: 300px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  flex-direction: column;\r\n  padding: 10px 15px;\r\n`;\r\n\r\nconst ProposalInfoSection = styled.div`\r\n  max-width: 900px;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst ProposalInfoBox = styled(Box)`\r\n  max-width: 900px;\r\n  overflow-wrap: anywhere;\r\n  padding: 20px 15px 10px 15px;\r\n  justify-content: flex-start;\r\n  overflow: auto;\r\n`;\r\n\r\nconst SidebarDivider = styled.div`\r\n  border-bottom: 1px solid gray;\r\n  margin: 5px 10px;\r\n`;\r\n\r\nconst SidebarRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n  padding: 5px 0px;\r\n\r\n  .timeText {\r\n    font-size: 20;\r\n    margin-left: -10px;\r\n    width: 100%;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n  }\r\n\r\n  span {\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nconst AmountInput = styled.input`\r\n  background-color: white;\r\n  border: 1px solid gray;\r\n  border-radius: 4px;\r\n  height: 34px;\r\n  letter-spacing: 1px;\r\n  font-weight: 500;\r\n  line-height: 32px;\r\n  text-align: left;\r\n  cursor: pointer;\r\n  width: 60px;\r\n  padding: 0px 10px;\r\n  margin: 5px;\r\n  font-family: var(--roboto);\r\n`;\r\n\r\nconst AmountBadge = styled.span`\r\n  background-color: ${props => props.color || 'inherit'};\r\n  border-radius: 50%;\r\n  color: white;\r\n  padding: 2px 6px;\r\n  text-align: center;\r\n  margin: 5px;\r\n`;\r\n\r\nconst ActionButton = styled.div`\r\n  background-color: ${props => props.color || '#536DFE'};\r\n  border-radius: 4px;\r\n  color: white;\r\n  height: 34px;\r\n  width: max-content;\r\n  letter-spacing: 1px;\r\n  font-weight: 500;\r\n  line-height: 34px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  padding: 0px 10px;\r\n  margin: 5px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    margin-right: 4px;\r\n  }\r\n`;\r\n\r\nconst ProposalPage = observer(() => {\r\n  let history = useHistory();\r\n\r\n  const {\r\n    context: {\r\n      providerStore,\r\n      daoStore,\r\n      configStore,\r\n      userStore,\r\n      daoService,\r\n      ipfsService,\r\n    },\r\n  } = useContext();\r\n\r\n  const networkContracts = configStore.getNetworkContracts();\r\n  const votingMachines = networkContracts.votingMachines;\r\n  const proposalId = useLocation().pathname.split('/')[3];\r\n  const proposal = daoStore.getProposal(proposalId);\r\n\r\n  if (!proposal) history.push('/');\r\n\r\n  const votingMachineUsed = daoStore.getVotingMachineOfProposal(proposalId);\r\n  const scheme = daoStore.getScheme(proposal.scheme);\r\n  const { dxdApproved, genApproved } = userStore.getUserInfo();\r\n  const { account } = providerStore.getActiveWeb3React();\r\n  const [decision, setDecision] = React.useState(null);\r\n  const [advancedCalls, setAdvancedCalls] = React.useState(false);\r\n  const [votePercentage, setVotePercentage] = React.useState(0);\r\n  const [stakeAmount, setStakeAmount] = React.useState(0);\r\n  const [proposalDescription, setProposalDescription] = React.useState(\r\n    '## Getting proposal description from IPFS...'\r\n  );\r\n  const [proposalTitle, setProposalTitle] = React.useState(\r\n    proposal.title.length > 0\r\n      ? proposal.title\r\n      : 'Getting proposal title from IPFS...'\r\n  );\r\n\r\n  const votingMachineTokenName =\r\n    votingMachines.gen && scheme.votingMachine === votingMachines.gen.address\r\n      ? 'GEN'\r\n      : 'DXD';\r\n  const votingMachineTokenApproved =\r\n    votingMachines.gen && scheme.votingMachine === votingMachines.gen.address\r\n      ? genApproved\r\n      : dxdApproved;\r\n\r\n  const proposalEvents = daoStore.getProposalEvents(proposalId);\r\n  console.debug('[Scheme]', scheme);\r\n\r\n  let votedAmount = bnum(0);\r\n  let positiveVotesCount = proposalEvents.votes.filter(\r\n    vote => vote.vote.toString() === '1'\r\n  ).length;\r\n  let negativeVotesCount = proposalEvents.votes.filter(\r\n    vote => vote.vote.toString() === '2'\r\n  ).length;\r\n  let stakedAmount = bnum(0);\r\n  let positiveStakesCount = proposalEvents.stakes.filter(\r\n    stake => stake.vote.toString() === '1'\r\n  ).length;\r\n  let negativeStakesCount = proposalEvents.stakes.filter(\r\n    stake => stake.vote.toString() === '2'\r\n  ).length;\r\n\r\n  const {\r\n    userRep: userRepAtProposalCreation,\r\n    totalSupply: totalRepAtProposalCreation,\r\n  } =\r\n    configStore.getActiveChainName().indexOf('arbitrum') > -1\r\n      ? daoStore.getRepAt(account, proposal.creationEvent.l2BlockNumber)\r\n      : daoStore.getRepAt(account, proposal.creationEvent.l1BlockNumber);\r\n\r\n  const repPercentageAtCreation = userRepAtProposalCreation\r\n    .times(100)\r\n    .div(totalRepAtProposalCreation)\r\n    .toFixed(4);\r\n\r\n  const positiveVotes = proposal.positiveVotes\r\n    .times('100')\r\n    .div(totalRepAtProposalCreation)\r\n    .toFixed(2);\r\n\r\n  const negativeVotes = proposal.positiveVotes\r\n    .times('100')\r\n    .div(totalRepAtProposalCreation)\r\n    .toFixed(2);\r\n\r\n  const { status, boostTime, finishTime, pendingAction } =\r\n    daoStore.getProposalStatus(proposalId);\r\n\r\n  // @ts-ignore\r\n  try {\r\n    if (proposalDescription === '## Getting proposal description from IPFS...')\r\n      ipfsService\r\n        .getContent(contentHash.decode(proposal.descriptionHash))\r\n        .then(data => {\r\n          try {\r\n            setProposalTitle(JSON.parse(data).title);\r\n            setProposalDescription(JSON.parse(data).description);\r\n          } catch (error) {\r\n            setProposalDescription(data);\r\n          }\r\n        });\r\n  } catch (error) {\r\n    console.error('[IPFS ERROR]', error);\r\n    setProposalTitle('Error getting proposal title from ipfs');\r\n    setProposalDescription('Error getting proposal description from IPFS');\r\n  }\r\n\r\n  proposalEvents.votes.map(vote => {\r\n    if (vote.voter === account) {\r\n      votedAmount = bnum(vote.amount);\r\n    }\r\n  });\r\n\r\n  proposalEvents.stakes.map(stake => {\r\n    if (stake.staker === account && stake.vote.toString() === '1') {\r\n      stakedAmount = stakedAmount.plus(stake.amount);\r\n    } else if (stake.staker === account && stake.vote.toString() === '2') {\r\n      stakedAmount = stakedAmount.minus(stake.amount);\r\n    }\r\n  });\r\n\r\n  console.debug('[Proposal]', proposal);\r\n  console.debug('[Proposal events]', proposalEvents);\r\n\r\n  const executionTimeoutTime =\r\n    scheme.type === 'WalletScheme'\r\n      ? proposal.submittedTime.plus(scheme.maxSecondsForExecution)\r\n      : bnum(0);\r\n\r\n  let proposalCallTexts = new Array(proposal.to.length);\r\n  for (var p = 0; p < proposal.to.length; p++) {\r\n    proposalCallTexts[p] = daoService.decodeWalletSchemeCall(\r\n      scheme.type === 'WalletScheme' &&\r\n        scheme.controllerAddress !== networkContracts.controller\r\n        ? scheme.address\r\n        : networkContracts.avatar,\r\n      proposal.to[p],\r\n      proposal.callData[p],\r\n      proposal.values[p],\r\n      advancedCalls\r\n    );\r\n  }\r\n\r\n  const votingParameters = daoStore.getVotingParametersOfProposal(proposalId);\r\n\r\n  const redeemsLeft = daoStore.getUserRedeemsLeft(account);\r\n\r\n  const { recommendedStakeToBoost, recommendedStakeToUnBoost } =\r\n    calculateStakes(\r\n      votingParameters.thresholdConst,\r\n      scheme.boostedProposals,\r\n      proposal.stateInVotingMachine === 4\r\n        ? daoStore.getAmountOfProposalsPreBoostedInScheme(scheme.address) - 1\r\n        : daoStore.getAmountOfProposalsPreBoostedInScheme(scheme.address),\r\n      proposal.positiveStakes,\r\n      proposal.negativeStakes\r\n    );\r\n\r\n  const boostedVoteRequiredPercentage =\r\n    scheme.boostedVoteRequiredPercentage / 100;\r\n\r\n  function onStakeAmountChange(event) {\r\n    setStakeAmount(event.target.value);\r\n  }\r\n\r\n  function onVoteValueChange(event) {\r\n    setVotePercentage(\r\n      event.target.value < repPercentageAtCreation\r\n        ? event.target.value\r\n        : repPercentageAtCreation\r\n    );\r\n  }\r\n\r\n  if (Number(repPercentageAtCreation) > 0 && votePercentage === 0) {\r\n    setVotePercentage(Number(repPercentageAtCreation));\r\n  }\r\n\r\n  if (Number(votingMachineTokenApproved) > 0 && stakeAmount === 0) {\r\n    setStakeAmount(\r\n      Number(formatBalance(recommendedStakeToBoost, 18, 1, false))\r\n    );\r\n  }\r\n\r\n  const submitVote = function (decision) {\r\n    const repAmount = totalRepAtProposalCreation\r\n      .times(bnum(votePercentage))\r\n      .div('100')\r\n      .toFixed(0);\r\n    daoService.vote(decision, repAmount, proposalId);\r\n    setDecision(null);\r\n  };\r\n\r\n  const submitStake = function (decision) {\r\n    daoService.stake(\r\n      decision,\r\n      denormalizeBalance(bnum(stakeAmount)).toString(),\r\n      proposalId\r\n    );\r\n  };\r\n\r\n  // if (scheme.type === \"ContributionReward\" && networkContracts.daostack.contributionRewardRedeemer) {\r\n  //   daoService.redeemContributionRewardCall(\r\n  //     networkContracts.daostack.contributionRewardRedeemer, scheme.address, scheme.votingMachine, proposalId, account\r\n  //   ).then((toRedeemResponse) => {\r\n  //     const web3 = providerStore.getActiveWeb3React().library;\r\n  //     const toRedeem = web3.eth.abi.decodeParameters([\r\n  //       \"uint[3]\", \"uint[2]\", \"bool\", \"uint256\", \"int256\", \"uint256\", \"uint256\", \"uint256\"\r\n  //     ],toRedeemResponse)\r\n  //     console.debug(\"To Redeem:\",toRedeem);\r\n  //     if (\r\n  //       (toRedeem[0].findIndex(value => value !== \"0\") > -1) || (toRedeem[1].findIndex(value => value !== \"0\") > -1)\r\n  //       || (toRedeem[4] !== 0) || (toRedeem[5] > 0) || (toRedeem[6] > 0) || (toRedeem[7] > 0)\r\n  //     ) {\r\n  //       setCanRedeem(true)\r\n  //     } else {\r\n  //       setCanRedeem(false)\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  const redeem = function () {\r\n    if (\r\n      scheme.type === 'ContributionReward' &&\r\n      networkContracts.daostack.contributionRewardRedeemer\r\n    ) {\r\n      daoService.redeemContributionReward(\r\n        networkContracts.daostack.contributionRewardRedeemer,\r\n        scheme.address,\r\n        scheme.votingMachine,\r\n        proposalId,\r\n        account\r\n      );\r\n    } else {\r\n      daoService.redeem(proposalId, account);\r\n    }\r\n  };\r\n\r\n  const redeemDaoBounty = function () {\r\n    daoService.redeemDaoBounty(proposalId, account);\r\n  };\r\n\r\n  const approveVotingMachineToken = function () {\r\n    daoService.approveVotingMachineToken(votingMachineUsed);\r\n  };\r\n\r\n  const executeProposal = function () {\r\n    daoService.execute(proposalId);\r\n  };\r\n\r\n  const redeemBeneficiary = function () {\r\n    daoService.redeemContributionReward(\r\n      networkContracts.daostack.contributionRewardRedeemer,\r\n      scheme.address,\r\n      scheme.votingMachine,\r\n      proposalId,\r\n      proposal.to[0]\r\n    );\r\n  };\r\n\r\n  const executeMulticall = function () {\r\n    daoService.executeMulticall(scheme.address, proposalId);\r\n  };\r\n\r\n  const finishTimeReached = finishTime.toNumber() < moment().unix();\r\n  const autoBoost =\r\n    networkContracts.votingMachines.dxd &&\r\n    networkContracts.votingMachines.dxd.address === votingMachineUsed;\r\n\r\n  return (\r\n    <ProposalInformationWrapper>\r\n      <ProposalInfoSection>\r\n        <ProposalInfoBox>\r\n          <h1 style={{ margin: '0px' }}> {proposalTitle} </h1>\r\n          <MDEditor.Markdown\r\n            source={proposalDescription}\r\n            style={{\r\n              padding: '20px 10px',\r\n              lineBreak: 'anywhere',\r\n              whiteSpace: 'pre-line',\r\n            }}\r\n          />\r\n          {proposal.descriptionHash.length > 0 && (\r\n            <h3 style={{ margin: '0px' }}>\r\n              <small>\r\n                IPFS Document:{' '}\r\n                <a\r\n                  target=\"_blank\"\r\n                  href={`https://ipfs.io/ipfs/${contentHash.decode(\r\n                    proposal.descriptionHash\r\n                  )}`}\r\n                >\r\n                  ipfs://{contentHash.decode(proposal.descriptionHash)}\r\n                </a>\r\n              </small>\r\n            </h3>\r\n          )}\r\n          <h2>\r\n            {' '}\r\n            Calls\r\n            {advancedCalls ? (\r\n              <FiZoomOut\r\n                onClick={() => {\r\n                  setAdvancedCalls(false);\r\n                }}\r\n              />\r\n            ) : (\r\n              <FiZoomIn\r\n                onClick={() => {\r\n                  setAdvancedCalls(true);\r\n                }}\r\n              />\r\n            )}\r\n            <Question question=\"9\" />\r\n          </h2>\r\n          {proposalCallTexts.map((proposalCallText, i) => {\r\n            return (\r\n              <div key={'proposalCallText' + i}>\r\n                <strong>Call #{i + 1}</strong> -{' '}\r\n                <span\r\n                  style={{ whiteSpace: 'pre-line' }}\r\n                  dangerouslySetInnerHTML={{ __html: proposalCallText }}\r\n                />\r\n                {i < proposalCallTexts.length - 1 ? <hr /> : <div />}\r\n              </div>\r\n            );\r\n          })}\r\n        </ProposalInfoBox>\r\n        <ProposalInfoBox style={{ marginTop: '15px' }}>\r\n          <h1 style={{ margin: '0px' }}> History </h1>\r\n          {proposalEvents.history.map((historyEvent, i) => {\r\n            return (\r\n              <div\r\n                key={'proposalHistoryEvent' + i}\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  padding: '4px 0px',\r\n                  borderBottom:\r\n                    i < proposalEvents.history.length - 1\r\n                      ? ' 1px --medium-gray'\r\n                      : '',\r\n                }}\r\n              >\r\n                <span> {historyEvent.text} </span>\r\n                <BlockchainLink\r\n                  type=\"transaction\"\r\n                  size=\"short\"\r\n                  text={historyEvent.event.tx}\r\n                  onlyIcon\r\n                />\r\n                {i < proposalEvents.history.length - 1 ? <hr /> : <div />}\r\n              </div>\r\n            );\r\n          })}\r\n        </ProposalInfoBox>\r\n      </ProposalInfoSection>\r\n      <InfoSidebarBox>\r\n        <h2 style={{ margin: '10px 0px 0px 0px', textAlign: 'center' }}>\r\n          {status} <Question question=\"3\" />\r\n        </h2>\r\n        <SidebarRow style={{ margin: '0px 10px', flexDirection: 'column' }}>\r\n          {boostTime.toNumber() > moment().unix() && (\r\n            <span className=\"timeText\">\r\n              Boost in <Countdown date={boostTime.toNumber() * 1000} />{' '}\r\n            </span>\r\n          )}\r\n          {finishTime.toNumber() > moment().unix() && (\r\n            <span className=\"timeText\">\r\n              Finish in{' '}\r\n              <Countdown\r\n                autoStart={pendingAction === 1 && !autoBoost ? false : true}\r\n                date={finishTime.toNumber() * 1000}\r\n              />\r\n              {pendingAction === 1 && !autoBoost && ' after boost'}\r\n            </span>\r\n          )}\r\n          {status === 'Pending Execution' &&\r\n            executionTimeoutTime.toNumber() > 0 && (\r\n              <span className=\"timeText\">\r\n                {' '}\r\n                Execution timeout in{' '}\r\n                <Countdown date={executionTimeoutTime.toNumber() * 1000} />{' '}\r\n              </span>\r\n            )}\r\n        </SidebarRow>\r\n        <SidebarRow style={{ flexDirection: 'column', alignItems: 'center' }}>\r\n          {pendingAction === 1 ? (\r\n            <ActionButton color=\"blue\" onClick={executeProposal}>\r\n              <FiFastForward /> Boost{' '}\r\n            </ActionButton>\r\n          ) : pendingAction === 2 ? (\r\n            <ActionButton color=\"blue\" onClick={executeProposal}>\r\n              <FiPlayCircle /> Execute{' '}\r\n            </ActionButton>\r\n          ) : pendingAction === 3 ? (\r\n            <ActionButton color=\"blue\" onClick={executeProposal}>\r\n              <FiPlayCircle /> Finish{' '}\r\n            </ActionButton>\r\n          ) : pendingAction === 4 ? (\r\n            <ActionButton color=\"blue\" onClick={redeemBeneficiary}>\r\n              <FiPlayCircle /> Redeem 4 Beneficiary{' '}\r\n            </ActionButton>\r\n          ) : (\r\n            pendingAction === 5 && (\r\n              <ActionButton color=\"blue\" onClick={executeMulticall}>\r\n                <FiPlayCircle /> Execute Multicall{' '}\r\n              </ActionButton>\r\n            )\r\n          )}\r\n        </SidebarRow>\r\n\r\n        <SidebarDivider />\r\n\r\n        <SidebarRow\r\n          style={{\r\n            margin: '0px 10px',\r\n            padding: '10px 0px',\r\n            flexDirection: 'column',\r\n          }}\r\n        >\r\n          <span style={{ display: 'flex', height: '17px ' }}>\r\n            <strong>Proposer</strong>{' '}\r\n            <small>\r\n              <BlockchainLink type=\"user\" text={proposal.proposer} toCopy />\r\n            </small>\r\n          </span>\r\n          <span>\r\n            {' '}\r\n            <strong>Scheme</strong> <small>{scheme.name}</small>\r\n          </span>\r\n          <span>\r\n            <strong>State in Voting Machine </strong>\r\n            <small>\r\n              {VotingMachineProposalState[proposal.stateInVotingMachine]}\r\n            </small>\r\n          </span>\r\n          <span>\r\n            <strong>State in Scheme </strong>\r\n            <small>{WalletSchemeProposalState[proposal.stateInScheme]}</small>\r\n          </span>\r\n          <span>\r\n            {' '}\r\n            <strong>Submitted Date</strong>{' '}\r\n            <small>\r\n              {moment\r\n                .unix(proposal.submittedTime.toNumber())\r\n                .format('MMMM Do YYYY, h:mm:ss')}\r\n            </small>{' '}\r\n          </span>\r\n          <span>\r\n            {' '}\r\n            <strong>Boost Date</strong>{' '}\r\n            <small>\r\n              {boostTime.toNumber() > 0\r\n                ? moment\r\n                    .unix(boostTime.toNumber())\r\n                    .format('MMMM Do YYYY, h:mm:ss')\r\n                : '-'}\r\n            </small>{' '}\r\n          </span>\r\n          <span>\r\n            {' '}\r\n            <strong>Finish Date</strong>{' '}\r\n            <small>\r\n              {moment\r\n                .unix(finishTime.toNumber())\r\n                .format('MMMM Do YYYY, h:mm:ss')}\r\n            </small>{' '}\r\n          </span>\r\n\r\n          {boostedVoteRequiredPercentage > 0 ? (\r\n            <span>\r\n              {' '}\r\n              <strong> Required Boosted Vote: </strong>{' '}\r\n              <small>{boostedVoteRequiredPercentage}%</small>{' '}\r\n            </span>\r\n          ) : (\r\n            <div />\r\n          )}\r\n        </SidebarRow>\r\n\r\n        <SidebarDivider />\r\n\r\n        <SidebarRow>\r\n          <strong>\r\n            Votes <Question question=\"4\" />\r\n          </strong>\r\n        </SidebarRow>\r\n        <SidebarRow style={{ margin: '0px 10px' }}>\r\n          <span style={{ width: '50%', textAlign: 'center', color: 'green' }}>\r\n            <AmountBadge color=\"green\">{positiveVotesCount}</AmountBadge>\r\n            {`${positiveVotes}%`}\r\n\r\n            <br />\r\n            {proposalEvents.votes &&\r\n              proposalEvents.votes.map(function (voteEvent, i) {\r\n                if (voteEvent.vote.toString() === '1')\r\n                  return (\r\n                    <small\r\n                      color=\"green\"\r\n                      key={`voteUp${i}`}\r\n                      style={{ display: 'flex', alignItems: 'center' }}\r\n                    >\r\n                      <BlockchainLink\r\n                        size=\"short\"\r\n                        type=\"user\"\r\n                        text={voteEvent.voter}\r\n                      />\r\n                      {bnum(voteEvent.amount)\r\n                        .times('100')\r\n                        .div(totalRepAtProposalCreation)\r\n                        .toFixed(2)}{' '}\r\n                      %\r\n                    </small>\r\n                  );\r\n                else return undefined;\r\n              })}\r\n          </span>\r\n          <span style={{ width: '50%', textAlign: 'center', color: 'red' }}>\r\n            {`${negativeVotes}%`}\r\n            <AmountBadge color=\"red\">{negativeVotesCount}</AmountBadge>\r\n            <br />\r\n            {proposalEvents &&\r\n              proposalEvents.votes.map(function (voteEvent, i) {\r\n                if (voteEvent.vote.toString() === '2')\r\n                  return (\r\n                    <small\r\n                      color=\"red\"\r\n                      key={`voteDown${i}`}\r\n                      style={{ display: 'flex', alignItems: 'center' }}\r\n                    >\r\n                      <BlockchainLink\r\n                        size=\"short\"\r\n                        type=\"user\"\r\n                        text={voteEvent.voter}\r\n                      />\r\n                      {bnum(voteEvent.amount)\r\n                        .times('100')\r\n                        .div(totalRepAtProposalCreation)\r\n                        .toNumber()\r\n                        .toFixed(2)}{' '}\r\n                      %\r\n                    </small>\r\n                  );\r\n                else return undefined;\r\n              })}\r\n          </span>\r\n        </SidebarRow>\r\n\r\n        {Number(repPercentageAtCreation) > 0 ? (\r\n          <small>{repPercentageAtCreation} % REP at proposal creation</small>\r\n        ) : (\r\n          <div />\r\n        )}\r\n\r\n        {(proposal.stateInVotingMachine === 3 ||\r\n          proposal.stateInVotingMachine === 4) &&\r\n        votingParameters.votersReputationLossRatio.toNumber() > 0 &&\r\n        finishTime.toNumber() > 0 ? (\r\n          <small>\r\n            Voter REP Loss Ratio:{' '}\r\n            {votingParameters.votersReputationLossRatio.toString()}%\r\n          </small>\r\n        ) : (\r\n          <div />\r\n        )}\r\n\r\n        {!finishTimeReached &&\r\n        votedAmount.toNumber() === 0 &&\r\n        Number(repPercentageAtCreation) > 0 &&\r\n        proposal.stateInVotingMachine >= 3 ? (\r\n          <SidebarRow>\r\n            <ConfirmVoteModal\r\n              voteDecision={decision}\r\n              toAdd={votePercentage}\r\n              positive={parseFloat(positiveVotes)}\r\n              negative={parseFloat(negativeVotes)}\r\n              onConfirm={submitVote}\r\n              onCancel={() => setDecision(null)}\r\n            />\r\n            <AmountInput\r\n              type=\"number\"\r\n              placeholder=\"REP\"\r\n              name=\"votePercentage\"\r\n              max={repPercentageAtCreation}\r\n              value={votePercentage}\r\n              min=\"0\"\r\n              step={\r\n                votePercentage > 10\r\n                  ? '1'\r\n                  : votePercentage > 1\r\n                  ? '0.01'\r\n                  : votePercentage > 0.1\r\n                  ? '0.001'\r\n                  : '0.00001'\r\n              }\r\n              id=\"votePercentage\"\r\n              onChange={onVoteValueChange}\r\n              style={{ flex: 2 }}\r\n            />\r\n            <ActionButton\r\n              style={{ flex: 1, maxWidth: '20px', textAlign: 'center' }}\r\n              color=\"green\"\r\n              onClick={() => setDecision(1)}\r\n            >\r\n              <FiThumbsUp />\r\n            </ActionButton>\r\n            <ActionButton\r\n              style={{ flex: 1, maxWidth: '20px', textAlign: 'center' }}\r\n              color=\"red\"\r\n              onClick={() => setDecision(2)}\r\n            >\r\n              <FiThumbsDown />\r\n            </ActionButton>\r\n          </SidebarRow>\r\n        ) : votedAmount.toNumber() !== 0 ? (\r\n          <SidebarRow>\r\n            Already voted {votedAmount.toNumber() > 0 ? 'for' : 'against'} with{' '}\r\n            {votedAmount\r\n              .times('100')\r\n              .div(totalRepAtProposalCreation)\r\n              .toFixed(2)}{' '}\r\n            % REP\r\n          </SidebarRow>\r\n        ) : (\r\n          <div />\r\n        )}\r\n\r\n        <SidebarDivider />\r\n\r\n        <SidebarRow>\r\n          <strong>\r\n            Stakes <Question question=\"5\" />\r\n          </strong>\r\n        </SidebarRow>\r\n        <SidebarRow style={{ margin: '0px 10px' }}>\r\n          <span style={{ width: '50%', textAlign: 'center', color: 'green' }}>\r\n            <AmountBadge color=\"green\">{positiveStakesCount}</AmountBadge>\r\n            {formatBalance(proposal.positiveStakes).toString()}{' '}\r\n            {votingMachineTokenName}\r\n            <br />\r\n            {proposalEvents &&\r\n              proposalEvents.stakes.map(function (stakeEvent, i) {\r\n                if (stakeEvent.vote.toString() === '1')\r\n                  return (\r\n                    <small\r\n                      color=\"green\"\r\n                      key={`stakeUp${i}`}\r\n                      style={{ display: 'flex', alignItems: 'center' }}\r\n                    >\r\n                      <BlockchainLink\r\n                        size=\"short\"\r\n                        type=\"user\"\r\n                        text={stakeEvent.staker}\r\n                      />\r\n                      {formatBalance(bnum(stakeEvent.amount)).toString()}{' '}\r\n                      {votingMachineTokenName}\r\n                    </small>\r\n                  );\r\n                else return undefined;\r\n              })}\r\n          </span>\r\n          <span style={{ width: '50%', textAlign: 'center', color: 'red' }}>\r\n            {formatBalance(proposal.negativeStakes).toString()}{' '}\r\n            {votingMachineTokenName}\r\n            <AmountBadge color=\"red\">{negativeStakesCount}</AmountBadge>\r\n            <br />\r\n            {proposalEvents &&\r\n              proposalEvents.stakes.map(function (stakeEvent, i) {\r\n                if (stakeEvent.vote.toString() === '2')\r\n                  return (\r\n                    <small\r\n                      color=\"red\"\r\n                      key={`stakeDown${i}`}\r\n                      style={{ display: 'flex', alignItems: 'center' }}\r\n                    >\r\n                      <BlockchainLink\r\n                        size=\"short\"\r\n                        type=\"user\"\r\n                        text={stakeEvent.staker}\r\n                      />\r\n                      {formatBalance(bnum(stakeEvent.amount)).toString()}{' '}\r\n                      {votingMachineTokenName}\r\n                    </small>\r\n                  );\r\n                else return undefined;\r\n              })}\r\n          </span>\r\n        </SidebarRow>\r\n\r\n        {stakedAmount.toNumber() > 0 ? (\r\n          <SidebarRow>\r\n            Already staked {stakedAmount.toNumber() > 0 ? 'for' : 'against'}{' '}\r\n            with {formatBalance(stakedAmount).toString()}{' '}\r\n            {votingMachineTokenName}\r\n          </SidebarRow>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n\r\n        {!finishTimeReached &&\r\n        (proposal.stateInVotingMachine === 3 ||\r\n          proposal.stateInVotingMachine === 4) &&\r\n        votingMachineTokenApproved.toString() === '0' ? (\r\n          <SidebarRow>\r\n            <small>Approve {votingMachineTokenName} to stake</small>\r\n            <ActionButton\r\n              color=\"blue\"\r\n              onClick={() => approveVotingMachineToken()}\r\n            >\r\n              Approve {votingMachineTokenName}\r\n            </ActionButton>\r\n          </SidebarRow>\r\n        ) : !finishTimeReached &&\r\n          (proposal.stateInVotingMachine === 3 ||\r\n            proposal.stateInVotingMachine === 4) ? (\r\n          <div>\r\n            {Number(recommendedStakeToBoost) > 0 ? (\r\n              <small>\r\n                Stake ~\r\n                {formatBalance(\r\n                  recommendedStakeToBoost,\r\n                  18,\r\n                  1,\r\n                  false\r\n                ).toString()}{' '}\r\n                {votingMachineTokenName} to boost\r\n              </small>\r\n            ) : (\r\n              <span />\r\n            )}\r\n            {Number(recommendedStakeToUnBoost) > 0 ? (\r\n              <small>\r\n                Stake ~\r\n                {formatBalance(\r\n                  recommendedStakeToUnBoost,\r\n                  18,\r\n                  1,\r\n                  false\r\n                ).toString()}{' '}\r\n                {votingMachineTokenName} to unboost\r\n              </small>\r\n            ) : (\r\n              <span />\r\n            )}\r\n            <SidebarRow>\r\n              <AmountInput\r\n                type=\"number\"\r\n                placeholder={votingMachineTokenName}\r\n                name=\"stakeAmount\"\r\n                value={stakeAmount}\r\n                id=\"stakeAmount\"\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                onChange={onStakeAmountChange}\r\n                style={{ flex: 2 }}\r\n              />\r\n              <ActionButton\r\n                style={{ flex: 1, maxWidth: '20px', textAlign: 'center' }}\r\n                color=\"green\"\r\n                onClick={() => submitStake(1)}\r\n              >\r\n                <FiThumbsUp />\r\n              </ActionButton>\r\n              <ActionButton\r\n                style={{ flex: 1, maxWidth: '20px', textAlign: 'center' }}\r\n                color=\"red\"\r\n                onClick={() => submitStake(2)}\r\n              >\r\n                <FiThumbsDown />\r\n              </ActionButton>\r\n            </SidebarRow>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n\r\n        {proposal.stateInVotingMachine < 3 &&\r\n        (redeemsLeft.rep.indexOf(proposalId) > -1 ||\r\n          redeemsLeft.stake.indexOf(proposalId) > -1) ? (\r\n          <SidebarRow\r\n            style={{\r\n              borderTop: '1px solid gray',\r\n              margin: '0px 10px',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <ActionButton color=\"blue\" onClick={() => redeem()}>\r\n              Redeem\r\n            </ActionButton>\r\n          </SidebarRow>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n\r\n        {proposal.stateInVotingMachine < 3 &&\r\n        redeemsLeft.bounty.indexOf(proposalId) > -1 ? (\r\n          <SidebarRow\r\n            style={{\r\n              borderTop: '1px solid gray',\r\n              margin: '0px 10px',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <ActionButton color=\"blue\" onClick={() => redeemDaoBounty()}>\r\n              Redeem Stake Bounty\r\n            </ActionButton>\r\n          </SidebarRow>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </InfoSidebarBox>\r\n    </ProposalInformationWrapper>\r\n  );\r\n});\r\n\r\nexport default ProposalPage;\r\n","import styled from 'styled-components';\r\nimport { observer } from 'mobx-react';\r\nimport { useContext } from '../contexts';\r\nimport BlockchainLink from '../components/common/BlockchainLink';\r\nimport {\r\n  bnum,\r\n  parseCamelCase,\r\n  ZERO_ADDRESS,\r\n  formatCurrency,\r\n  formatBalance,\r\n} from '../utils';\r\nimport { NETWORK_ASSET_SYMBOL } from '../utils';\r\n\r\nconst FinanceInfoWrapper = styled.div`\r\n  background: white;\r\n  padding: 0px 10px;\r\n  font-weight: 400;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  color: var(--dark-text-gray);\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst FinanceTableHeaderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  color: var(--light-text-gray);\r\n  padding: 20px 40px 8px 24px;\r\n  font-size: 14px;\r\n  text-align: center;\r\n`;\r\n\r\nconst TableHeader = styled.div`\r\n  width: ${props => props.width};\r\n  text-align: ${props => props.align};\r\n`;\r\n\r\nconst TableRowsWrapper = styled.div`\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst TableRow = styled.div`\r\n  font-size: 16px;\r\n  line-height: 18px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid var(--line-gray);\r\n  padding: 16px 24px;\r\n  color: var(--dark-text-gray);\r\n  text-align: right;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TableCell = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: ${props => props.align};\r\n  color: ${props => props.color};\r\n  width: ${props => props.width};\r\n  font-weight: ${props => props.weight};\r\n  white-space: ${props => (props.wrapText ? 'nowrap' : 'inherit')};\r\n  overflow: ${props => (props.wrapText ? 'hidden' : 'inherit')};\r\n  text-overflow: ${props => (props.wrapText ? 'ellipsis' : 'inherit')};\r\n`;\r\n\r\nconst FinanceInformation = observer(() => {\r\n  const {\r\n    context: { daoStore, configStore, coingeckoService },\r\n  } = useContext();\r\n\r\n  const daoInfo = daoStore.getDaoInfo();\r\n  const schemes = daoStore.getAllSchemes();\r\n  const prices = coingeckoService.getPrices();\r\n  const networkAssetSymbol =\r\n    NETWORK_ASSET_SYMBOL[configStore.getActiveChainName()];\r\n\r\n  let assets = {\r\n    total: [\r\n      {\r\n        address: ZERO_ADDRESS,\r\n        name: networkAssetSymbol,\r\n        amount: bnum(daoInfo.ethBalance),\r\n        decimals: 18,\r\n      },\r\n    ],\r\n    avatar: [\r\n      {\r\n        address: ZERO_ADDRESS,\r\n        name: networkAssetSymbol,\r\n        amount: bnum(daoInfo.ethBalance),\r\n        decimals: 18,\r\n      },\r\n    ],\r\n  };\r\n  Object.keys(daoInfo.tokenBalances).map(tokenAddress => {\r\n    const tokenData = configStore.getTokenData(tokenAddress);\r\n    assets.avatar.push({\r\n      address: tokenAddress,\r\n      name: tokenData.name,\r\n      amount: bnum(daoInfo.tokenBalances[tokenAddress]),\r\n      decimals: tokenData.decimals,\r\n    });\r\n    assets.total.push({\r\n      address: tokenAddress,\r\n      name: tokenData.name,\r\n      amount: bnum(daoInfo.tokenBalances[tokenAddress]),\r\n      decimals: tokenData.decimals,\r\n    });\r\n  });\r\n\r\n  schemes.map(scheme => {\r\n    if (scheme.controllerAddress !== ZERO_ADDRESS) return;\r\n\r\n    const tokenBalances = scheme.tokenBalances;\r\n    if (!assets[scheme.name])\r\n      assets[scheme.name] = [\r\n        {\r\n          address: ZERO_ADDRESS,\r\n          name: networkAssetSymbol,\r\n          amount: bnum(scheme.ethBalance),\r\n          decimals: 18,\r\n        },\r\n      ];\r\n\r\n    Object.keys(tokenBalances).map(tokenAddress => {\r\n      const tokenData = configStore.getTokenData(tokenAddress);\r\n\r\n      assets[scheme.name].push({\r\n        address: tokenAddress,\r\n        name: tokenData.name,\r\n        amount: bnum(tokenBalances[tokenAddress]),\r\n        decimals: tokenData.decimals,\r\n      });\r\n      const indexOfAssetInTotal = assets.total.findIndex(\r\n        asset => asset.address === tokenAddress\r\n      );\r\n      if (indexOfAssetInTotal > -1) {\r\n        assets.total[indexOfAssetInTotal].amount = assets.total[\r\n          indexOfAssetInTotal\r\n        ].amount.plus(bnum(tokenBalances[tokenAddress]));\r\n      } else {\r\n        assets.total.push({\r\n          address: tokenAddress,\r\n          name: tokenData.name,\r\n          amount: bnum(tokenBalances[tokenAddress]),\r\n          decimals: tokenData.decimals,\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  return (\r\n    <FinanceInfoWrapper>\r\n      {Object.keys(assets).map((assetHolder, i) => {\r\n        const assetsOfHolder = assets[assetHolder];\r\n        return (\r\n          <div style={{ width: i > 0 ? '50%' : '100%' }}>\r\n            <h2 style={{ textAlign: 'center' }}>\r\n              {parseCamelCase(assetHolder)}\r\n            </h2>\r\n            <FinanceTableHeaderWrapper>\r\n              <TableHeader width=\"33%\" align=\"center\">\r\n                {' '}\r\n                Asset{' '}\r\n              </TableHeader>\r\n              <TableHeader width=\"34%\" align=\"center\">\r\n                {' '}\r\n                Balance{' '}\r\n              </TableHeader>\r\n              <TableHeader width=\"33%\" align=\"center\">\r\n                {' '}\r\n                USD Value{' '}\r\n              </TableHeader>\r\n            </FinanceTableHeaderWrapper>\r\n            <TableRowsWrapper>\r\n              {assetsOfHolder.map((asset, i) => {\r\n                if (\r\n                  asset &&\r\n                  Number(formatBalance(asset.amount, asset.decimals, 2)) > 0\r\n                ) {\r\n                  return (\r\n                    <TableRow key={`asset${i}`}>\r\n                      <TableCell width=\"33%\" align=\"center\" weight=\"500\">\r\n                        {asset.name}{' '}\r\n                        <BlockchainLink\r\n                          size=\"long\"\r\n                          type=\"address\"\r\n                          text={asset.address}\r\n                          onlyIcon\r\n                          toCopy\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell width=\"34%\" align=\"center\">\r\n                        {formatBalance(\r\n                          asset.amount,\r\n                          asset.decimals,\r\n                          2\r\n                        ).toString()}\r\n                      </TableCell>\r\n                      <TableCell width=\"33%\" align=\"center\">\r\n                        {prices[asset.address] && prices[asset.address].usd\r\n                          ? formatCurrency(\r\n                              bnum(\r\n                                Number(\r\n                                  formatBalance(asset.amount, asset.decimals, 2)\r\n                                ) * prices[asset.address].usd\r\n                              )\r\n                            )\r\n                          : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                } else {\r\n                  return <div key={`asset${i}`} />;\r\n                }\r\n              })}\r\n            </TableRowsWrapper>\r\n          </div>\r\n        );\r\n      })}\r\n    </FinanceInfoWrapper>\r\n  );\r\n});\r\n\r\nexport default FinanceInformation;\r\n","import styled from 'styled-components';\r\nimport { observer } from 'mobx-react';\r\nimport { useContext } from '../contexts';\r\nimport BlockchainLink from '../components/common/BlockchainLink';\r\nimport Question from '../components/common/Question';\r\nimport { bnum } from '../utils';\r\nimport moment from 'moment';\r\n\r\nconst SchemesInformationWrapper = styled.div`\r\n  width: 100%;\r\n  background: white;\r\n  font-weight: 400;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ProposalTableHeaderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  color: var(--dark-text-gray);\r\n  padding: 20px 40px 8px 24px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n`;\r\n\r\nconst TableHeader = styled.div`\r\n  width: ${props => props.width || '25%'};\r\n  text-align: ${props => props.align};\r\n  align-items: center;\r\n`;\r\n\r\nconst TableRowsWrapper = styled.div`\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst TableRow = styled.div`\r\n  font-size: 16px;\r\n  line-height: 18px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid var(--line-gray);\r\n  padding: 16px 24px;\r\n  color: var(--dark-text-gray);\r\n  text-align: right;\r\n`;\r\n\r\nconst TableCell = styled.div`\r\n  a {\r\n    text-decoration: none;\r\n    width: 100%;\r\n\r\n    &:hover {\r\n      color: var(--turquois-text-onHover);\r\n    }\r\n  }\r\n  color: ${props => props.color};\r\n  width: ${props => props.width || '25%'};\r\n  text-align: ${props => props.align};\r\n  font-weight: ${props => props.weight};\r\n  white-space: ${props => (props.wrapText ? 'nowrap' : 'inherit')};\r\n  overflow: ${props => (props.wrapText ? 'hidden' : 'inherit')};\r\n  text-overflow: ${props => (props.wrapText ? 'ellipsis' : 'inherit')};\r\n`;\r\n\r\nconst SchemesInformation = observer(() => {\r\n  const {\r\n    context: { providerStore, daoStore },\r\n  } = useContext();\r\n  const { library } = providerStore.getActiveWeb3React();\r\n\r\n  const schemes = daoStore.getAllSchemes();\r\n  return (\r\n    <SchemesInformationWrapper>\r\n      <ProposalTableHeaderWrapper>\r\n        <TableHeader width=\"15%\" align=\"left\">\r\n          {' '}\r\n          Name{' '}\r\n        </TableHeader>\r\n        <TableHeader width=\"40%\" align=\"center\">\r\n          {' '}\r\n          Configuration <Question question=\"9\" />{' '}\r\n        </TableHeader>\r\n        <TableHeader width=\"25%\" align=\"center\">\r\n          {' '}\r\n          Permissions <Question question=\"9\" />{' '}\r\n        </TableHeader>\r\n        <TableHeader\r\n          width=\"20%\"\r\n          align=\"center\"\r\n          style={{ display: 'flex', justifyContent: 'space-between' }}\r\n        >\r\n          <span>Boosted</span> - <span>Active</span> - <span>Total</span>\r\n        </TableHeader>\r\n      </ProposalTableHeaderWrapper>\r\n      <TableRowsWrapper>\r\n        {schemes.map((scheme, i) => {\r\n          const schemeProposals = daoStore.getSchemeProposals(scheme.address);\r\n          const votingMachineParameters = daoStore.getVotingParametersOfScheme(\r\n            scheme.address\r\n          );\r\n          if (votingMachineParameters)\r\n            return (\r\n              <div key={'scheme' + i}>\r\n                <TableRow>\r\n                  <TableCell\r\n                    width=\"15%\"\r\n                    align=\"left\"\r\n                    weight=\"500\"\r\n                    wrapText=\"true\"\r\n                  >\r\n                    {scheme.name}\r\n                    <br />\r\n                    <BlockchainLink size=\"short\" text={scheme.address} toCopy />\r\n                  </TableCell>\r\n                  <TableCell width=\"40%\" align=\"center\">\r\n                    <small>Params Hash: {scheme.paramsHash}</small>\r\n                    <br />\r\n                    <small>\r\n                      Queued Proposal Period:{' '}\r\n                      {moment\r\n                        .duration(\r\n                          votingMachineParameters.queuedVotePeriodLimit.toString(),\r\n                          'seconds'\r\n                        )\r\n                        .humanize()}\r\n                    </small>\r\n                    <br />\r\n                    <small>\r\n                      Boosted Proposal Period:{' '}\r\n                      {moment\r\n                        .duration(\r\n                          votingMachineParameters.boostedVotePeriodLimit.toString(),\r\n                          'seconds'\r\n                        )\r\n                        .humanize()}\r\n                    </small>\r\n                    <br />\r\n                    <small>\r\n                      PreBoosted Proposal Period:{' '}\r\n                      {moment\r\n                        .duration(\r\n                          votingMachineParameters.preBoostedVotePeriodLimit.toString(),\r\n                          'seconds'\r\n                        )\r\n                        .humanize()}\r\n                    </small>\r\n                    <br />\r\n                    <small>\r\n                      Quiet Ending Period:{' '}\r\n                      {moment\r\n                        .duration(\r\n                          votingMachineParameters.quietEndingPeriod.toString(),\r\n                          'seconds'\r\n                        )\r\n                        .humanize()}\r\n                    </small>\r\n                    <br />\r\n                    {scheme.type === 'WalletScheme' ? (\r\n                      <small>\r\n                        Max time for execution:{' '}\r\n                        {moment\r\n                          .duration(\r\n                            scheme.maxSecondsForExecution.toString(),\r\n                            'seconds'\r\n                          )\r\n                          .humanize()}\r\n                        <br />\r\n                      </small>\r\n                    ) : (\r\n                      <div />\r\n                    )}\r\n                    {scheme.type === 'WalletScheme' ? (\r\n                      <small>\r\n                        Max REP % to change in proposal:{' '}\r\n                        {scheme.maxRepPercentageChange.toString()} %<br />\r\n                      </small>\r\n                    ) : (\r\n                      <div />\r\n                    )}\r\n                    {scheme.type === 'WalletScheme' ? (\r\n                      <small>\r\n                        Required Percentage for boosted approval:{' '}\r\n                        {bnum(scheme.boostedVoteRequiredPercentage)\r\n                          .div('100')\r\n                          .toString()}{' '}\r\n                        %<br />\r\n                      </small>\r\n                    ) : (\r\n                      <div />\r\n                    )}\r\n                    <small>\r\n                      Rep Proposing Reward:{' '}\r\n                      {Number(\r\n                        library.utils.fromWei(\r\n                          votingMachineParameters.proposingRepReward.toString()\r\n                        )\r\n                      ).toFixed(2)}{' '}\r\n                      REP\r\n                    </small>\r\n                    <br />\r\n                    <small>\r\n                      Reputation Loss Ratio:{' '}\r\n                      {votingMachineParameters.votersReputationLossRatio.toString()}{' '}\r\n                      %\r\n                    </small>\r\n                    <br />\r\n                    <small>\r\n                      Minimum Dao Boost:{' '}\r\n                      {Number(\r\n                        library.utils.fromWei(\r\n                          votingMachineParameters.minimumDaoBounty.toString()\r\n                        )\r\n                      ).toFixed(2)}{' '}\r\n                      DXD\r\n                    </small>\r\n                    <br />\r\n                    <small>\r\n                      Proposal Boost Bounty Const:{' '}\r\n                      {votingMachineParameters.daoBountyConst.toString()}\r\n                    </small>\r\n                    <br />\r\n                    <small>\r\n                      Boost Threshold Constant:{' '}\r\n                      {votingMachineParameters.thresholdConst\r\n                        .div(10 ** 12)\r\n                        .toString()}\r\n                    </small>\r\n                    <br />\r\n                    <small>\r\n                      Boost Limit Exponent Value:{' '}\r\n                      {votingMachineParameters.limitExponentValue.toString()}\r\n                    </small>\r\n                  </TableCell>\r\n                  <TableCell width=\"25%\" align=\"center\" wrapText>\r\n                    <strong>Controller Permissions</strong>\r\n                    <br />\r\n                    <small>\r\n                      {scheme.permissions.canGenericCall ? 'Can' : 'Cant'} make\r\n                      generic call\r\n                    </small>\r\n                    <br />\r\n                    <small>\r\n                      {scheme.permissions.canUpgrade ? 'Can' : 'Cant'} upgrade\r\n                      controller\r\n                    </small>\r\n                    <br />\r\n                    <small>\r\n                      {scheme.permissions.canChangeConstraints ? 'Can' : 'Cant'}{' '}\r\n                      change constraints\r\n                    </small>\r\n                    <br />\r\n                    <small>\r\n                      {scheme.permissions.canRegisterSchemes ? 'Can' : 'Cant'}{' '}\r\n                      register schemes\r\n                    </small>\r\n                  </TableCell>\r\n\r\n                  <TableCell\r\n                    width=\"20%\"\r\n                    align=\"center\"\r\n                    style={{ display: 'flex', justifyContent: 'space-around' }}\r\n                  >\r\n                    <span>{scheme.boostedProposals}</span>-\r\n                    <span>\r\n                      {\r\n                        schemeProposals.filter(proposal => {\r\n                          return proposal.stateInVotingMachine > 2;\r\n                        }).length\r\n                      }\r\n                    </span>\r\n                    -\r\n                    <span>\r\n                      {scheme.proposalIds ? scheme.proposalIds.length : 0}\r\n                    </span>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </div>\r\n            );\r\n          else return <div />;\r\n        })}\r\n      </TableRowsWrapper>\r\n    </SchemesInformationWrapper>\r\n  );\r\n});\r\n\r\nexport default SchemesInformation;\r\n","import styled from 'styled-components';\r\nimport { observer } from 'mobx-react';\r\nimport { useContext } from '../contexts';\r\nimport BlockchainLink from '../components/common/BlockchainLink';\r\nimport { FaTrophy, FaMedal } from 'react-icons/fa';\r\nimport { bnum } from '../utils';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nconst GovernanceInfoWrapper = styled.div`\r\n  background: white;\r\n  padding: 0px 10px;\r\n  font-weight: 400;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  color: var(--dark-text-gray);\r\n`;\r\n\r\nconst InfoBox = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n  padding: 2px 5px;\r\n  margin: 10px 5px;\r\n  font-size: 25px;\r\n  font-weight: 300;\r\n  border-radius: 3px;\r\n  color: var(--activeButtonBackground);\r\n`;\r\n\r\nconst GovernanceTableHeaderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  color: var(--light-text-gray);\r\n  padding: 20px 40px 8px 24px;\r\n  font-size: 14px;\r\n  text-align: center;\r\n`;\r\n\r\nconst TableHeader = styled.div`\r\n  width: ${props => props.width};\r\n  text-align: ${props => props.align};\r\n`;\r\n\r\nconst TableRowsWrapper = styled.div`\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst TableRow = styled.div`\r\n  font-size: 16px;\r\n  line-height: 18px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid var(--line-gray);\r\n  padding: 16px 24px;\r\n  color: var(--dark-text-gray);\r\n  text-align: right;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TableCell = styled.div`\r\n  color: ${props => props.color};\r\n  width: ${props => props.width};\r\n  text-align: ${props => props.align};\r\n  font-weight: ${props => props.weight};\r\n  white-space: ${props => (props.wrapText ? 'nowrap' : 'inherit')};\r\n  overflow: ${props => (props.wrapText ? 'hidden' : 'inherit')};\r\n  text-overflow: ${props => (props.wrapText ? 'ellipsis' : 'inherit')};\r\n`;\r\n\r\nconst GovernanceInformation = observer(() => {\r\n  const {\r\n    context: { daoStore },\r\n  } = useContext();\r\n\r\n  const daoInfo = daoStore.getDaoInfo();\r\n  const governanceInfo = daoStore.getGovernanceInfo();\r\n\r\n  function toNumber(weiNumber) {\r\n    return bnum(weiNumber)\r\n      .div(10 ** 18)\r\n      .toFixed(0);\r\n  }\r\n  return (\r\n    <GovernanceInfoWrapper>\r\n      <h1 style={{ textAlign: 'center' }}>Stats</h1>\r\n      <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n        <InfoBox>{toNumber(daoInfo.totalRep)} REP</InfoBox>\r\n        <InfoBox>{governanceInfo.totalPositiveVotes} Positive Votes</InfoBox>\r\n        <InfoBox>{governanceInfo.totalNegativeVotes} Negative Votes</InfoBox>\r\n        <InfoBox>{governanceInfo.totalProposalsCreated} Proposals</InfoBox>\r\n      </div>\r\n\r\n      <h1 style={{ textAlign: 'center' }}>Reputation Charts</h1>\r\n      <div style={{ display: 'flex', flexDirection: 'row', width: '100%' }}>\r\n        <Chart\r\n          chartType=\"PieChart\"\r\n          loader={<div>Loading Chart</div>}\r\n          data={governanceInfo.rep}\r\n          options={{\r\n            legend: 'none',\r\n            pieSliceText: 'none',\r\n            pieStartAngle: 100,\r\n            title: 'Reputation Distribution',\r\n            sliceVisibilityThreshold: 0.001, // 0.1%\r\n          }}\r\n        />\r\n        <Chart\r\n          width=\"100%\"\r\n          chartType=\"LineChart\"\r\n          loader={<div>Loading Chart</div>}\r\n          data={governanceInfo.repEvents}\r\n          options={{\r\n            hAxis: { title: 'Block Number' },\r\n            vAxis: { title: 'Reputation' },\r\n            title: 'Reputation over Time',\r\n            legend: 'none',\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <h1 style={{ textAlign: 'center' }}>Governance Ranking</h1>\r\n\r\n      <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n        <InfoBox>\r\n          Create Proposal\r\n          <br />\r\n          <strong>1 to 30 Points</strong>\r\n        </InfoBox>\r\n        <InfoBox>\r\n          Vote Winning Option\r\n          <br />\r\n          <strong>3 Points</strong>\r\n        </InfoBox>\r\n        <InfoBox>\r\n          Vote Losing Option\r\n          <br />\r\n          <strong>1 Point</strong>\r\n        </InfoBox>\r\n        <InfoBox>\r\n          Stake Winning Option\r\n          <br />\r\n          <strong>1 Point</strong>\r\n        </InfoBox>\r\n      </div>\r\n      <GovernanceTableHeaderWrapper>\r\n        <TableHeader width=\"5%\" align=\"center\">\r\n          {' '}\r\n          #{' '}\r\n        </TableHeader>\r\n        <TableHeader width=\"35%\" align=\"center\">\r\n          {' '}\r\n          Address{' '}\r\n        </TableHeader>\r\n        <TableHeader width=\"15%\" align=\"center\">\r\n          {' '}\r\n          Proposals Created{' '}\r\n        </TableHeader>\r\n        <TableHeader width=\"15%\" align=\"center\">\r\n          {' '}\r\n          Voted{' '}\r\n        </TableHeader>\r\n        <TableHeader width=\"15%\" align=\"center\">\r\n          {' '}\r\n          Staked{' '}\r\n        </TableHeader>\r\n        <TableHeader width=\"15%\" align=\"center\">\r\n          {' '}\r\n          Score{' '}\r\n        </TableHeader>\r\n      </GovernanceTableHeaderWrapper>\r\n      <TableRowsWrapper>\r\n        {governanceInfo.ranking.map((user, i) => {\r\n          return (\r\n            <TableRow key={`user${i}`}>\r\n              <TableCell width=\"5%\" align=\"center\" weight=\"500\">\r\n                {' '}\r\n                {i + 1}\r\n                {i === 0 ? (\r\n                  <FaTrophy style={{ color: 'gold' }} />\r\n                ) : i === 1 ? (\r\n                  <FaTrophy style={{ color: 'silver' }} />\r\n                ) : i === 2 ? (\r\n                  <FaTrophy style={{ color: '#CD7F32' }} />\r\n                ) : i < 6 ? (\r\n                  <FaMedal style={{ color: 'gold' }} />\r\n                ) : i < 9 ? (\r\n                  <FaMedal style={{ color: 'silver' }} />\r\n                ) : i < 12 ? (\r\n                  <FaMedal style={{ color: '#CD7F32' }} />\r\n                ) : (\r\n                  <div />\r\n                )}\r\n              </TableCell>\r\n              <TableCell width=\"35%\" align=\"center\" weight=\"500\">\r\n                <BlockchainLink\r\n                  size=\"long\"\r\n                  type=\"address\"\r\n                  text={user.address}\r\n                  toCopy\r\n                />\r\n              </TableCell>\r\n              <TableCell width=\"15%\" align=\"center\">\r\n                {' '}\r\n                {user.proposals}{' '}\r\n              </TableCell>\r\n              <TableCell width=\"15%\" align=\"center\">\r\n                <span style={{ color: 'green' }}>{user.correctVotes} </span>-\r\n                <span style={{ color: 'red' }}> {user.wrongVotes}</span>\r\n              </TableCell>\r\n              <TableCell width=\"15%\" align=\"center\">\r\n                <span style={{ color: 'green' }}>{user.correctStakes} </span>-\r\n                <span style={{ color: 'red' }}> {user.wrongStakes}</span>\r\n              </TableCell>\r\n              <TableCell width=\"15%\" align=\"center\">\r\n                {' '}\r\n                {user.score.toFixed(0)}{' '}\r\n              </TableCell>\r\n            </TableRow>\r\n          );\r\n        })}\r\n      </TableRowsWrapper>\r\n    </GovernanceInfoWrapper>\r\n  );\r\n});\r\n\r\nexport default GovernanceInformation;\r\n","import styled from 'styled-components';\r\nimport { observer } from 'mobx-react';\r\nimport { useContext } from '../contexts';\r\nimport { FiX } from 'react-icons/fi';\r\n\r\nimport { NETWORK_ASSET_SYMBOL } from '../utils';\r\nimport {\r\n  ZERO_ADDRESS,\r\n  ERC20_TRANSFER_SIGNATURE,\r\n  ERC20_APPROVE_SIGNATURE,\r\n  ANY_ADDRESS,\r\n  ANY_FUNC_SIGNATURE,\r\n  timestampToDate,\r\n  bnum,\r\n} from '../utils';\r\n\r\nconst PermissionsInfoWrapper = styled.div`\r\n  background: white;\r\n  padding: 0px 10px;\r\n  font-weight: 400;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  color: var(--dark-text-gray);\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst TableHeaderWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  color: var(--light-text-gray);\r\n  padding: 20px 0px 8px 0px;\r\n  font-size: 14px;\r\n  text-align: center;\r\n`;\r\n\r\nconst TableHeader = styled.div`\r\n  width: ${props => props.width};\r\n  text-align: ${props => props.align};\r\n`;\r\n\r\nconst TableRowsWrapper = styled.div`\r\n  width: 100%;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst TableRow = styled.div`\r\n  font-size: 16px;\r\n  line-height: 18px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  overflow: hidden;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid var(--line-gray);\r\n  color: var(--dark-text-gray);\r\n  text-align: right;\r\n  cursor: pointer;\r\n  padding: 5px 0px;\r\n`;\r\n\r\nconst TableCell = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 0px 5px;\r\n  justify-content: ${props => props.align};\r\n  color: ${props => props.color};\r\n  width: ${props => props.width};\r\n  font-weight: ${props => props.weight};\r\n  white-space: ${props => (props.wrapText ? 'nowrap' : 'inherit')};\r\n  overflow: ${props => (props.wrapText ? 'hidden' : 'inherit')};\r\n  text-overflow: ${props => (props.wrapText ? 'ellipsis' : 'inherit')};\r\n`;\r\n\r\nconst PermissionsInformation = observer(() => {\r\n  const {\r\n    context: { daoStore, configStore, providerStore },\r\n  } = useContext();\r\n\r\n  const web3 = providerStore.getActiveWeb3React().library;\r\n  const schemes = daoStore.getAllSchemes();\r\n  const rawPermissions = daoStore.getCache().callPermissions;\r\n  const networkContracts = configStore.getNetworkContracts();\r\n  const tokens = configStore.getTokensOfNetwork();\r\n  const recommendedCalls = configStore.getRecommendedCalls();\r\n  let addressesNames = {};\r\n  let functionNames = {};\r\n  addressesNames[ZERO_ADDRESS] =\r\n    NETWORK_ASSET_SYMBOL[configStore.getActiveChainName()];\r\n  addressesNames[ANY_ADDRESS] = 'Any Address';\r\n  addressesNames[networkContracts.avatar] = 'Avatar';\r\n  addressesNames[networkContracts.controller] = 'Controller';\r\n  if (networkContracts.votingMachines.dxd)\r\n    addressesNames[networkContracts.votingMachines.dxd.address] =\r\n      'DXDVotingMachine';\r\n\r\n  functionNames[\r\n    web3.eth.abi.encodeFunctionSignature('mintTokens(uint256,address,address)')\r\n  ] = 'mintTokens(uint256,address,address)';\r\n  functionNames[\r\n    web3.eth.abi.encodeFunctionSignature('unregisterSelf(address)')\r\n  ] = 'unregisterSelf(address)';\r\n  functionNames[\r\n    web3.eth.abi.encodeFunctionSignature(\r\n      'addGlobalConstraint(address,bytes32,address)'\r\n    )\r\n  ] = 'addGlobalConstraint(address,bytes32,address)';\r\n  functionNames[\r\n    web3.eth.abi.encodeFunctionSignature(\r\n      'removeGlobalConstraint(address,address)'\r\n    )\r\n  ] = 'removeGlobalConstraint(address,address)';\r\n  functionNames[\r\n    web3.eth.abi.encodeFunctionSignature('upgradeController(address,address)')\r\n  ] = 'upgradeController(address,address)';\r\n  functionNames[\r\n    web3.eth.abi.encodeFunctionSignature('sendEther(uint256,address,address)')\r\n  ] = 'sendEther(uint256,address,address)';\r\n  functionNames[\r\n    web3.eth.abi.encodeFunctionSignature(\r\n      'externalTokenTransfer(address,address,uint256,address)'\r\n    )\r\n  ] = 'externalTokenTransfer(address,address,uint256,address)';\r\n  functionNames[\r\n    web3.eth.abi.encodeFunctionSignature(\r\n      'externalTokenTransferFrom(address,address,address,uint256,address)'\r\n    )\r\n  ] = 'externalTokenTransferFrom(address,address,address,uint256,address)';\r\n  functionNames[\r\n    web3.eth.abi.encodeFunctionSignature(\r\n      'externalTokenApproval(address,address,uint256,address)'\r\n    )\r\n  ] = 'externalTokenApproval(address,address,uint256,address)';\r\n  functionNames[\r\n    web3.eth.abi.encodeFunctionSignature('metaData(string,address)')\r\n  ] = 'metaData(string,address)';\r\n\r\n  functionNames[ERC20_TRANSFER_SIGNATURE] = 'ERC20 Transfer';\r\n  functionNames[ERC20_APPROVE_SIGNATURE] = 'ERC20 Approve';\r\n  recommendedCalls.map(recommendedCall => {\r\n    functionNames[\r\n      web3.eth.abi.encodeFunctionSignature(recommendedCall.functionName)\r\n    ] = recommendedCall.functionName;\r\n  });\r\n  schemes.map(scheme => {\r\n    addressesNames[scheme.address] = scheme.name;\r\n  });\r\n  tokens.map(token => {\r\n    addressesNames[token.address] = token.symbol;\r\n  });\r\n\r\n  const permissions = [];\r\n\r\n  for (const assetAddress in rawPermissions) {\r\n    for (const fromAddress in rawPermissions[assetAddress]) {\r\n      for (const toAddress in rawPermissions[assetAddress][fromAddress]) {\r\n        for (const functionSignature in rawPermissions[assetAddress][\r\n          fromAddress\r\n        ][toAddress]) {\r\n          const value =\r\n            rawPermissions[assetAddress][fromAddress][toAddress][\r\n              functionSignature\r\n            ].value.toString();\r\n          permissions.push({\r\n            asset: addressesNames[assetAddress] || assetAddress,\r\n            from: addressesNames[fromAddress] || fromAddress,\r\n            to: addressesNames[toAddress] || toAddress,\r\n            functionSignature:\r\n              functionSignature === ANY_FUNC_SIGNATURE\r\n                ? 'Any Function'\r\n                : functionSignature,\r\n            value:\r\n              value ===\r\n              '115792089237316195423570985008687907853269984665640564039457584007913129639935'\r\n                ? 'ANY Value'\r\n                : value,\r\n            fromTime:\r\n              rawPermissions[assetAddress][fromAddress][toAddress][\r\n                functionSignature\r\n              ].fromTime,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PermissionsInfoWrapper>\r\n      <TableHeaderWrapper>\r\n        <TableHeader width=\"10%\" align=\"left\">\r\n          {' '}\r\n          Asset{' '}\r\n        </TableHeader>\r\n        <TableHeader width=\"20%\" align=\"left\">\r\n          {' '}\r\n          From{' '}\r\n        </TableHeader>\r\n        <TableHeader width=\"20%\" align=\"left\">\r\n          {' '}\r\n          To{' '}\r\n        </TableHeader>\r\n        <TableHeader width=\"20%\" align=\"left\">\r\n          {' '}\r\n          Function{' '}\r\n        </TableHeader>\r\n        <TableHeader width=\"10%\" align=\"left\">\r\n          {' '}\r\n          Value{' '}\r\n        </TableHeader>\r\n        <TableHeader width=\"20%\" align=\"center\">\r\n          {' '}\r\n          From Time{' '}\r\n        </TableHeader>\r\n      </TableHeaderWrapper>\r\n      <TableRowsWrapper>\r\n        {permissions.map((permission, i) => {\r\n          return (\r\n            <TableRow key={`permission${i}`}>\r\n              <TableCell width=\"10%\" align=\"left\">\r\n                {permission.asset}\r\n              </TableCell>\r\n              <TableCell width=\"20%\" align=\"left\">\r\n                {permission.from}\r\n              </TableCell>\r\n              <TableCell width=\"20%\" align=\"left\">\r\n                {permission.to}\r\n              </TableCell>\r\n              <TableCell width=\"20%\" align=\"left\">\r\n                {functionNames[permission.functionSignature] ||\r\n                  permission.functionSignature}\r\n              </TableCell>\r\n              <TableCell width=\"10%\" align=\"left\">\r\n                {permission.value}\r\n              </TableCell>\r\n              <TableCell width=\"20%\" align=\"center\">\r\n                {permission.fromTime === 0 ? (\r\n                  <FiX />\r\n                ) : (\r\n                  timestampToDate(bnum(permission.fromTime))\r\n                )}\r\n              </TableCell>\r\n            </TableRow>\r\n          );\r\n        })}\r\n      </TableRowsWrapper>\r\n    </PermissionsInfoWrapper>\r\n  );\r\n});\r\n\r\nexport default PermissionsInformation;\r\n","import styled from 'styled-components';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useContext } from '../contexts';\r\nimport ActiveButton from '../components/common/ActiveButton';\r\nimport Box from '../components/common/Box';\r\n\r\nimport FinanceInformation from '../components/FinanceInformation';\r\nimport SchemesInformation from '../components/SchemesInformation';\r\nimport GovernanceInformation from '../components/GovernanceInformation';\r\nimport PermissionsInformation from '../components/PermissionsInformation';\r\n\r\nconst InfoPageWrapper = styled(Box)`\r\n  width: 100%;\r\n`;\r\n\r\nconst InfoNavigation = styled.div`\r\n  padding: 0px 10px 10px 10px;\r\n  color: var(--dark-text-gray);\r\n  border-bottom: 1px solid var(--line-gray);\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  letter-spacing: 1px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-direction: row;\r\n`;\r\nconst InfoPage = () => {\r\n  const {\r\n    context: { configStore },\r\n  } = useContext();\r\n  const networkName = configStore.getActiveChainName();\r\n  const searchPath = useLocation().search;\r\n  return (\r\n    <InfoPageWrapper>\r\n      <InfoNavigation>\r\n        <ActiveButton route={`/${networkName}/info?view=governance`}>\r\n          Governance\r\n        </ActiveButton>\r\n        <ActiveButton route={`/${networkName}/info?view=finance`}>\r\n          Finance\r\n        </ActiveButton>\r\n        <ActiveButton route={`/${networkName}/info?view=schemes`}>\r\n          Schemes\r\n        </ActiveButton>\r\n        <ActiveButton route={`/${networkName}/info?view=permissions`}>\r\n          Permissions\r\n        </ActiveButton>\r\n      </InfoNavigation>\r\n      <div>\r\n        {searchPath === `?view=schemes` ? (\r\n          <SchemesInformation />\r\n        ) : searchPath === `?view=governance` ? (\r\n          <GovernanceInformation />\r\n        ) : searchPath === `?view=permissions` ? (\r\n          <PermissionsInformation />\r\n        ) : (\r\n          <FinanceInformation />\r\n        )}\r\n      </div>\r\n    </InfoPageWrapper>\r\n  );\r\n};\r\n\r\nexport default InfoPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { observer } from 'mobx-react';\r\nimport { useContext } from '../contexts';\r\nimport ActiveButton from '../components/common/ActiveButton';\r\nimport Question from '../components/common/Question';\r\nimport { FiCheckCircle, FiX } from 'react-icons/fi';\r\nimport Box from '../components/common/Box';\r\nimport { useActiveWeb3React } from 'provider/providerHooks';\r\nimport { injected } from 'provider/connectors';\r\n\r\nconst Row = styled.div`\r\n  flex-direction: row;\r\n  flex: auto;\r\n  display: flex;\r\n  padding-top: 15px;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst InputBox = styled.input`\r\n  background-color: white;\r\n  border: 1px solid var(--medium-gray);\r\n  border-radius: 4px;\r\n  height: 34px;\r\n  letter-spacing: 1px;\r\n  font-weight: 500;\r\n  line-height: 32px;\r\n  text-align: left;\r\n  padding: 0px 10px;\r\n  margin: 5px;\r\n`;\r\n\r\nconst Dropdown = styled.select`\r\n  background-color: white;\r\n  border: 1px solid var(--medium-gray);\r\n  border-radius: 4px;\r\n  height: 34px;\r\n  letter-spacing: 1px;\r\n  font-weight: 500;\r\n  line-height: 32px;\r\n  text-align: left;\r\n  padding: 0px 10px;\r\n  margin: 5px;\r\n`;\r\n\r\nconst ConfigPage = observer(() => {\r\n  const {\r\n    context: {\r\n      configStore,\r\n      pinataService,\r\n      etherscanService,\r\n      infuraService,\r\n      alchemyService,\r\n      customRpcService,\r\n    },\r\n  } = useContext();\r\n  const { connector } = useActiveWeb3React();\r\n\r\n  const [etherscanApiStatus, setEtherscanApiStatus] = React.useState(\r\n    etherscanService.auth\r\n  );\r\n  const [pinataKeyStatus, setPinataKeyStatus] = React.useState(\r\n    pinataService.auth\r\n  );\r\n  const [infuraKeyStatus, setInfuraKeyStatus] = React.useState(\r\n    infuraService.auth\r\n  );\r\n  const [alchemyKeyStatus, setAlchemyKeyStatus] = React.useState(\r\n    alchemyService.auth\r\n  );\r\n  const [customRpcUrlStatus, setCustomRpcUrlStatus] = React.useState(\r\n    customRpcService.auth\r\n  );\r\n\r\n  const [localConfig, setLocalConfig] = React.useState(\r\n    configStore.getLocalConfig()\r\n  );\r\n  const [, forceUpdate] = React.useReducer(x => x + 1, 0);\r\n\r\n  function onApiKeyValueChange(value, key) {\r\n    localConfig[key] = value;\r\n    setLocalConfig(localConfig);\r\n    forceUpdate();\r\n  }\r\n\r\n  function saveConfig() {\r\n    configStore.setLocalConfig(localConfig);\r\n  }\r\n\r\n  async function testApis() {\r\n    await pinataService.isAuthenticated();\r\n    await etherscanService.isAuthenticated();\r\n    await infuraService.isAuthenticated();\r\n    await alchemyService.isAuthenticated();\r\n    await customRpcService.isAuthenticated();\r\n    setPinataKeyStatus(pinataService.auth);\r\n    setEtherscanApiStatus(etherscanService.auth);\r\n    setInfuraKeyStatus(infuraService.auth);\r\n    setAlchemyKeyStatus(alchemyService.auth);\r\n    setCustomRpcUrlStatus(customRpcService.auth);\r\n  }\r\n\r\n  async function pinDXvoteHashes() {\r\n    pinataService.updatePinList();\r\n  }\r\n\r\n  async function clearCache() {\r\n    localStorage.clear();\r\n    caches.delete(`dxvote-cache`);\r\n  }\r\n\r\n  return (\r\n    <Box style={{ alignItems: 'center' }}>\r\n      <h2>\r\n        API Keys <Question question=\"8\" />\r\n      </h2>\r\n      <Row style={{ maxWidth: '500px' }}>\r\n        <span style={{ width: '80px', height: '34px', padding: '10px 0px' }}>\r\n          Etherscan:\r\n        </span>\r\n        <InputBox\r\n          type=\"text\"\r\n          serviceName=\"etherscan\"\r\n          onChange={event =>\r\n            onApiKeyValueChange(event.target.value, 'etherscan')\r\n          }\r\n          value={localConfig.etherscan}\r\n          style={{ width: '100%' }}\r\n        ></InputBox>\r\n        <span style={{ height: '34px', padding: '10px 0px' }}>\r\n          {etherscanApiStatus ? <FiCheckCircle /> : <FiX />}\r\n        </span>\r\n      </Row>\r\n      <Row style={{ maxWidth: '500px' }}>\r\n        <span style={{ width: '80px', height: '34px', padding: '10px 0px' }}>\r\n          Pinata:\r\n        </span>\r\n        <InputBox\r\n          type=\"text\"\r\n          serviceName=\"pinata\"\r\n          onChange={event => onApiKeyValueChange(event.target.value, 'pinata')}\r\n          value={localConfig.pinata}\r\n          style={{ width: '100%' }}\r\n        ></InputBox>\r\n        <span style={{ height: '34px', padding: '10px 0px' }}>\r\n          {pinataKeyStatus ? <FiCheckCircle /> : <FiX />}\r\n        </span>\r\n      </Row>\r\n\r\n      {connector != injected && (\r\n        <>\r\n          <Row style={{ maxWidth: '500px' }}>\r\n            <span\r\n              style={{ width: '80px', height: '34px', padding: '10px 0px' }}\r\n            >\r\n              RPC:\r\n            </span>\r\n            <Dropdown\r\n              onChange={event =>\r\n                onApiKeyValueChange(event.target.value, 'rpcType')\r\n              }\r\n              value={localConfig.rpcType}\r\n              style={{ width: '100%' }}\r\n            >\r\n              <option value=\"\">Default</option>\r\n              <option value=\"infura\">Infura</option>\r\n              <option value=\"alchemy\">Alchemy</option>\r\n              <option value=\"custom\">Custom</option>\r\n            </Dropdown>\r\n          </Row>\r\n\r\n          {localConfig.rpcType === 'infura' && (\r\n            <Row style={{ maxWidth: '500px' }}>\r\n              <span\r\n                style={{ width: '80px', height: '34px', padding: '10px 0px' }}\r\n              >\r\n                Infura:\r\n              </span>\r\n              <InputBox\r\n                type=\"text\"\r\n                serviceName=\"infura\"\r\n                onChange={event =>\r\n                  onApiKeyValueChange(event.target.value, 'infura')\r\n                }\r\n                value={localConfig.infura}\r\n                style={{ width: '100%' }}\r\n              ></InputBox>\r\n              <span style={{ height: '34px', padding: '10px 0px' }}>\r\n                {infuraKeyStatus ? <FiCheckCircle /> : <FiX />}\r\n              </span>\r\n            </Row>\r\n          )}\r\n          {localConfig.rpcType === 'alchemy' && (\r\n            <Row style={{ maxWidth: '500px' }}>\r\n              <span\r\n                style={{ width: '80px', height: '34px', padding: '10px 0px' }}\r\n              >\r\n                Alchemy:\r\n              </span>\r\n              <InputBox\r\n                type=\"text\"\r\n                serviceName=\"alchemy\"\r\n                onChange={event =>\r\n                  onApiKeyValueChange(event.target.value, 'alchemy')\r\n                }\r\n                value={localConfig.alchemy}\r\n                style={{ width: '100%' }}\r\n              ></InputBox>\r\n              <span style={{ height: '34px', padding: '10px 0px' }}>\r\n                {alchemyKeyStatus ? <FiCheckCircle /> : <FiX />}\r\n              </span>\r\n            </Row>\r\n          )}\r\n          {localConfig.rpcType === 'custom' && (\r\n            <Row style={{ maxWidth: '500px' }}>\r\n              <span\r\n                style={{ width: '80px', height: '34px', padding: '10px 0px' }}\r\n              >\r\n                RPC URL:\r\n              </span>\r\n              <InputBox\r\n                type=\"text\"\r\n                serviceName=\"customRpcUrl\"\r\n                onChange={event =>\r\n                  onApiKeyValueChange(event.target.value, 'customRpcUrl')\r\n                }\r\n                value={localConfig.customRpcUrl}\r\n                style={{ width: '100%' }}\r\n              ></InputBox>\r\n              <span style={{ height: '34px', padding: '10px 0px' }}>\r\n                {customRpcUrlStatus ? <FiCheckCircle /> : <FiX />}\r\n              </span>\r\n            </Row>\r\n          )}\r\n        </>\r\n      )}\r\n      <Row style={{ maxWidth: '500px' }}>\r\n        <span style={{ height: '34px', padding: '10px 10px' }}>\r\n          Pin DXdao hashes on start\r\n        </span>\r\n        <InputBox\r\n          type=\"checkbox\"\r\n          checked={localConfig.pinOnStart}\r\n          onChange={event =>\r\n            onApiKeyValueChange(event.target.checked, 'pinOnStart')\r\n          }\r\n          style={{ width: '20px' }}\r\n        ></InputBox>\r\n      </Row>\r\n      <Row style={{ maxWidth: '500px' }}>\r\n        <ActiveButton onClick={saveConfig}>Save</ActiveButton>\r\n        <ActiveButton onClick={testApis}>Test Apis</ActiveButton>\r\n        <ActiveButton onClick={clearCache}>Clear Cache</ActiveButton>\r\n        <ActiveButton onClick={pinDXvoteHashes}>Pin DXVote Hashes</ActiveButton>\r\n      </Row>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default ConfigPage;\r\n","import { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { observer } from 'mobx-react';\r\nimport Box from '../components/common/Box';\r\nimport { useContext } from '../contexts';\r\nimport { useLocation } from 'react-router-dom';\r\nimport MDEditor from '@uiw/react-md-editor';\r\n\r\nconst FAQPage = observer(() => {\r\n  const {\r\n    context: { configStore },\r\n  } = useContext();\r\n\r\n  const questionId =\r\n    useLocation().search.indexOf('=') > -1\r\n      ? useLocation().search.split('=')[1]\r\n      : 0;\r\n\r\n  const FAQBox = styled(Box)`\r\n    padding: 20px 30px;\r\n    p {\r\n      line-height: 28px;\r\n      font-size: 20px;\r\n    }\r\n    h2 {\r\n      margin: 10px 0px;\r\n    }\r\n    h3 {\r\n      margin: 5px 0px;\r\n    }\r\n    h4 {\r\n      margin: 0px;\r\n    }\r\n  `;\r\n  useEffect(() => {\r\n    if (questionId > 0)\r\n      document.querySelectorAll('#FAQBody div h1')[questionId].scrollIntoView();\r\n  }, []);\r\n\r\n  let daoAddresses = '';\r\n  const networkContracts = configStore.getNetworkContracts();\r\n  daoAddresses += '- Avatar: ' + networkContracts.avatar + '\\n';\r\n  daoAddresses += '- Controller: ' + networkContracts.controller + '\\n';\r\n  daoAddresses += '- Reputation: ' + networkContracts.reputation + '\\n';\r\n  daoAddresses +=\r\n    '- Permission Registry: ' + networkContracts.permissionRegistry + '\\n';\r\n  daoAddresses += '- Reputation: ' + networkContracts.reputation + '\\n';\r\n\r\n  for (const votingMachineName in networkContracts.votingMachines) {\r\n    if (votingMachineName === 'dxd') {\r\n      daoAddresses +=\r\n        '- DXDVotingMachine: ' +\r\n        networkContracts.votingMachines[votingMachineName].address +\r\n        '\\n';\r\n      daoAddresses +=\r\n        '- DXD: ' +\r\n        networkContracts.votingMachines[votingMachineName].token +\r\n        '\\n';\r\n    }\r\n  }\r\n\r\n  const FAQBody = `# Where are the dao funds held?\r\n\r\nMost of the ETH and tokens are held in the DXdao avatar address, this is the safest place for the funds to be, the access to this funds is usually slow and it take day for a proposal to move funds from this address. The Wallet Schemes can also hold funds too, but only the ones that dont make calls from the avatar.\r\n\r\n## DXdao Addresses\r\n\r\n${daoAddresses}\r\n\r\n# What is a Wallet Scheme?\r\n\r\nA wallet scheme is a smart contract that manage the access to DXdao funds, in order to make transfers or calls from the DXdao avatar or the scheme itself the scheme needs to execute a proposal. The proposals are executed after it reaches a certain amount of votes or stakes over time, the amount of votes, staked and time that has to passed depends on the scheme configuration. An scheme who will have access to the DXdao avatar funds will usually take more votes, stakes and time than a scheme who make calls form itself, this means that funds can be allocated in the schemes as well, but this schemes will have only access to the funds held by themselves.\r\n\r\n# Proposal States\r\n\r\n## In Queue\r\n\r\nA proposal that needs the queuedVoteRequiredPercentage % of votes sets in the proposal scheme to pass.\r\n\r\n## Pre Boosted\r\n\r\nA proposal that has enough stakes to pass be boosted state but cant be boosted just yet.\r\n\r\n## Pending Boost\r\n\r\nA proposal that has enough stakes to pass to boosted state.\r\n\r\n## Boosted\r\n\r\nA proposal that needs the boostedVoteRequiredPercentage % of votes sets in the proposal scheme to pass.\r\n\r\n## Quiet Ending Period\r\n\r\nA proposal that changed the winning option in the amount of seconds specified as quietEndingPeriod before finishing, this will extend the proposal time for quietEndingPeriod seconds. The quietEndingPeriod is specified in the scheme configuration where the proposal was submitted.\r\n\r\n## Pending Execution\r\n\r\nA proposal that got enough votes and is ready to be executed.\r\n\r\n## Execution Failed\r\n\r\nA proposal that was executed after it passed but it execution failed.\r\n\r\n## Execution Succeded\r\n\r\nA proposal that was executed after it passed but it execution succeeded.\r\n\r\n## Expired in Queue\r\n\r\nA proposal that spent too much time in Queue state and didnt get enough votes to pass.\r\n\r\n# How does voting works?\r\n\r\nA proposal needs a minimum amount of votes to pass, and that depends on the state of the proposal at the moment of execution. If a proposal is in Boosted state it will need the boostedVoteRequiredPercentage percentage amount specified in the scheme configuration where the proposal was created of votes in favor to be executed. If a proposal reaches the queuedVoteRequiredPercentage percentage amount of votes it gets executed instantly. This means that any proposal in Queued state will need that amount of votes to pass.\r\n\r\n# How does staking works?\r\n\r\nA proposal can receives a financial stake in DXD to speed up the voting process. If a proposal receives enough positive stakes to boost it will enter pre-boosted state, once the pre-boosted state finish if the proposal still has enough DXD staked to boost it will be boosted in the next voting machine action (vote, stake, or voting machine execution). If a proposal is in Boosted state it will need the boostedVoteRequiredPercentage percentage amount specified in the scheme configuration where the proposal was created of votes in favor to be executed.\r\n\r\n# How do I get DXD?\r\n\r\nYou can get rinkeby DXD buying DXD in dxtrust rinkeby here: https://levelkdev.github.io/dxtrust/\r\n\r\n# How are proposals created?\r\n\r\nEach proposal has a title, description and calls to be exected by the wallet scheme where it is proposed. The description of the proposal is stored in IPFS, and we save the hash of the IPFS description in the blokchain next to the proposal title and calls. When creating a proposal you first need to submit the description to IPFS and once you get the IPFS hash of the description the proposal can be submited by sending a transaction to the wallet scheme smart contract.\r\n\r\n# External APIs\r\n\r\nThe app allows you to add external API services. Use Pinata to help DXdao by pinning the proposal description and important documents in you pinata account. Use Etherscan to decode proposal calls and know what the proposal will execute.\r\n\r\n# Schemes Configuration\r\n## Scheme Parameters\r\n\r\n### name\r\n\r\nThe name of the scheme, this will be used to identify the scheme by name in DXvote dapp.\r\n\r\n### callToController\r\n\r\nIf the scheme make calls to the controller or not. A Scheme that makes calls to a controller will make calls from the dxdao avatar (which gives access to the dxdao funds) and a scheme that do not call the controller will make call directly from itself, which means that it will have access only to the funds held in the scheme address.\r\n\r\n### maxSecondsForExecution\r\n\r\nThis is the amount of time that a proposal has to be executed in the scheme, this is useful to \"clean\" proposals that weren't successful or weren't able to be executed for some reason. This means that if a proposal passes in 3 days in the voting machine and the maxSecondsForExecution are 6 days it will have 3 days to be executed, after that it will be marked in ExecutionTimeout state and wont be able to be executed again, reaching a state of termination.\r\n\r\n### maxRepPercentageToMint\r\n\r\nThis is the maximum amount of rep in percentage allowed to be minted by proposal, the value can be between 0-100, if a proposal execution mints 5% of REP and the maxRepPercentageToMint equals 3, it will fail.\r\n\r\n## Controller Permissions\r\n\r\nThis are four values that determine what the scheme can do in the dxdao controller contract, the most powerful contract in the stack, the only two values that we use from it are canRegisterSchemes and canGenericCall. canRegisterSchemes allows the addition/removal of schemes and the canGenericCall allows the execution of calls in the avatar contract.\r\n\r\n## Permission Registry Permissions\r\n\r\nThe permissions are set by asset, specifying the sender and receiver addresses (from and to) and the signature of the function to be used and the value to be transferred.\r\n\r\nThis permissions are checked before a proposal execution, checking that the total value transferred by asset and the functions to be called are allowed.\r\n\r\nThe asset address will be address 0x0 for ethereum calls (this would be used for ethereum smart contract calls), and if the permission is for an ERC20 address the asset would be the address of the ERC20 token.\r\n\r\nIf a scheme make calls to the controller the permissions are checked avatar address as sender (from field in the permission regsitry).\r\n\r\nIf a scheme does not make calls to the controller the permissions are checked scheme address as sender (from field in the permission regsitry).\r\n\r\nIt allows the use of \"wildcard\" permissions by using 0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa for any address and 0xaaaaaaaa for any signature.\r\nIt also allows the use of global transfer limits, by setting the limit by asset using the scheme as receiver address, any value recorded here will be used as global transfer limit in the proposal check.\r\n\r\nConstant 0x0 address used as \"zero address\": \\`0x0000000000000000000000000000000000000000\\`\r\n\r\nConstant address used as \"any address\": \\`0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa\\`\r\n\r\nConstant function signature used as \"any function\": \\`0xaaaaaaaa\\`\r\n\r\nConstant Max uint256 to be used: \\`0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\\`\r\n\r\n## Voting Machine Params\r\n\r\n### queuedVoteRequiredPercentage\r\n\r\nThe percentage of votes required to execute a proposal in queued state.\r\n\r\n### boostedVoteRequiredPercentage\r\n\r\nThe percentage of votes required to execute a proposal in boosted state.\r\n\r\n### queuedVotePeriodLimit\r\n\r\nThe amount of time that a proposal will be in queue state (not boosted), once the time limit is reached and the proposal was not executed it finish.\r\n\r\n### boostedVotePeriodLimit\r\n\r\nThe amount of time that a proposal will be in boost state (after pre-boosted), once the time limit is reached and the proposal was not executed it finish.\r\n\r\n### preBoostedVotePeriodLimit\r\n\r\nThe amount of time that a proposal will be in pre-boosted state. A proposal gets into pre-boosted state when it has enough.\r\n\r\n### thresholdConst\r\n\r\nThe constant used to calculate the needed upstakes in a proposal to reach boosted state, where the upstakes needed equal to downStakes * (thresholdConst ** (numberOfBoostedProposals)) taking in count the number of boosted proposals at the moment of the pre-boost to boosted state change.\r\n\r\n### quietEndingPeriod\r\n\r\nThe amount of time a proposal has to have the same winning option before it finish, if the winning option change during that time the proposal finish time will be extended till the winning option doesn't change during that time.\r\n\r\nproposingRepReward\r\nThe fixed amount of REP that will be minted to the address who created the proposal.\r\n\r\n### votersReputationLossRatio\r\n\r\nThe percentage of REP a voter will loose if the voter voted a proposal in queue state for the loosing option.\r\n\r\n### minimumDaoBounty\r\n\r\nThe minimum amount to be set as downstake when a proposal is created.\r\n\r\n### daoBountyConst\r\n\r\nThe downstake for proposal is calculated when the proposal is created, by using the formula: (daoBountyConst * averageBoostDownstakes) / 100. If the value calculated is higher than minimumDaoBounty then this value will be used, if not the start downstake of the proposal will be minimumDaoBounty.\r\n\r\n# Useful Apps\r\n\r\n- Unit Converter Etherscan: https://rinkeby.etherscan.io/unitconverter\r\n- ETH Converter: https://eth-converter.com\r\n- UNIX Timestamp Converter: https://www.unixtimestamp.com\r\n- Hashhex ABI Encoder/Decoder: https://abi.hashex.org\r\n- Abidas ABI Encoder/Decoder: https://adibas03.github.io/online-ethereum-abi-encoder-decoder\r\n`;\r\n\r\n  return (\r\n    <FAQBox id=\"FAQBody\">\r\n      <MDEditor.Markdown\r\n        source={FAQBody}\r\n        style={{\r\n          padding: '20px 10px',\r\n        }}\r\n      />\r\n    </FAQBox>\r\n  );\r\n});\r\n\r\nexport default FAQPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Box from '../components/common/Box';\r\nimport { FiZap } from 'react-icons/fi';\r\n\r\nconst ForumPage = () => {\r\n  const LoadingBox = styled.div`\r\n    .loader {\r\n      text-align: center;\r\n      font-weight: 500;\r\n      font-size: 20px;\r\n      line-height: 18px;\r\n      color: var(--dark-text-gray);\r\n      padding: 25px 0px;\r\n\r\n      .svg {\r\n        height: 30px;\r\n        width: 30px;\r\n        margin-bottom: 10px;\r\n      }\r\n    }\r\n  `;\r\n\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  function postMessageReceived(e) {\r\n    if (!e) {\r\n      return;\r\n    }\r\n\r\n    if (loading) {\r\n      setLoading(false);\r\n    }\r\n  }\r\n  window.addEventListener('message', postMessageReceived, false);\r\n\r\n  var lists = document.querySelectorAll('d-topics-list');\r\n  for (var i = 0; i < lists.length; i++) {\r\n    var list = lists[i];\r\n    var url = list.getAttribute('discourse-url');\r\n    if (!url || url.length === 0) {\r\n      console.error('Error, `discourse-url` was not found');\r\n      continue;\r\n    }\r\n    var frameId = 'de-' + Math.random().toString(36).substr(2, 9);\r\n    var params = ['discourse_embed_id=' + frameId];\r\n    list.removeAttribute('discourse-url');\r\n\r\n    for (var j = 0; j < list.attributes.length; j++) {\r\n      var attr = list.attributes[j];\r\n      params.push(attr.name.replace('-', '_') + '=' + attr.value);\r\n    }\r\n\r\n    var iframe = document.createElement('iframe');\r\n    iframe.src = url + '/embed/topics?' + params.join('&');\r\n    iframe.id = frameId;\r\n    iframe.width = '100%';\r\n    iframe.frameBorder = '0';\r\n    iframe.scrolling = 'no';\r\n    console.log(iframe);\r\n    list.appendChild(iframe);\r\n  }\r\n\r\n  return (\r\n    <Box style={{ padding: '0px' }}>\r\n      {loading ? (\r\n        <LoadingBox>\r\n          <div className=\"loader\">\r\n            {' '}\r\n            <FiZap /> <br /> Loading..{' '}\r\n          </div>\r\n        </LoadingBox>\r\n      ) : (\r\n        // @ts-ignore\r\n        <d-topics-list\r\n          discourse-url=\"https://daotalk.org/\"\r\n          category=\"15\"\r\n          per-page=\"10000\"\r\n          template=\"complete\"\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ForumPage;\r\n","import ReactDOM from 'react-dom';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport { createWeb3ReactRoot } from '@web3-react/core';\r\nimport Web3ReactManager from 'components/Web3ReactManager';\r\nimport Web3 from 'web3';\r\nimport moment from 'moment';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'index.css';\r\nimport ThemeProvider, { GlobalStyle } from './theme';\r\n\r\nimport { web3ContextNames } from 'provider/connectors';\r\n\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport PageRouter from './PageRouter';\r\n\r\nimport ProposalsPage from './pages/Proposals';\r\nimport NewProposalPage from './pages/NewProposal';\r\nimport UserPage from './pages/User';\r\nimport ProposalPage from './pages/Proposal';\r\nimport InfoPage from './pages/Info';\r\nimport ConfigPage from './pages/Configuration';\r\nimport FAQPage from './pages/FAQ';\r\nimport ForumPage from './pages/Forum';\r\n\r\nmoment.updateLocale('en', {\r\n  relativeTime: {\r\n    s: '1 second',\r\n    m: '1 minute',\r\n    h: '1 hour',\r\n    d: '1 day',\r\n  },\r\n});\r\n\r\nconst Web3ProviderInjected = createWeb3ReactRoot(web3ContextNames.injected);\r\n\r\nfunction getLibrary(provider) {\r\n  return new Web3(provider);\r\n}\r\n\r\nconst Root = (\r\n  <Web3ProviderInjected getLibrary={getLibrary}>\r\n    <ThemeProvider>\r\n      <GlobalStyle />\r\n      <HashRouter>\r\n        <Switch>\r\n          <Web3ReactManager>\r\n            <Header />\r\n            <PageRouter>\r\n              <Route exact path=\"/\">\r\n                {' '}\r\n                <ProposalsPage />{' '}\r\n              </Route>\r\n              <Route exact path=\"/config\">\r\n                {' '}\r\n                <ConfigPage />{' '}\r\n              </Route>\r\n              <Route exact path=\"/forum\">\r\n                {' '}\r\n                <ForumPage />{' '}\r\n              </Route>\r\n              <Route exact path=\"/faq\">\r\n                {' '}\r\n                <FAQPage />{' '}\r\n              </Route>\r\n              <Route exact path=\"/:network/proposals\">\r\n                {' '}\r\n                <ProposalsPage />{' '}\r\n              </Route>\r\n              <Route exact path=\"/:network/new\">\r\n                {' '}\r\n                <NewProposalPage />{' '}\r\n              </Route>\r\n              <Route exact path=\"/:network/info\">\r\n                {' '}\r\n                <InfoPage />{' '}\r\n              </Route>\r\n              <Route exact path=\"/:network/user/:address\">\r\n                {' '}\r\n                <UserPage />{' '}\r\n              </Route>\r\n              <Route exact path=\"/:network/proposal/:proposalId\">\r\n                {' '}\r\n                <ProposalPage />{' '}\r\n              </Route>\r\n            </PageRouter>\r\n            <Footer />\r\n          </Web3ReactManager>\r\n        </Switch>\r\n      </HashRouter>\r\n    </ThemeProvider>\r\n  </Web3ProviderInjected>\r\n);\r\nReactDOM.render(Root, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","var map = {\n\t\"./prism-abap\": [\n\t\t\"XpJP\",\n\t\t0\n\t],\n\t\"./prism-abap.js\": [\n\t\t\"XpJP\",\n\t\t0\n\t],\n\t\"./prism-abap.min\": [\n\t\t\"L4xK\",\n\t\t1\n\t],\n\t\"./prism-abap.min.js\": [\n\t\t\"L4xK\",\n\t\t1\n\t],\n\t\"./prism-abnf\": [\n\t\t\"EbVF\",\n\t\t2\n\t],\n\t\"./prism-abnf.js\": [\n\t\t\"EbVF\",\n\t\t2\n\t],\n\t\"./prism-abnf.min\": [\n\t\t\"oP4u\",\n\t\t3\n\t],\n\t\"./prism-abnf.min.js\": [\n\t\t\"oP4u\",\n\t\t3\n\t],\n\t\"./prism-actionscript\": [\n\t\t\"pZMP\",\n\t\t4\n\t],\n\t\"./prism-actionscript.js\": [\n\t\t\"pZMP\",\n\t\t4\n\t],\n\t\"./prism-actionscript.min\": [\n\t\t\"w6sj\",\n\t\t5\n\t],\n\t\"./prism-actionscript.min.js\": [\n\t\t\"w6sj\",\n\t\t5\n\t],\n\t\"./prism-ada\": [\n\t\t\"LmXF\",\n\t\t6\n\t],\n\t\"./prism-ada.js\": [\n\t\t\"LmXF\",\n\t\t6\n\t],\n\t\"./prism-ada.min\": [\n\t\t\"NeZf\",\n\t\t7\n\t],\n\t\"./prism-ada.min.js\": [\n\t\t\"NeZf\",\n\t\t7\n\t],\n\t\"./prism-agda\": [\n\t\t\"b6mF\",\n\t\t8\n\t],\n\t\"./prism-agda.js\": [\n\t\t\"b6mF\",\n\t\t8\n\t],\n\t\"./prism-agda.min\": [\n\t\t\"2U6L\",\n\t\t9\n\t],\n\t\"./prism-agda.min.js\": [\n\t\t\"2U6L\",\n\t\t9\n\t],\n\t\"./prism-al\": [\n\t\t\"d4OG\",\n\t\t10\n\t],\n\t\"./prism-al.js\": [\n\t\t\"d4OG\",\n\t\t10\n\t],\n\t\"./prism-al.min\": [\n\t\t\"wjrc\",\n\t\t11\n\t],\n\t\"./prism-al.min.js\": [\n\t\t\"wjrc\",\n\t\t11\n\t],\n\t\"./prism-antlr4\": [\n\t\t\"dgcb\",\n\t\t12\n\t],\n\t\"./prism-antlr4.js\": [\n\t\t\"dgcb\",\n\t\t12\n\t],\n\t\"./prism-antlr4.min\": [\n\t\t\"t9JB\",\n\t\t13\n\t],\n\t\"./prism-antlr4.min.js\": [\n\t\t\"t9JB\",\n\t\t13\n\t],\n\t\"./prism-apacheconf\": [\n\t\t\"iB5L\",\n\t\t14\n\t],\n\t\"./prism-apacheconf.js\": [\n\t\t\"iB5L\",\n\t\t14\n\t],\n\t\"./prism-apacheconf.min\": [\n\t\t\"+45o\",\n\t\t15\n\t],\n\t\"./prism-apacheconf.min.js\": [\n\t\t\"+45o\",\n\t\t15\n\t],\n\t\"./prism-apl\": [\n\t\t\"+FDh\",\n\t\t16\n\t],\n\t\"./prism-apl.js\": [\n\t\t\"+FDh\",\n\t\t16\n\t],\n\t\"./prism-apl.min\": [\n\t\t\"4Vz6\",\n\t\t17\n\t],\n\t\"./prism-apl.min.js\": [\n\t\t\"4Vz6\",\n\t\t17\n\t],\n\t\"./prism-applescript\": [\n\t\t\"t2Jj\",\n\t\t18\n\t],\n\t\"./prism-applescript.js\": [\n\t\t\"t2Jj\",\n\t\t18\n\t],\n\t\"./prism-applescript.min\": [\n\t\t\"EeiZ\",\n\t\t19\n\t],\n\t\"./prism-applescript.min.js\": [\n\t\t\"EeiZ\",\n\t\t19\n\t],\n\t\"./prism-aql\": [\n\t\t\"u300\",\n\t\t20\n\t],\n\t\"./prism-aql.js\": [\n\t\t\"u300\",\n\t\t20\n\t],\n\t\"./prism-aql.min\": [\n\t\t\"4vsr\",\n\t\t21\n\t],\n\t\"./prism-aql.min.js\": [\n\t\t\"4vsr\",\n\t\t21\n\t],\n\t\"./prism-arduino\": [\n\t\t\"VOcU\",\n\t\t22\n\t],\n\t\"./prism-arduino.js\": [\n\t\t\"VOcU\",\n\t\t22\n\t],\n\t\"./prism-arduino.min\": [\n\t\t\"Wl4i\",\n\t\t23\n\t],\n\t\"./prism-arduino.min.js\": [\n\t\t\"Wl4i\",\n\t\t23\n\t],\n\t\"./prism-arff\": [\n\t\t\"8ktg\",\n\t\t24\n\t],\n\t\"./prism-arff.js\": [\n\t\t\"8ktg\",\n\t\t24\n\t],\n\t\"./prism-arff.min\": [\n\t\t\"aeOg\",\n\t\t25\n\t],\n\t\"./prism-arff.min.js\": [\n\t\t\"aeOg\",\n\t\t25\n\t],\n\t\"./prism-asciidoc\": [\n\t\t\"jOLr\",\n\t\t26\n\t],\n\t\"./prism-asciidoc.js\": [\n\t\t\"jOLr\",\n\t\t26\n\t],\n\t\"./prism-asciidoc.min\": [\n\t\t\"mOdA\",\n\t\t27\n\t],\n\t\"./prism-asciidoc.min.js\": [\n\t\t\"mOdA\",\n\t\t27\n\t],\n\t\"./prism-asm6502\": [\n\t\t\"ibSS\",\n\t\t28\n\t],\n\t\"./prism-asm6502.js\": [\n\t\t\"ibSS\",\n\t\t28\n\t],\n\t\"./prism-asm6502.min\": [\n\t\t\"4vTq\",\n\t\t29\n\t],\n\t\"./prism-asm6502.min.js\": [\n\t\t\"4vTq\",\n\t\t29\n\t],\n\t\"./prism-aspnet\": [\n\t\t\"drhi\",\n\t\t30\n\t],\n\t\"./prism-aspnet.js\": [\n\t\t\"drhi\",\n\t\t30\n\t],\n\t\"./prism-aspnet.min\": [\n\t\t\"cXUx\",\n\t\t31\n\t],\n\t\"./prism-aspnet.min.js\": [\n\t\t\"cXUx\",\n\t\t31\n\t],\n\t\"./prism-autohotkey\": [\n\t\t\"Mqv6\",\n\t\t32\n\t],\n\t\"./prism-autohotkey.js\": [\n\t\t\"Mqv6\",\n\t\t32\n\t],\n\t\"./prism-autohotkey.min\": [\n\t\t\"Dhz8\",\n\t\t33\n\t],\n\t\"./prism-autohotkey.min.js\": [\n\t\t\"Dhz8\",\n\t\t33\n\t],\n\t\"./prism-autoit\": [\n\t\t\"Q7+W\",\n\t\t34\n\t],\n\t\"./prism-autoit.js\": [\n\t\t\"Q7+W\",\n\t\t34\n\t],\n\t\"./prism-autoit.min\": [\n\t\t\"tDH2\",\n\t\t35\n\t],\n\t\"./prism-autoit.min.js\": [\n\t\t\"tDH2\",\n\t\t35\n\t],\n\t\"./prism-bash\": [\n\t\t\"gAkk\",\n\t\t36\n\t],\n\t\"./prism-bash.js\": [\n\t\t\"gAkk\",\n\t\t36\n\t],\n\t\"./prism-bash.min\": [\n\t\t\"Veyx\",\n\t\t37\n\t],\n\t\"./prism-bash.min.js\": [\n\t\t\"Veyx\",\n\t\t37\n\t],\n\t\"./prism-basic\": [\n\t\t\"qVSt\",\n\t\t38\n\t],\n\t\"./prism-basic.js\": [\n\t\t\"qVSt\",\n\t\t38\n\t],\n\t\"./prism-basic.min\": [\n\t\t\"t4XS\",\n\t\t39\n\t],\n\t\"./prism-basic.min.js\": [\n\t\t\"t4XS\",\n\t\t39\n\t],\n\t\"./prism-batch\": [\n\t\t\"wkPK\",\n\t\t40\n\t],\n\t\"./prism-batch.js\": [\n\t\t\"wkPK\",\n\t\t40\n\t],\n\t\"./prism-batch.min\": [\n\t\t\"yJGk\",\n\t\t41\n\t],\n\t\"./prism-batch.min.js\": [\n\t\t\"yJGk\",\n\t\t41\n\t],\n\t\"./prism-bbcode\": [\n\t\t\"HdDD\",\n\t\t42\n\t],\n\t\"./prism-bbcode.js\": [\n\t\t\"HdDD\",\n\t\t42\n\t],\n\t\"./prism-bbcode.min\": [\n\t\t\"tzWO\",\n\t\t43\n\t],\n\t\"./prism-bbcode.min.js\": [\n\t\t\"tzWO\",\n\t\t43\n\t],\n\t\"./prism-bison\": [\n\t\t\"SL6G\",\n\t\t44\n\t],\n\t\"./prism-bison.js\": [\n\t\t\"SL6G\",\n\t\t44\n\t],\n\t\"./prism-bison.min\": [\n\t\t\"na+9\",\n\t\t45\n\t],\n\t\"./prism-bison.min.js\": [\n\t\t\"na+9\",\n\t\t45\n\t],\n\t\"./prism-bnf\": [\n\t\t\"pksX\",\n\t\t46\n\t],\n\t\"./prism-bnf.js\": [\n\t\t\"pksX\",\n\t\t46\n\t],\n\t\"./prism-bnf.min\": [\n\t\t\"WvSR\",\n\t\t47\n\t],\n\t\"./prism-bnf.min.js\": [\n\t\t\"WvSR\",\n\t\t47\n\t],\n\t\"./prism-brainfuck\": [\n\t\t\"s2Vr\",\n\t\t48\n\t],\n\t\"./prism-brainfuck.js\": [\n\t\t\"s2Vr\",\n\t\t48\n\t],\n\t\"./prism-brainfuck.min\": [\n\t\t\"g5kN\",\n\t\t49\n\t],\n\t\"./prism-brainfuck.min.js\": [\n\t\t\"g5kN\",\n\t\t49\n\t],\n\t\"./prism-brightscript\": [\n\t\t\"xbA4\",\n\t\t50\n\t],\n\t\"./prism-brightscript.js\": [\n\t\t\"xbA4\",\n\t\t50\n\t],\n\t\"./prism-brightscript.min\": [\n\t\t\"yVCt\",\n\t\t51\n\t],\n\t\"./prism-brightscript.min.js\": [\n\t\t\"yVCt\",\n\t\t51\n\t],\n\t\"./prism-bro\": [\n\t\t\"56Ue\",\n\t\t52\n\t],\n\t\"./prism-bro.js\": [\n\t\t\"56Ue\",\n\t\t52\n\t],\n\t\"./prism-bro.min\": [\n\t\t\"Ub7m\",\n\t\t53\n\t],\n\t\"./prism-bro.min.js\": [\n\t\t\"Ub7m\",\n\t\t53\n\t],\n\t\"./prism-c\": [\n\t\t\"huE1\",\n\t\t54\n\t],\n\t\"./prism-c.js\": [\n\t\t\"huE1\",\n\t\t54\n\t],\n\t\"./prism-c.min\": [\n\t\t\"mX65\",\n\t\t55\n\t],\n\t\"./prism-c.min.js\": [\n\t\t\"mX65\",\n\t\t55\n\t],\n\t\"./prism-cil\": [\n\t\t\"J4HD\",\n\t\t56\n\t],\n\t\"./prism-cil.js\": [\n\t\t\"J4HD\",\n\t\t56\n\t],\n\t\"./prism-cil.min\": [\n\t\t\"6cme\",\n\t\t57\n\t],\n\t\"./prism-cil.min.js\": [\n\t\t\"6cme\",\n\t\t57\n\t],\n\t\"./prism-clike\": [\n\t\t\"y1X9\",\n\t\t58\n\t],\n\t\"./prism-clike.js\": [\n\t\t\"y1X9\",\n\t\t58\n\t],\n\t\"./prism-clike.min\": [\n\t\t\"CDxi\",\n\t\t59\n\t],\n\t\"./prism-clike.min.js\": [\n\t\t\"CDxi\",\n\t\t59\n\t],\n\t\"./prism-clojure\": [\n\t\t\"OQpq\",\n\t\t60\n\t],\n\t\"./prism-clojure.js\": [\n\t\t\"OQpq\",\n\t\t60\n\t],\n\t\"./prism-clojure.min\": [\n\t\t\"Qcv2\",\n\t\t61\n\t],\n\t\"./prism-clojure.min.js\": [\n\t\t\"Qcv2\",\n\t\t61\n\t],\n\t\"./prism-cmake\": [\n\t\t\"g0jA\",\n\t\t62\n\t],\n\t\"./prism-cmake.js\": [\n\t\t\"g0jA\",\n\t\t62\n\t],\n\t\"./prism-cmake.min\": [\n\t\t\"6TK8\",\n\t\t63\n\t],\n\t\"./prism-cmake.min.js\": [\n\t\t\"6TK8\",\n\t\t63\n\t],\n\t\"./prism-coffeescript\": [\n\t\t\"Nd5L\",\n\t\t64\n\t],\n\t\"./prism-coffeescript.js\": [\n\t\t\"Nd5L\",\n\t\t64\n\t],\n\t\"./prism-coffeescript.min\": [\n\t\t\"o8ko\",\n\t\t65\n\t],\n\t\"./prism-coffeescript.min.js\": [\n\t\t\"o8ko\",\n\t\t65\n\t],\n\t\"./prism-concurnas\": [\n\t\t\"uQnp\",\n\t\t66\n\t],\n\t\"./prism-concurnas.js\": [\n\t\t\"uQnp\",\n\t\t66\n\t],\n\t\"./prism-concurnas.min\": [\n\t\t\"fjVe\",\n\t\t67\n\t],\n\t\"./prism-concurnas.min.js\": [\n\t\t\"fjVe\",\n\t\t67\n\t],\n\t\"./prism-core\": [\n\t\t\"jHpe\",\n\t\t68\n\t],\n\t\"./prism-core.js\": [\n\t\t\"jHpe\",\n\t\t68\n\t],\n\t\"./prism-core.min\": [\n\t\t\"93uj\",\n\t\t69\n\t],\n\t\"./prism-core.min.js\": [\n\t\t\"93uj\",\n\t\t69\n\t],\n\t\"./prism-cpp\": [\n\t\t\"kfgK\",\n\t\t70\n\t],\n\t\"./prism-cpp.js\": [\n\t\t\"kfgK\",\n\t\t70\n\t],\n\t\"./prism-cpp.min\": [\n\t\t\"nSLE\",\n\t\t71\n\t],\n\t\"./prism-cpp.min.js\": [\n\t\t\"nSLE\",\n\t\t71\n\t],\n\t\"./prism-crystal\": [\n\t\t\"npCj\",\n\t\t72\n\t],\n\t\"./prism-crystal.js\": [\n\t\t\"npCj\",\n\t\t72\n\t],\n\t\"./prism-crystal.min\": [\n\t\t\"K0jR\",\n\t\t73\n\t],\n\t\"./prism-crystal.min.js\": [\n\t\t\"K0jR\",\n\t\t73\n\t],\n\t\"./prism-csharp\": [\n\t\t\"lSgE\",\n\t\t74\n\t],\n\t\"./prism-csharp.js\": [\n\t\t\"lSgE\",\n\t\t74\n\t],\n\t\"./prism-csharp.min\": [\n\t\t\"Mg/h\",\n\t\t75\n\t],\n\t\"./prism-csharp.min.js\": [\n\t\t\"Mg/h\",\n\t\t75\n\t],\n\t\"./prism-csp\": [\n\t\t\"1Nty\",\n\t\t76\n\t],\n\t\"./prism-csp.js\": [\n\t\t\"1Nty\",\n\t\t76\n\t],\n\t\"./prism-csp.min\": [\n\t\t\"AvZM\",\n\t\t77\n\t],\n\t\"./prism-csp.min.js\": [\n\t\t\"AvZM\",\n\t\t77\n\t],\n\t\"./prism-css\": [\n\t\t\"ZgVT\",\n\t\t80\n\t],\n\t\"./prism-css-extras\": [\n\t\t\"KJ57\",\n\t\t78\n\t],\n\t\"./prism-css-extras.js\": [\n\t\t\"KJ57\",\n\t\t78\n\t],\n\t\"./prism-css-extras.min\": [\n\t\t\"ONoJ\",\n\t\t79\n\t],\n\t\"./prism-css-extras.min.js\": [\n\t\t\"ONoJ\",\n\t\t79\n\t],\n\t\"./prism-css.js\": [\n\t\t\"ZgVT\",\n\t\t80\n\t],\n\t\"./prism-css.min\": [\n\t\t\"VXf6\",\n\t\t81\n\t],\n\t\"./prism-css.min.js\": [\n\t\t\"VXf6\",\n\t\t81\n\t],\n\t\"./prism-cypher\": [\n\t\t\"NdPI\",\n\t\t82\n\t],\n\t\"./prism-cypher.js\": [\n\t\t\"NdPI\",\n\t\t82\n\t],\n\t\"./prism-cypher.min\": [\n\t\t\"23m3\",\n\t\t83\n\t],\n\t\"./prism-cypher.min.js\": [\n\t\t\"23m3\",\n\t\t83\n\t],\n\t\"./prism-d\": [\n\t\t\"hkok\",\n\t\t84\n\t],\n\t\"./prism-d.js\": [\n\t\t\"hkok\",\n\t\t84\n\t],\n\t\"./prism-d.min\": [\n\t\t\"6XHo\",\n\t\t85\n\t],\n\t\"./prism-d.min.js\": [\n\t\t\"6XHo\",\n\t\t85\n\t],\n\t\"./prism-dart\": [\n\t\t\"otUN\",\n\t\t86\n\t],\n\t\"./prism-dart.js\": [\n\t\t\"otUN\",\n\t\t86\n\t],\n\t\"./prism-dart.min\": [\n\t\t\"MeRj\",\n\t\t87\n\t],\n\t\"./prism-dart.min.js\": [\n\t\t\"MeRj\",\n\t\t87\n\t],\n\t\"./prism-dax\": [\n\t\t\"kAua\",\n\t\t88\n\t],\n\t\"./prism-dax.js\": [\n\t\t\"kAua\",\n\t\t88\n\t],\n\t\"./prism-dax.min\": [\n\t\t\"ys8T\",\n\t\t89\n\t],\n\t\"./prism-dax.min.js\": [\n\t\t\"ys8T\",\n\t\t89\n\t],\n\t\"./prism-dhall\": [\n\t\t\"ZzuI\",\n\t\t90\n\t],\n\t\"./prism-dhall.js\": [\n\t\t\"ZzuI\",\n\t\t90\n\t],\n\t\"./prism-dhall.min\": [\n\t\t\"pM+Y\",\n\t\t91\n\t],\n\t\"./prism-dhall.min.js\": [\n\t\t\"pM+Y\",\n\t\t91\n\t],\n\t\"./prism-diff\": [\n\t\t\"GD/k\",\n\t\t92\n\t],\n\t\"./prism-diff.js\": [\n\t\t\"GD/k\",\n\t\t92\n\t],\n\t\"./prism-diff.min\": [\n\t\t\"WSBf\",\n\t\t93\n\t],\n\t\"./prism-diff.min.js\": [\n\t\t\"WSBf\",\n\t\t93\n\t],\n\t\"./prism-django\": [\n\t\t\"HGMl\",\n\t\t94\n\t],\n\t\"./prism-django.js\": [\n\t\t\"HGMl\",\n\t\t94\n\t],\n\t\"./prism-django.min\": [\n\t\t\"N3Go\",\n\t\t95\n\t],\n\t\"./prism-django.min.js\": [\n\t\t\"N3Go\",\n\t\t95\n\t],\n\t\"./prism-dns-zone-file\": [\n\t\t\"f7nC\",\n\t\t96\n\t],\n\t\"./prism-dns-zone-file.js\": [\n\t\t\"f7nC\",\n\t\t96\n\t],\n\t\"./prism-dns-zone-file.min\": [\n\t\t\"p7ZI\",\n\t\t97\n\t],\n\t\"./prism-dns-zone-file.min.js\": [\n\t\t\"p7ZI\",\n\t\t97\n\t],\n\t\"./prism-docker\": [\n\t\t\"2et7\",\n\t\t98\n\t],\n\t\"./prism-docker.js\": [\n\t\t\"2et7\",\n\t\t98\n\t],\n\t\"./prism-docker.min\": [\n\t\t\"jdQp\",\n\t\t99\n\t],\n\t\"./prism-docker.min.js\": [\n\t\t\"jdQp\",\n\t\t99\n\t],\n\t\"./prism-ebnf\": [\n\t\t\"xwaw\",\n\t\t100\n\t],\n\t\"./prism-ebnf.js\": [\n\t\t\"xwaw\",\n\t\t100\n\t],\n\t\"./prism-ebnf.min\": [\n\t\t\"3Ky2\",\n\t\t101\n\t],\n\t\"./prism-ebnf.min.js\": [\n\t\t\"3Ky2\",\n\t\t101\n\t],\n\t\"./prism-editorconfig\": [\n\t\t\"B/pZ\",\n\t\t102\n\t],\n\t\"./prism-editorconfig.js\": [\n\t\t\"B/pZ\",\n\t\t102\n\t],\n\t\"./prism-editorconfig.min\": [\n\t\t\"c9/0\",\n\t\t103\n\t],\n\t\"./prism-editorconfig.min.js\": [\n\t\t\"c9/0\",\n\t\t103\n\t],\n\t\"./prism-eiffel\": [\n\t\t\"YctN\",\n\t\t104\n\t],\n\t\"./prism-eiffel.js\": [\n\t\t\"YctN\",\n\t\t104\n\t],\n\t\"./prism-eiffel.min\": [\n\t\t\"aE5W\",\n\t\t105\n\t],\n\t\"./prism-eiffel.min.js\": [\n\t\t\"aE5W\",\n\t\t105\n\t],\n\t\"./prism-ejs\": [\n\t\t\"qJTN\",\n\t\t106\n\t],\n\t\"./prism-ejs.js\": [\n\t\t\"qJTN\",\n\t\t106\n\t],\n\t\"./prism-ejs.min\": [\n\t\t\"46kI\",\n\t\t107\n\t],\n\t\"./prism-ejs.min.js\": [\n\t\t\"46kI\",\n\t\t107\n\t],\n\t\"./prism-elixir\": [\n\t\t\"9QaP\",\n\t\t108\n\t],\n\t\"./prism-elixir.js\": [\n\t\t\"9QaP\",\n\t\t108\n\t],\n\t\"./prism-elixir.min\": [\n\t\t\"55wA\",\n\t\t109\n\t],\n\t\"./prism-elixir.min.js\": [\n\t\t\"55wA\",\n\t\t109\n\t],\n\t\"./prism-elm\": [\n\t\t\"eIXP\",\n\t\t110\n\t],\n\t\"./prism-elm.js\": [\n\t\t\"eIXP\",\n\t\t110\n\t],\n\t\"./prism-elm.min\": [\n\t\t\"RqSG\",\n\t\t111\n\t],\n\t\"./prism-elm.min.js\": [\n\t\t\"RqSG\",\n\t\t111\n\t],\n\t\"./prism-erb\": [\n\t\t\"00hE\",\n\t\t112\n\t],\n\t\"./prism-erb.js\": [\n\t\t\"00hE\",\n\t\t112\n\t],\n\t\"./prism-erb.min\": [\n\t\t\"Ou55\",\n\t\t113\n\t],\n\t\"./prism-erb.min.js\": [\n\t\t\"Ou55\",\n\t\t113\n\t],\n\t\"./prism-erlang\": [\n\t\t\"nrL0\",\n\t\t114\n\t],\n\t\"./prism-erlang.js\": [\n\t\t\"nrL0\",\n\t\t114\n\t],\n\t\"./prism-erlang.min\": [\n\t\t\"2v+r\",\n\t\t115\n\t],\n\t\"./prism-erlang.min.js\": [\n\t\t\"2v+r\",\n\t\t115\n\t],\n\t\"./prism-etlua\": [\n\t\t\"nF1u\",\n\t\t116\n\t],\n\t\"./prism-etlua.js\": [\n\t\t\"nF1u\",\n\t\t116\n\t],\n\t\"./prism-etlua.min\": [\n\t\t\"fZf5\",\n\t\t117\n\t],\n\t\"./prism-etlua.min.js\": [\n\t\t\"fZf5\",\n\t\t117\n\t],\n\t\"./prism-excel-formula\": [\n\t\t\"0fuW\",\n\t\t118\n\t],\n\t\"./prism-excel-formula.js\": [\n\t\t\"0fuW\",\n\t\t118\n\t],\n\t\"./prism-excel-formula.min\": [\n\t\t\"LtKg\",\n\t\t119\n\t],\n\t\"./prism-excel-formula.min.js\": [\n\t\t\"LtKg\",\n\t\t119\n\t],\n\t\"./prism-factor\": [\n\t\t\"jxYe\",\n\t\t120\n\t],\n\t\"./prism-factor.js\": [\n\t\t\"jxYe\",\n\t\t120\n\t],\n\t\"./prism-factor.min\": [\n\t\t\"dvj4\",\n\t\t121\n\t],\n\t\"./prism-factor.min.js\": [\n\t\t\"dvj4\",\n\t\t121\n\t],\n\t\"./prism-firestore-security-rules\": [\n\t\t\"E9jH\",\n\t\t122\n\t],\n\t\"./prism-firestore-security-rules.js\": [\n\t\t\"E9jH\",\n\t\t122\n\t],\n\t\"./prism-firestore-security-rules.min\": [\n\t\t\"p/JI\",\n\t\t123\n\t],\n\t\"./prism-firestore-security-rules.min.js\": [\n\t\t\"p/JI\",\n\t\t123\n\t],\n\t\"./prism-flow\": [\n\t\t\"dBHq\",\n\t\t124\n\t],\n\t\"./prism-flow.js\": [\n\t\t\"dBHq\",\n\t\t124\n\t],\n\t\"./prism-flow.min\": [\n\t\t\"HIyA\",\n\t\t125\n\t],\n\t\"./prism-flow.min.js\": [\n\t\t\"HIyA\",\n\t\t125\n\t],\n\t\"./prism-fortran\": [\n\t\t\"/nb9\",\n\t\t126\n\t],\n\t\"./prism-fortran.js\": [\n\t\t\"/nb9\",\n\t\t126\n\t],\n\t\"./prism-fortran.min\": [\n\t\t\"I3A5\",\n\t\t127\n\t],\n\t\"./prism-fortran.min.js\": [\n\t\t\"I3A5\",\n\t\t127\n\t],\n\t\"./prism-fsharp\": [\n\t\t\"PUL1\",\n\t\t128\n\t],\n\t\"./prism-fsharp.js\": [\n\t\t\"PUL1\",\n\t\t128\n\t],\n\t\"./prism-fsharp.min\": [\n\t\t\"7yp0\",\n\t\t129\n\t],\n\t\"./prism-fsharp.min.js\": [\n\t\t\"7yp0\",\n\t\t129\n\t],\n\t\"./prism-ftl\": [\n\t\t\"8RTI\",\n\t\t130\n\t],\n\t\"./prism-ftl.js\": [\n\t\t\"8RTI\",\n\t\t130\n\t],\n\t\"./prism-ftl.min\": [\n\t\t\"urwF\",\n\t\t131\n\t],\n\t\"./prism-ftl.min.js\": [\n\t\t\"urwF\",\n\t\t131\n\t],\n\t\"./prism-gcode\": [\n\t\t\"Q046\",\n\t\t132\n\t],\n\t\"./prism-gcode.js\": [\n\t\t\"Q046\",\n\t\t132\n\t],\n\t\"./prism-gcode.min\": [\n\t\t\"mQJc\",\n\t\t133\n\t],\n\t\"./prism-gcode.min.js\": [\n\t\t\"mQJc\",\n\t\t133\n\t],\n\t\"./prism-gdscript\": [\n\t\t\"Z7/u\",\n\t\t134\n\t],\n\t\"./prism-gdscript.js\": [\n\t\t\"Z7/u\",\n\t\t134\n\t],\n\t\"./prism-gdscript.min\": [\n\t\t\"7Jgu\",\n\t\t135\n\t],\n\t\"./prism-gdscript.min.js\": [\n\t\t\"7Jgu\",\n\t\t135\n\t],\n\t\"./prism-gedcom\": [\n\t\t\"qiXI\",\n\t\t136\n\t],\n\t\"./prism-gedcom.js\": [\n\t\t\"qiXI\",\n\t\t136\n\t],\n\t\"./prism-gedcom.min\": [\n\t\t\"6X6h\",\n\t\t137\n\t],\n\t\"./prism-gedcom.min.js\": [\n\t\t\"6X6h\",\n\t\t137\n\t],\n\t\"./prism-gherkin\": [\n\t\t\"PEIs\",\n\t\t138\n\t],\n\t\"./prism-gherkin.js\": [\n\t\t\"PEIs\",\n\t\t138\n\t],\n\t\"./prism-gherkin.min\": [\n\t\t\"wpE1\",\n\t\t139\n\t],\n\t\"./prism-gherkin.min.js\": [\n\t\t\"wpE1\",\n\t\t139\n\t],\n\t\"./prism-git\": [\n\t\t\"B6Nr\",\n\t\t140\n\t],\n\t\"./prism-git.js\": [\n\t\t\"B6Nr\",\n\t\t140\n\t],\n\t\"./prism-git.min\": [\n\t\t\"svzT\",\n\t\t141\n\t],\n\t\"./prism-git.min.js\": [\n\t\t\"svzT\",\n\t\t141\n\t],\n\t\"./prism-glsl\": [\n\t\t\"3xzq\",\n\t\t142\n\t],\n\t\"./prism-glsl.js\": [\n\t\t\"3xzq\",\n\t\t142\n\t],\n\t\"./prism-glsl.min\": [\n\t\t\"3VrA\",\n\t\t143\n\t],\n\t\"./prism-glsl.min.js\": [\n\t\t\"3VrA\",\n\t\t143\n\t],\n\t\"./prism-gml\": [\n\t\t\"gRcZ\",\n\t\t144\n\t],\n\t\"./prism-gml.js\": [\n\t\t\"gRcZ\",\n\t\t144\n\t],\n\t\"./prism-gml.min\": [\n\t\t\"+i99\",\n\t\t145\n\t],\n\t\"./prism-gml.min.js\": [\n\t\t\"+i99\",\n\t\t145\n\t],\n\t\"./prism-go\": [\n\t\t\"GYl3\",\n\t\t146\n\t],\n\t\"./prism-go.js\": [\n\t\t\"GYl3\",\n\t\t146\n\t],\n\t\"./prism-go.min\": [\n\t\t\"JT94\",\n\t\t147\n\t],\n\t\"./prism-go.min.js\": [\n\t\t\"JT94\",\n\t\t147\n\t],\n\t\"./prism-graphql\": [\n\t\t\"Y613\",\n\t\t148\n\t],\n\t\"./prism-graphql.js\": [\n\t\t\"Y613\",\n\t\t148\n\t],\n\t\"./prism-graphql.min\": [\n\t\t\"CYEG\",\n\t\t149\n\t],\n\t\"./prism-graphql.min.js\": [\n\t\t\"CYEG\",\n\t\t149\n\t],\n\t\"./prism-groovy\": [\n\t\t\"4l/p\",\n\t\t150\n\t],\n\t\"./prism-groovy.js\": [\n\t\t\"4l/p\",\n\t\t150\n\t],\n\t\"./prism-groovy.min\": [\n\t\t\"cjoo\",\n\t\t151\n\t],\n\t\"./prism-groovy.min.js\": [\n\t\t\"cjoo\",\n\t\t151\n\t],\n\t\"./prism-haml\": [\n\t\t\"weJn\",\n\t\t152\n\t],\n\t\"./prism-haml.js\": [\n\t\t\"weJn\",\n\t\t152\n\t],\n\t\"./prism-haml.min\": [\n\t\t\"qzw6\",\n\t\t153\n\t],\n\t\"./prism-haml.min.js\": [\n\t\t\"qzw6\",\n\t\t153\n\t],\n\t\"./prism-handlebars\": [\n\t\t\"5dm5\",\n\t\t154\n\t],\n\t\"./prism-handlebars.js\": [\n\t\t\"5dm5\",\n\t\t154\n\t],\n\t\"./prism-handlebars.min\": [\n\t\t\"PSow\",\n\t\t155\n\t],\n\t\"./prism-handlebars.min.js\": [\n\t\t\"PSow\",\n\t\t155\n\t],\n\t\"./prism-haskell\": [\n\t\t\"T8iE\",\n\t\t156\n\t],\n\t\"./prism-haskell.js\": [\n\t\t\"T8iE\",\n\t\t156\n\t],\n\t\"./prism-haskell.min\": [\n\t\t\"QuqC\",\n\t\t157\n\t],\n\t\"./prism-haskell.min.js\": [\n\t\t\"QuqC\",\n\t\t157\n\t],\n\t\"./prism-haxe\": [\n\t\t\"0WON\",\n\t\t158\n\t],\n\t\"./prism-haxe.js\": [\n\t\t\"0WON\",\n\t\t158\n\t],\n\t\"./prism-haxe.min\": [\n\t\t\"8lNV\",\n\t\t159\n\t],\n\t\"./prism-haxe.min.js\": [\n\t\t\"8lNV\",\n\t\t159\n\t],\n\t\"./prism-hcl\": [\n\t\t\"9pLb\",\n\t\t160\n\t],\n\t\"./prism-hcl.js\": [\n\t\t\"9pLb\",\n\t\t160\n\t],\n\t\"./prism-hcl.min\": [\n\t\t\"T2lk\",\n\t\t161\n\t],\n\t\"./prism-hcl.min.js\": [\n\t\t\"T2lk\",\n\t\t161\n\t],\n\t\"./prism-hlsl\": [\n\t\t\"ZZ/H\",\n\t\t162\n\t],\n\t\"./prism-hlsl.js\": [\n\t\t\"ZZ/H\",\n\t\t162\n\t],\n\t\"./prism-hlsl.min\": [\n\t\t\"eYpK\",\n\t\t163\n\t],\n\t\"./prism-hlsl.min.js\": [\n\t\t\"eYpK\",\n\t\t163\n\t],\n\t\"./prism-hpkp\": [\n\t\t\"zI6Y\",\n\t\t164\n\t],\n\t\"./prism-hpkp.js\": [\n\t\t\"zI6Y\",\n\t\t164\n\t],\n\t\"./prism-hpkp.min\": [\n\t\t\"i2Bp\",\n\t\t165\n\t],\n\t\"./prism-hpkp.min.js\": [\n\t\t\"i2Bp\",\n\t\t165\n\t],\n\t\"./prism-hsts\": [\n\t\t\"xdrT\",\n\t\t166\n\t],\n\t\"./prism-hsts.js\": [\n\t\t\"xdrT\",\n\t\t166\n\t],\n\t\"./prism-hsts.min\": [\n\t\t\"ZghX\",\n\t\t167\n\t],\n\t\"./prism-hsts.min.js\": [\n\t\t\"ZghX\",\n\t\t167\n\t],\n\t\"./prism-http\": [\n\t\t\"kYdm\",\n\t\t168\n\t],\n\t\"./prism-http.js\": [\n\t\t\"kYdm\",\n\t\t168\n\t],\n\t\"./prism-http.min\": [\n\t\t\"U+B9\",\n\t\t169\n\t],\n\t\"./prism-http.min.js\": [\n\t\t\"U+B9\",\n\t\t169\n\t],\n\t\"./prism-ichigojam\": [\n\t\t\"SN7l\",\n\t\t170\n\t],\n\t\"./prism-ichigojam.js\": [\n\t\t\"SN7l\",\n\t\t170\n\t],\n\t\"./prism-ichigojam.min\": [\n\t\t\"++u4\",\n\t\t171\n\t],\n\t\"./prism-ichigojam.min.js\": [\n\t\t\"++u4\",\n\t\t171\n\t],\n\t\"./prism-icon\": [\n\t\t\"dYyu\",\n\t\t172\n\t],\n\t\"./prism-icon.js\": [\n\t\t\"dYyu\",\n\t\t172\n\t],\n\t\"./prism-icon.min\": [\n\t\t\"68Nm\",\n\t\t173\n\t],\n\t\"./prism-icon.min.js\": [\n\t\t\"68Nm\",\n\t\t173\n\t],\n\t\"./prism-iecst\": [\n\t\t\"dC2J\",\n\t\t174\n\t],\n\t\"./prism-iecst.js\": [\n\t\t\"dC2J\",\n\t\t174\n\t],\n\t\"./prism-iecst.min\": [\n\t\t\"FAE3\",\n\t\t175\n\t],\n\t\"./prism-iecst.min.js\": [\n\t\t\"FAE3\",\n\t\t175\n\t],\n\t\"./prism-ignore\": [\n\t\t\"0sus\",\n\t\t176\n\t],\n\t\"./prism-ignore.js\": [\n\t\t\"0sus\",\n\t\t176\n\t],\n\t\"./prism-ignore.min\": [\n\t\t\"ptSg\",\n\t\t177\n\t],\n\t\"./prism-ignore.min.js\": [\n\t\t\"ptSg\",\n\t\t177\n\t],\n\t\"./prism-inform7\": [\n\t\t\"7d9O\",\n\t\t178\n\t],\n\t\"./prism-inform7.js\": [\n\t\t\"7d9O\",\n\t\t178\n\t],\n\t\"./prism-inform7.min\": [\n\t\t\"PB52\",\n\t\t179\n\t],\n\t\"./prism-inform7.min.js\": [\n\t\t\"PB52\",\n\t\t179\n\t],\n\t\"./prism-ini\": [\n\t\t\"vy4m\",\n\t\t180\n\t],\n\t\"./prism-ini.js\": [\n\t\t\"vy4m\",\n\t\t180\n\t],\n\t\"./prism-ini.min\": [\n\t\t\"rdcy\",\n\t\t181\n\t],\n\t\"./prism-ini.min.js\": [\n\t\t\"rdcy\",\n\t\t181\n\t],\n\t\"./prism-io\": [\n\t\t\"DB5f\",\n\t\t182\n\t],\n\t\"./prism-io.js\": [\n\t\t\"DB5f\",\n\t\t182\n\t],\n\t\"./prism-io.min\": [\n\t\t\"NHyX\",\n\t\t183\n\t],\n\t\"./prism-io.min.js\": [\n\t\t\"NHyX\",\n\t\t183\n\t],\n\t\"./prism-j\": [\n\t\t\"8XF4\",\n\t\t184\n\t],\n\t\"./prism-j.js\": [\n\t\t\"8XF4\",\n\t\t184\n\t],\n\t\"./prism-j.min\": [\n\t\t\"OGQG\",\n\t\t185\n\t],\n\t\"./prism-j.min.js\": [\n\t\t\"OGQG\",\n\t\t185\n\t],\n\t\"./prism-java\": [\n\t\t\"ki2X\",\n\t\t186\n\t],\n\t\"./prism-java.js\": [\n\t\t\"ki2X\",\n\t\t186\n\t],\n\t\"./prism-java.min\": [\n\t\t\"2NnL\",\n\t\t187\n\t],\n\t\"./prism-java.min.js\": [\n\t\t\"2NnL\",\n\t\t187\n\t],\n\t\"./prism-javadoc\": [\n\t\t\"PRNa\",\n\t\t188\n\t],\n\t\"./prism-javadoc.js\": [\n\t\t\"PRNa\",\n\t\t188\n\t],\n\t\"./prism-javadoc.min\": [\n\t\t\"haKv\",\n\t\t189\n\t],\n\t\"./prism-javadoc.min.js\": [\n\t\t\"haKv\",\n\t\t189\n\t],\n\t\"./prism-javadoclike\": [\n\t\t\"c11f\",\n\t\t190\n\t],\n\t\"./prism-javadoclike.js\": [\n\t\t\"c11f\",\n\t\t190\n\t],\n\t\"./prism-javadoclike.min\": [\n\t\t\"hKbW\",\n\t\t191\n\t],\n\t\"./prism-javadoclike.min.js\": [\n\t\t\"hKbW\",\n\t\t191\n\t],\n\t\"./prism-javascript\": [\n\t\t\"QWvX\",\n\t\t192\n\t],\n\t\"./prism-javascript.js\": [\n\t\t\"QWvX\",\n\t\t192\n\t],\n\t\"./prism-javascript.min\": [\n\t\t\"F8rA\",\n\t\t193\n\t],\n\t\"./prism-javascript.min.js\": [\n\t\t\"F8rA\",\n\t\t193\n\t],\n\t\"./prism-javastacktrace\": [\n\t\t\"tkzC\",\n\t\t194\n\t],\n\t\"./prism-javastacktrace.js\": [\n\t\t\"tkzC\",\n\t\t194\n\t],\n\t\"./prism-javastacktrace.min\": [\n\t\t\"nkUL\",\n\t\t195\n\t],\n\t\"./prism-javastacktrace.min.js\": [\n\t\t\"nkUL\",\n\t\t195\n\t],\n\t\"./prism-jolie\": [\n\t\t\"/27n\",\n\t\t196\n\t],\n\t\"./prism-jolie.js\": [\n\t\t\"/27n\",\n\t\t196\n\t],\n\t\"./prism-jolie.min\": [\n\t\t\"TuSZ\",\n\t\t197\n\t],\n\t\"./prism-jolie.min.js\": [\n\t\t\"TuSZ\",\n\t\t197\n\t],\n\t\"./prism-jq\": [\n\t\t\"uYYa\",\n\t\t198\n\t],\n\t\"./prism-jq.js\": [\n\t\t\"uYYa\",\n\t\t198\n\t],\n\t\"./prism-jq.min\": [\n\t\t\"NmqT\",\n\t\t199\n\t],\n\t\"./prism-jq.min.js\": [\n\t\t\"NmqT\",\n\t\t199\n\t],\n\t\"./prism-js-extras\": [\n\t\t\"+X5Q\",\n\t\t200\n\t],\n\t\"./prism-js-extras.js\": [\n\t\t\"+X5Q\",\n\t\t200\n\t],\n\t\"./prism-js-extras.min\": [\n\t\t\"Dzqq\",\n\t\t201\n\t],\n\t\"./prism-js-extras.min.js\": [\n\t\t\"Dzqq\",\n\t\t201\n\t],\n\t\"./prism-js-templates\": [\n\t\t\"O9Io\",\n\t\t202\n\t],\n\t\"./prism-js-templates.js\": [\n\t\t\"O9Io\",\n\t\t202\n\t],\n\t\"./prism-js-templates.min\": [\n\t\t\"MYhN\",\n\t\t203\n\t],\n\t\"./prism-js-templates.min.js\": [\n\t\t\"MYhN\",\n\t\t203\n\t],\n\t\"./prism-jsdoc\": [\n\t\t\"k4T/\",\n\t\t204\n\t],\n\t\"./prism-jsdoc.js\": [\n\t\t\"k4T/\",\n\t\t204\n\t],\n\t\"./prism-jsdoc.min\": [\n\t\t\"H/fb\",\n\t\t205\n\t],\n\t\"./prism-jsdoc.min.js\": [\n\t\t\"H/fb\",\n\t\t205\n\t],\n\t\"./prism-json\": [\n\t\t\"85O/\",\n\t\t206\n\t],\n\t\"./prism-json.js\": [\n\t\t\"85O/\",\n\t\t206\n\t],\n\t\"./prism-json.min\": [\n\t\t\"8U5G\",\n\t\t207\n\t],\n\t\"./prism-json.min.js\": [\n\t\t\"8U5G\",\n\t\t207\n\t],\n\t\"./prism-json5\": [\n\t\t\"R4Wz\",\n\t\t208\n\t],\n\t\"./prism-json5.js\": [\n\t\t\"R4Wz\",\n\t\t208\n\t],\n\t\"./prism-json5.min\": [\n\t\t\"aAW9\",\n\t\t209\n\t],\n\t\"./prism-json5.min.js\": [\n\t\t\"aAW9\",\n\t\t209\n\t],\n\t\"./prism-jsonp\": [\n\t\t\"MsKQ\",\n\t\t210\n\t],\n\t\"./prism-jsonp.js\": [\n\t\t\"MsKQ\",\n\t\t210\n\t],\n\t\"./prism-jsonp.min\": [\n\t\t\"gD7p\",\n\t\t211\n\t],\n\t\"./prism-jsonp.min.js\": [\n\t\t\"gD7p\",\n\t\t211\n\t],\n\t\"./prism-jsstacktrace\": [\n\t\t\"IqA8\",\n\t\t212\n\t],\n\t\"./prism-jsstacktrace.js\": [\n\t\t\"IqA8\",\n\t\t212\n\t],\n\t\"./prism-jsstacktrace.min\": [\n\t\t\"3ubN\",\n\t\t213\n\t],\n\t\"./prism-jsstacktrace.min.js\": [\n\t\t\"3ubN\",\n\t\t213\n\t],\n\t\"./prism-jsx\": [\n\t\t\"CjHp\",\n\t\t214\n\t],\n\t\"./prism-jsx.js\": [\n\t\t\"CjHp\",\n\t\t214\n\t],\n\t\"./prism-jsx.min\": [\n\t\t\"s4fy\",\n\t\t215\n\t],\n\t\"./prism-jsx.min.js\": [\n\t\t\"s4fy\",\n\t\t215\n\t],\n\t\"./prism-julia\": [\n\t\t\"5M+F\",\n\t\t216\n\t],\n\t\"./prism-julia.js\": [\n\t\t\"5M+F\",\n\t\t216\n\t],\n\t\"./prism-julia.min\": [\n\t\t\"ZUux\",\n\t\t217\n\t],\n\t\"./prism-julia.min.js\": [\n\t\t\"ZUux\",\n\t\t217\n\t],\n\t\"./prism-keyman\": [\n\t\t\"ST66\",\n\t\t218\n\t],\n\t\"./prism-keyman.js\": [\n\t\t\"ST66\",\n\t\t218\n\t],\n\t\"./prism-keyman.min\": [\n\t\t\"SsWp\",\n\t\t219\n\t],\n\t\"./prism-keyman.min.js\": [\n\t\t\"SsWp\",\n\t\t219\n\t],\n\t\"./prism-kotlin\": [\n\t\t\"ZM0j\",\n\t\t220\n\t],\n\t\"./prism-kotlin.js\": [\n\t\t\"ZM0j\",\n\t\t220\n\t],\n\t\"./prism-kotlin.min\": [\n\t\t\"x9vm\",\n\t\t221\n\t],\n\t\"./prism-kotlin.min.js\": [\n\t\t\"x9vm\",\n\t\t221\n\t],\n\t\"./prism-latex\": [\n\t\t\"u1v7\",\n\t\t222\n\t],\n\t\"./prism-latex.js\": [\n\t\t\"u1v7\",\n\t\t222\n\t],\n\t\"./prism-latex.min\": [\n\t\t\"8GbO\",\n\t\t223\n\t],\n\t\"./prism-latex.min.js\": [\n\t\t\"8GbO\",\n\t\t223\n\t],\n\t\"./prism-latte\": [\n\t\t\"Vj/u\",\n\t\t224\n\t],\n\t\"./prism-latte.js\": [\n\t\t\"Vj/u\",\n\t\t224\n\t],\n\t\"./prism-latte.min\": [\n\t\t\"PrI+\",\n\t\t225\n\t],\n\t\"./prism-latte.min.js\": [\n\t\t\"PrI+\",\n\t\t225\n\t],\n\t\"./prism-less\": [\n\t\t\"+fy4\",\n\t\t226\n\t],\n\t\"./prism-less.js\": [\n\t\t\"+fy4\",\n\t\t226\n\t],\n\t\"./prism-less.min\": [\n\t\t\"+Iwu\",\n\t\t227\n\t],\n\t\"./prism-less.min.js\": [\n\t\t\"+Iwu\",\n\t\t227\n\t],\n\t\"./prism-lilypond\": [\n\t\t\"HAjR\",\n\t\t228\n\t],\n\t\"./prism-lilypond.js\": [\n\t\t\"HAjR\",\n\t\t228\n\t],\n\t\"./prism-lilypond.min\": [\n\t\t\"rFDT\",\n\t\t229\n\t],\n\t\"./prism-lilypond.min.js\": [\n\t\t\"rFDT\",\n\t\t229\n\t],\n\t\"./prism-liquid\": [\n\t\t\"zxki\",\n\t\t230\n\t],\n\t\"./prism-liquid.js\": [\n\t\t\"zxki\",\n\t\t230\n\t],\n\t\"./prism-liquid.min\": [\n\t\t\"dQt3\",\n\t\t231\n\t],\n\t\"./prism-liquid.min.js\": [\n\t\t\"dQt3\",\n\t\t231\n\t],\n\t\"./prism-lisp\": [\n\t\t\"9IQp\",\n\t\t232\n\t],\n\t\"./prism-lisp.js\": [\n\t\t\"9IQp\",\n\t\t232\n\t],\n\t\"./prism-lisp.min\": [\n\t\t\"zW5F\",\n\t\t233\n\t],\n\t\"./prism-lisp.min.js\": [\n\t\t\"zW5F\",\n\t\t233\n\t],\n\t\"./prism-livescript\": [\n\t\t\"Ol/B\",\n\t\t234\n\t],\n\t\"./prism-livescript.js\": [\n\t\t\"Ol/B\",\n\t\t234\n\t],\n\t\"./prism-livescript.min\": [\n\t\t\"N1Py\",\n\t\t235\n\t],\n\t\"./prism-livescript.min.js\": [\n\t\t\"N1Py\",\n\t\t235\n\t],\n\t\"./prism-llvm\": [\n\t\t\"USa+\",\n\t\t236\n\t],\n\t\"./prism-llvm.js\": [\n\t\t\"USa+\",\n\t\t236\n\t],\n\t\"./prism-llvm.min\": [\n\t\t\"i3Qe\",\n\t\t237\n\t],\n\t\"./prism-llvm.min.js\": [\n\t\t\"i3Qe\",\n\t\t237\n\t],\n\t\"./prism-lolcode\": [\n\t\t\"hnL7\",\n\t\t238\n\t],\n\t\"./prism-lolcode.js\": [\n\t\t\"hnL7\",\n\t\t238\n\t],\n\t\"./prism-lolcode.min\": [\n\t\t\"M0SF\",\n\t\t239\n\t],\n\t\"./prism-lolcode.min.js\": [\n\t\t\"M0SF\",\n\t\t239\n\t],\n\t\"./prism-lua\": [\n\t\t\"ZwEA\",\n\t\t240\n\t],\n\t\"./prism-lua.js\": [\n\t\t\"ZwEA\",\n\t\t240\n\t],\n\t\"./prism-lua.min\": [\n\t\t\"qkUO\",\n\t\t241\n\t],\n\t\"./prism-lua.min.js\": [\n\t\t\"qkUO\",\n\t\t241\n\t],\n\t\"./prism-makefile\": [\n\t\t\"DV0F\",\n\t\t242\n\t],\n\t\"./prism-makefile.js\": [\n\t\t\"DV0F\",\n\t\t242\n\t],\n\t\"./prism-makefile.min\": [\n\t\t\"ftGy\",\n\t\t243\n\t],\n\t\"./prism-makefile.min.js\": [\n\t\t\"ftGy\",\n\t\t243\n\t],\n\t\"./prism-markdown\": [\n\t\t\"gmzG\"\n\t],\n\t\"./prism-markdown.js\": [\n\t\t\"gmzG\"\n\t],\n\t\"./prism-markdown.min\": [\n\t\t\"9seO\",\n\t\t244\n\t],\n\t\"./prism-markdown.min.js\": [\n\t\t\"9seO\",\n\t\t244\n\t],\n\t\"./prism-markup\": [\n\t\t\"bPOv\"\n\t],\n\t\"./prism-markup-templating\": [\n\t\t\"Yhcd\",\n\t\t245\n\t],\n\t\"./prism-markup-templating.js\": [\n\t\t\"Yhcd\",\n\t\t245\n\t],\n\t\"./prism-markup-templating.min\": [\n\t\t\"1p9r\",\n\t\t246\n\t],\n\t\"./prism-markup-templating.min.js\": [\n\t\t\"1p9r\",\n\t\t246\n\t],\n\t\"./prism-markup.js\": [\n\t\t\"bPOv\"\n\t],\n\t\"./prism-markup.min\": [\n\t\t\"/Des\",\n\t\t247\n\t],\n\t\"./prism-markup.min.js\": [\n\t\t\"/Des\",\n\t\t247\n\t],\n\t\"./prism-matlab\": [\n\t\t\"1NVV\",\n\t\t248\n\t],\n\t\"./prism-matlab.js\": [\n\t\t\"1NVV\",\n\t\t248\n\t],\n\t\"./prism-matlab.min\": [\n\t\t\"Wmu2\",\n\t\t249\n\t],\n\t\"./prism-matlab.min.js\": [\n\t\t\"Wmu2\",\n\t\t249\n\t],\n\t\"./prism-mel\": [\n\t\t\"+ZwH\",\n\t\t250\n\t],\n\t\"./prism-mel.js\": [\n\t\t\"+ZwH\",\n\t\t250\n\t],\n\t\"./prism-mel.min\": [\n\t\t\"uMZe\",\n\t\t251\n\t],\n\t\"./prism-mel.min.js\": [\n\t\t\"uMZe\",\n\t\t251\n\t],\n\t\"./prism-mizar\": [\n\t\t\"ReX+\",\n\t\t252\n\t],\n\t\"./prism-mizar.js\": [\n\t\t\"ReX+\",\n\t\t252\n\t],\n\t\"./prism-mizar.min\": [\n\t\t\"0JwH\",\n\t\t253\n\t],\n\t\"./prism-mizar.min.js\": [\n\t\t\"0JwH\",\n\t\t253\n\t],\n\t\"./prism-monkey\": [\n\t\t\"BbjY\",\n\t\t254\n\t],\n\t\"./prism-monkey.js\": [\n\t\t\"BbjY\",\n\t\t254\n\t],\n\t\"./prism-monkey.min\": [\n\t\t\"S0he\",\n\t\t255\n\t],\n\t\"./prism-monkey.min.js\": [\n\t\t\"S0he\",\n\t\t255\n\t],\n\t\"./prism-moonscript\": [\n\t\t\"6Kvp\",\n\t\t256\n\t],\n\t\"./prism-moonscript.js\": [\n\t\t\"6Kvp\",\n\t\t256\n\t],\n\t\"./prism-moonscript.min\": [\n\t\t\"YmzF\",\n\t\t257\n\t],\n\t\"./prism-moonscript.min.js\": [\n\t\t\"YmzF\",\n\t\t257\n\t],\n\t\"./prism-n1ql\": [\n\t\t\"YL/C\",\n\t\t258\n\t],\n\t\"./prism-n1ql.js\": [\n\t\t\"YL/C\",\n\t\t258\n\t],\n\t\"./prism-n1ql.min\": [\n\t\t\"pbz6\",\n\t\t259\n\t],\n\t\"./prism-n1ql.min.js\": [\n\t\t\"pbz6\",\n\t\t259\n\t],\n\t\"./prism-n4js\": [\n\t\t\"dgIA\",\n\t\t260\n\t],\n\t\"./prism-n4js.js\": [\n\t\t\"dgIA\",\n\t\t260\n\t],\n\t\"./prism-n4js.min\": [\n\t\t\"ThO0\",\n\t\t261\n\t],\n\t\"./prism-n4js.min.js\": [\n\t\t\"ThO0\",\n\t\t261\n\t],\n\t\"./prism-nand2tetris-hdl\": [\n\t\t\"jjUo\",\n\t\t262\n\t],\n\t\"./prism-nand2tetris-hdl.js\": [\n\t\t\"jjUo\",\n\t\t262\n\t],\n\t\"./prism-nand2tetris-hdl.min\": [\n\t\t\"ApWF\",\n\t\t263\n\t],\n\t\"./prism-nand2tetris-hdl.min.js\": [\n\t\t\"ApWF\",\n\t\t263\n\t],\n\t\"./prism-nasm\": [\n\t\t\"h7LQ\",\n\t\t264\n\t],\n\t\"./prism-nasm.js\": [\n\t\t\"h7LQ\",\n\t\t264\n\t],\n\t\"./prism-nasm.min\": [\n\t\t\"tP6A\",\n\t\t265\n\t],\n\t\"./prism-nasm.min.js\": [\n\t\t\"tP6A\",\n\t\t265\n\t],\n\t\"./prism-neon\": [\n\t\t\"bDPX\",\n\t\t266\n\t],\n\t\"./prism-neon.js\": [\n\t\t\"bDPX\",\n\t\t266\n\t],\n\t\"./prism-neon.min\": [\n\t\t\"b0j2\",\n\t\t267\n\t],\n\t\"./prism-neon.min.js\": [\n\t\t\"b0j2\",\n\t\t267\n\t],\n\t\"./prism-nginx\": [\n\t\t\"oNmE\",\n\t\t268\n\t],\n\t\"./prism-nginx.js\": [\n\t\t\"oNmE\",\n\t\t268\n\t],\n\t\"./prism-nginx.min\": [\n\t\t\"3o8k\",\n\t\t269\n\t],\n\t\"./prism-nginx.min.js\": [\n\t\t\"3o8k\",\n\t\t269\n\t],\n\t\"./prism-nim\": [\n\t\t\"8sAH\",\n\t\t270\n\t],\n\t\"./prism-nim.js\": [\n\t\t\"8sAH\",\n\t\t270\n\t],\n\t\"./prism-nim.min\": [\n\t\t\"9yTW\",\n\t\t271\n\t],\n\t\"./prism-nim.min.js\": [\n\t\t\"9yTW\",\n\t\t271\n\t],\n\t\"./prism-nix\": [\n\t\t\"r4a2\",\n\t\t272\n\t],\n\t\"./prism-nix.js\": [\n\t\t\"r4a2\",\n\t\t272\n\t],\n\t\"./prism-nix.min\": [\n\t\t\"GPNq\",\n\t\t273\n\t],\n\t\"./prism-nix.min.js\": [\n\t\t\"GPNq\",\n\t\t273\n\t],\n\t\"./prism-nsis\": [\n\t\t\"TUlN\",\n\t\t274\n\t],\n\t\"./prism-nsis.js\": [\n\t\t\"TUlN\",\n\t\t274\n\t],\n\t\"./prism-nsis.min\": [\n\t\t\"pqW/\",\n\t\t275\n\t],\n\t\"./prism-nsis.min.js\": [\n\t\t\"pqW/\",\n\t\t275\n\t],\n\t\"./prism-objectivec\": [\n\t\t\"TL9f\",\n\t\t276\n\t],\n\t\"./prism-objectivec.js\": [\n\t\t\"TL9f\",\n\t\t276\n\t],\n\t\"./prism-objectivec.min\": [\n\t\t\"vzhw\",\n\t\t277\n\t],\n\t\"./prism-objectivec.min.js\": [\n\t\t\"vzhw\",\n\t\t277\n\t],\n\t\"./prism-ocaml\": [\n\t\t\"bEZN\",\n\t\t278\n\t],\n\t\"./prism-ocaml.js\": [\n\t\t\"bEZN\",\n\t\t278\n\t],\n\t\"./prism-ocaml.min\": [\n\t\t\"FCFW\",\n\t\t279\n\t],\n\t\"./prism-ocaml.min.js\": [\n\t\t\"FCFW\",\n\t\t279\n\t],\n\t\"./prism-opencl\": [\n\t\t\"YT+k\",\n\t\t280\n\t],\n\t\"./prism-opencl.js\": [\n\t\t\"YT+k\",\n\t\t280\n\t],\n\t\"./prism-opencl.min\": [\n\t\t\"DBTv\",\n\t\t281\n\t],\n\t\"./prism-opencl.min.js\": [\n\t\t\"DBTv\",\n\t\t281\n\t],\n\t\"./prism-oz\": [\n\t\t\"9xB9\",\n\t\t282\n\t],\n\t\"./prism-oz.js\": [\n\t\t\"9xB9\",\n\t\t282\n\t],\n\t\"./prism-oz.min\": [\n\t\t\"fRdp\",\n\t\t283\n\t],\n\t\"./prism-oz.min.js\": [\n\t\t\"fRdp\",\n\t\t283\n\t],\n\t\"./prism-parigp\": [\n\t\t\"GF4Z\",\n\t\t284\n\t],\n\t\"./prism-parigp.js\": [\n\t\t\"GF4Z\",\n\t\t284\n\t],\n\t\"./prism-parigp.min\": [\n\t\t\"nasO\",\n\t\t285\n\t],\n\t\"./prism-parigp.min.js\": [\n\t\t\"nasO\",\n\t\t285\n\t],\n\t\"./prism-parser\": [\n\t\t\"xdtV\",\n\t\t286\n\t],\n\t\"./prism-parser.js\": [\n\t\t\"xdtV\",\n\t\t286\n\t],\n\t\"./prism-parser.min\": [\n\t\t\"+M5j\",\n\t\t287\n\t],\n\t\"./prism-parser.min.js\": [\n\t\t\"+M5j\",\n\t\t287\n\t],\n\t\"./prism-pascal\": [\n\t\t\"Nuiu\",\n\t\t288\n\t],\n\t\"./prism-pascal.js\": [\n\t\t\"Nuiu\",\n\t\t288\n\t],\n\t\"./prism-pascal.min\": [\n\t\t\"NzNO\",\n\t\t289\n\t],\n\t\"./prism-pascal.min.js\": [\n\t\t\"NzNO\",\n\t\t289\n\t],\n\t\"./prism-pascaligo\": [\n\t\t\"F0Kw\",\n\t\t290\n\t],\n\t\"./prism-pascaligo.js\": [\n\t\t\"F0Kw\",\n\t\t290\n\t],\n\t\"./prism-pascaligo.min\": [\n\t\t\"09pL\",\n\t\t291\n\t],\n\t\"./prism-pascaligo.min.js\": [\n\t\t\"09pL\",\n\t\t291\n\t],\n\t\"./prism-pcaxis\": [\n\t\t\"gA1E\",\n\t\t292\n\t],\n\t\"./prism-pcaxis.js\": [\n\t\t\"gA1E\",\n\t\t292\n\t],\n\t\"./prism-pcaxis.min\": [\n\t\t\"ejCP\",\n\t\t293\n\t],\n\t\"./prism-pcaxis.min.js\": [\n\t\t\"ejCP\",\n\t\t293\n\t],\n\t\"./prism-peoplecode\": [\n\t\t\"5625\",\n\t\t294\n\t],\n\t\"./prism-peoplecode.js\": [\n\t\t\"5625\",\n\t\t294\n\t],\n\t\"./prism-peoplecode.min\": [\n\t\t\"Kxp8\",\n\t\t295\n\t],\n\t\"./prism-peoplecode.min.js\": [\n\t\t\"Kxp8\",\n\t\t295\n\t],\n\t\"./prism-perl\": [\n\t\t\"mR1r\",\n\t\t296\n\t],\n\t\"./prism-perl.js\": [\n\t\t\"mR1r\",\n\t\t296\n\t],\n\t\"./prism-perl.min\": [\n\t\t\"yYpj\",\n\t\t297\n\t],\n\t\"./prism-perl.min.js\": [\n\t\t\"yYpj\",\n\t\t297\n\t],\n\t\"./prism-php\": [\n\t\t\"jpss\",\n\t\t300\n\t],\n\t\"./prism-php-extras\": [\n\t\t\"VZmW\",\n\t\t298\n\t],\n\t\"./prism-php-extras.js\": [\n\t\t\"VZmW\",\n\t\t298\n\t],\n\t\"./prism-php-extras.min\": [\n\t\t\"10iB\",\n\t\t299\n\t],\n\t\"./prism-php-extras.min.js\": [\n\t\t\"10iB\",\n\t\t299\n\t],\n\t\"./prism-php.js\": [\n\t\t\"jpss\",\n\t\t300\n\t],\n\t\"./prism-php.min\": [\n\t\t\"rmha\",\n\t\t301\n\t],\n\t\"./prism-php.min.js\": [\n\t\t\"rmha\",\n\t\t301\n\t],\n\t\"./prism-phpdoc\": [\n\t\t\"pC7O\",\n\t\t302\n\t],\n\t\"./prism-phpdoc.js\": [\n\t\t\"pC7O\",\n\t\t302\n\t],\n\t\"./prism-phpdoc.min\": [\n\t\t\"FLKr\",\n\t\t303\n\t],\n\t\"./prism-phpdoc.min.js\": [\n\t\t\"FLKr\",\n\t\t303\n\t],\n\t\"./prism-plsql\": [\n\t\t\"4MSv\",\n\t\t304\n\t],\n\t\"./prism-plsql.js\": [\n\t\t\"4MSv\",\n\t\t304\n\t],\n\t\"./prism-plsql.min\": [\n\t\t\"DwVn\",\n\t\t305\n\t],\n\t\"./prism-plsql.min.js\": [\n\t\t\"DwVn\",\n\t\t305\n\t],\n\t\"./prism-powerquery\": [\n\t\t\"wqKI\",\n\t\t306\n\t],\n\t\"./prism-powerquery.js\": [\n\t\t\"wqKI\",\n\t\t306\n\t],\n\t\"./prism-powerquery.min\": [\n\t\t\"eCR+\",\n\t\t307\n\t],\n\t\"./prism-powerquery.min.js\": [\n\t\t\"eCR+\",\n\t\t307\n\t],\n\t\"./prism-powershell\": [\n\t\t\"OuMq\",\n\t\t308\n\t],\n\t\"./prism-powershell.js\": [\n\t\t\"OuMq\",\n\t\t308\n\t],\n\t\"./prism-powershell.min\": [\n\t\t\"EpDr\",\n\t\t309\n\t],\n\t\"./prism-powershell.min.js\": [\n\t\t\"EpDr\",\n\t\t309\n\t],\n\t\"./prism-processing\": [\n\t\t\"8oPf\",\n\t\t310\n\t],\n\t\"./prism-processing.js\": [\n\t\t\"8oPf\",\n\t\t310\n\t],\n\t\"./prism-processing.min\": [\n\t\t\"grcN\",\n\t\t311\n\t],\n\t\"./prism-processing.min.js\": [\n\t\t\"grcN\",\n\t\t311\n\t],\n\t\"./prism-prolog\": [\n\t\t\"RzVo\",\n\t\t312\n\t],\n\t\"./prism-prolog.js\": [\n\t\t\"RzVo\",\n\t\t312\n\t],\n\t\"./prism-prolog.min\": [\n\t\t\"k5y/\",\n\t\t313\n\t],\n\t\"./prism-prolog.min.js\": [\n\t\t\"k5y/\",\n\t\t313\n\t],\n\t\"./prism-properties\": [\n\t\t\"9wRM\",\n\t\t314\n\t],\n\t\"./prism-properties.js\": [\n\t\t\"9wRM\",\n\t\t314\n\t],\n\t\"./prism-properties.min\": [\n\t\t\"S/0g\",\n\t\t315\n\t],\n\t\"./prism-properties.min.js\": [\n\t\t\"S/0g\",\n\t\t315\n\t],\n\t\"./prism-protobuf\": [\n\t\t\"RZ5y\",\n\t\t316\n\t],\n\t\"./prism-protobuf.js\": [\n\t\t\"RZ5y\",\n\t\t316\n\t],\n\t\"./prism-protobuf.min\": [\n\t\t\"vJkb\",\n\t\t317\n\t],\n\t\"./prism-protobuf.min.js\": [\n\t\t\"vJkb\",\n\t\t317\n\t],\n\t\"./prism-pug\": [\n\t\t\"dVlL\",\n\t\t318\n\t],\n\t\"./prism-pug.js\": [\n\t\t\"dVlL\",\n\t\t318\n\t],\n\t\"./prism-pug.min\": [\n\t\t\"hAa5\",\n\t\t319\n\t],\n\t\"./prism-pug.min.js\": [\n\t\t\"hAa5\",\n\t\t319\n\t],\n\t\"./prism-puppet\": [\n\t\t\"vyez\",\n\t\t320\n\t],\n\t\"./prism-puppet.js\": [\n\t\t\"vyez\",\n\t\t320\n\t],\n\t\"./prism-puppet.min\": [\n\t\t\"oQl/\",\n\t\t321\n\t],\n\t\"./prism-puppet.min.js\": [\n\t\t\"oQl/\",\n\t\t321\n\t],\n\t\"./prism-pure\": [\n\t\t\"V9il\",\n\t\t322\n\t],\n\t\"./prism-pure.js\": [\n\t\t\"V9il\",\n\t\t322\n\t],\n\t\"./prism-pure.min\": [\n\t\t\"hamh\",\n\t\t323\n\t],\n\t\"./prism-pure.min.js\": [\n\t\t\"hamh\",\n\t\t323\n\t],\n\t\"./prism-purebasic\": [\n\t\t\"Q+2V\",\n\t\t324\n\t],\n\t\"./prism-purebasic.js\": [\n\t\t\"Q+2V\",\n\t\t324\n\t],\n\t\"./prism-purebasic.min\": [\n\t\t\"Wset\",\n\t\t325\n\t],\n\t\"./prism-purebasic.min.js\": [\n\t\t\"Wset\",\n\t\t325\n\t],\n\t\"./prism-python\": [\n\t\t\"PSGn\",\n\t\t326\n\t],\n\t\"./prism-python.js\": [\n\t\t\"PSGn\",\n\t\t326\n\t],\n\t\"./prism-python.min\": [\n\t\t\"j9EP\",\n\t\t327\n\t],\n\t\"./prism-python.min.js\": [\n\t\t\"j9EP\",\n\t\t327\n\t],\n\t\"./prism-q\": [\n\t\t\"aTfN\",\n\t\t328\n\t],\n\t\"./prism-q.js\": [\n\t\t\"aTfN\",\n\t\t328\n\t],\n\t\"./prism-q.min\": [\n\t\t\"34Jf\",\n\t\t329\n\t],\n\t\"./prism-q.min.js\": [\n\t\t\"34Jf\",\n\t\t329\n\t],\n\t\"./prism-qml\": [\n\t\t\"Ka68\",\n\t\t330\n\t],\n\t\"./prism-qml.js\": [\n\t\t\"Ka68\",\n\t\t330\n\t],\n\t\"./prism-qml.min\": [\n\t\t\"k6Ku\",\n\t\t331\n\t],\n\t\"./prism-qml.min.js\": [\n\t\t\"k6Ku\",\n\t\t331\n\t],\n\t\"./prism-qore\": [\n\t\t\"+qzQ\",\n\t\t332\n\t],\n\t\"./prism-qore.js\": [\n\t\t\"+qzQ\",\n\t\t332\n\t],\n\t\"./prism-qore.min\": [\n\t\t\"J+n1\",\n\t\t333\n\t],\n\t\"./prism-qore.min.js\": [\n\t\t\"J+n1\",\n\t\t333\n\t],\n\t\"./prism-r\": [\n\t\t\"Scwt\",\n\t\t334\n\t],\n\t\"./prism-r.js\": [\n\t\t\"Scwt\",\n\t\t334\n\t],\n\t\"./prism-r.min\": [\n\t\t\"KoO8\",\n\t\t335\n\t],\n\t\"./prism-r.min.js\": [\n\t\t\"KoO8\",\n\t\t335\n\t],\n\t\"./prism-racket\": [\n\t\t\"9du4\",\n\t\t336\n\t],\n\t\"./prism-racket.js\": [\n\t\t\"9du4\",\n\t\t336\n\t],\n\t\"./prism-racket.min\": [\n\t\t\"l0ah\",\n\t\t337\n\t],\n\t\"./prism-racket.min.js\": [\n\t\t\"l0ah\",\n\t\t337\n\t],\n\t\"./prism-reason\": [\n\t\t\"YD4P\",\n\t\t338\n\t],\n\t\"./prism-reason.js\": [\n\t\t\"YD4P\",\n\t\t338\n\t],\n\t\"./prism-reason.min\": [\n\t\t\"RkqP\",\n\t\t339\n\t],\n\t\"./prism-reason.min.js\": [\n\t\t\"RkqP\",\n\t\t339\n\t],\n\t\"./prism-regex\": [\n\t\t\"uM+M\",\n\t\t340\n\t],\n\t\"./prism-regex.js\": [\n\t\t\"uM+M\",\n\t\t340\n\t],\n\t\"./prism-regex.min\": [\n\t\t\"kjsO\",\n\t\t341\n\t],\n\t\"./prism-regex.min.js\": [\n\t\t\"kjsO\",\n\t\t341\n\t],\n\t\"./prism-renpy\": [\n\t\t\"Nhn9\",\n\t\t342\n\t],\n\t\"./prism-renpy.js\": [\n\t\t\"Nhn9\",\n\t\t342\n\t],\n\t\"./prism-renpy.min\": [\n\t\t\"mfpq\",\n\t\t343\n\t],\n\t\"./prism-renpy.min.js\": [\n\t\t\"mfpq\",\n\t\t343\n\t],\n\t\"./prism-rest\": [\n\t\t\"b7ok\",\n\t\t344\n\t],\n\t\"./prism-rest.js\": [\n\t\t\"b7ok\",\n\t\t344\n\t],\n\t\"./prism-rest.min\": [\n\t\t\"oqii\",\n\t\t345\n\t],\n\t\"./prism-rest.min.js\": [\n\t\t\"oqii\",\n\t\t345\n\t],\n\t\"./prism-rip\": [\n\t\t\"EHpB\",\n\t\t346\n\t],\n\t\"./prism-rip.js\": [\n\t\t\"EHpB\",\n\t\t346\n\t],\n\t\"./prism-rip.min\": [\n\t\t\"e7hJ\",\n\t\t347\n\t],\n\t\"./prism-rip.min.js\": [\n\t\t\"e7hJ\",\n\t\t347\n\t],\n\t\"./prism-roboconf\": [\n\t\t\"6GGF\",\n\t\t348\n\t],\n\t\"./prism-roboconf.js\": [\n\t\t\"6GGF\",\n\t\t348\n\t],\n\t\"./prism-roboconf.min\": [\n\t\t\"I4Uk\",\n\t\t349\n\t],\n\t\"./prism-roboconf.min.js\": [\n\t\t\"I4Uk\",\n\t\t349\n\t],\n\t\"./prism-robotframework\": [\n\t\t\"ceB4\",\n\t\t350\n\t],\n\t\"./prism-robotframework.js\": [\n\t\t\"ceB4\",\n\t\t350\n\t],\n\t\"./prism-robotframework.min\": [\n\t\t\"KrwZ\",\n\t\t351\n\t],\n\t\"./prism-robotframework.min.js\": [\n\t\t\"KrwZ\",\n\t\t351\n\t],\n\t\"./prism-ruby\": [\n\t\t\"sTAn\",\n\t\t352\n\t],\n\t\"./prism-ruby.js\": [\n\t\t\"sTAn\",\n\t\t352\n\t],\n\t\"./prism-ruby.min\": [\n\t\t\"M3bB\",\n\t\t353\n\t],\n\t\"./prism-ruby.min.js\": [\n\t\t\"M3bB\",\n\t\t353\n\t],\n\t\"./prism-rust\": [\n\t\t\"BHca\",\n\t\t354\n\t],\n\t\"./prism-rust.js\": [\n\t\t\"BHca\",\n\t\t354\n\t],\n\t\"./prism-rust.min\": [\n\t\t\"qwOm\",\n\t\t355\n\t],\n\t\"./prism-rust.min.js\": [\n\t\t\"qwOm\",\n\t\t355\n\t],\n\t\"./prism-sas\": [\n\t\t\"8sVL\",\n\t\t356\n\t],\n\t\"./prism-sas.js\": [\n\t\t\"8sVL\",\n\t\t356\n\t],\n\t\"./prism-sas.min\": [\n\t\t\"zG6a\",\n\t\t357\n\t],\n\t\"./prism-sas.min.js\": [\n\t\t\"zG6a\",\n\t\t357\n\t],\n\t\"./prism-sass\": [\n\t\t\"eWXi\",\n\t\t358\n\t],\n\t\"./prism-sass.js\": [\n\t\t\"eWXi\",\n\t\t358\n\t],\n\t\"./prism-sass.min\": [\n\t\t\"Hls3\",\n\t\t359\n\t],\n\t\"./prism-sass.min.js\": [\n\t\t\"Hls3\",\n\t\t359\n\t],\n\t\"./prism-scala\": [\n\t\t\"KTUv\",\n\t\t360\n\t],\n\t\"./prism-scala.js\": [\n\t\t\"KTUv\",\n\t\t360\n\t],\n\t\"./prism-scala.min\": [\n\t\t\"qKm0\",\n\t\t361\n\t],\n\t\"./prism-scala.min.js\": [\n\t\t\"qKm0\",\n\t\t361\n\t],\n\t\"./prism-scheme\": [\n\t\t\"cZAW\",\n\t\t362\n\t],\n\t\"./prism-scheme.js\": [\n\t\t\"cZAW\",\n\t\t362\n\t],\n\t\"./prism-scheme.min\": [\n\t\t\"ELev\",\n\t\t363\n\t],\n\t\"./prism-scheme.min.js\": [\n\t\t\"ELev\",\n\t\t363\n\t],\n\t\"./prism-scss\": [\n\t\t\"hnpa\",\n\t\t364\n\t],\n\t\"./prism-scss.js\": [\n\t\t\"hnpa\",\n\t\t364\n\t],\n\t\"./prism-scss.min\": [\n\t\t\"cMve\",\n\t\t365\n\t],\n\t\"./prism-scss.min.js\": [\n\t\t\"cMve\",\n\t\t365\n\t],\n\t\"./prism-shell-session\": [\n\t\t\"q/gI\",\n\t\t366\n\t],\n\t\"./prism-shell-session.js\": [\n\t\t\"q/gI\",\n\t\t366\n\t],\n\t\"./prism-shell-session.min\": [\n\t\t\"6yCm\",\n\t\t367\n\t],\n\t\"./prism-shell-session.min.js\": [\n\t\t\"6yCm\",\n\t\t367\n\t],\n\t\"./prism-smali\": [\n\t\t\"RehC\",\n\t\t368\n\t],\n\t\"./prism-smali.js\": [\n\t\t\"RehC\",\n\t\t368\n\t],\n\t\"./prism-smali.min\": [\n\t\t\"jpcp\",\n\t\t369\n\t],\n\t\"./prism-smali.min.js\": [\n\t\t\"jpcp\",\n\t\t369\n\t],\n\t\"./prism-smalltalk\": [\n\t\t\"cnKv\",\n\t\t370\n\t],\n\t\"./prism-smalltalk.js\": [\n\t\t\"cnKv\",\n\t\t370\n\t],\n\t\"./prism-smalltalk.min\": [\n\t\t\"amOI\",\n\t\t371\n\t],\n\t\"./prism-smalltalk.min.js\": [\n\t\t\"amOI\",\n\t\t371\n\t],\n\t\"./prism-smarty\": [\n\t\t\"+EFr\",\n\t\t372\n\t],\n\t\"./prism-smarty.js\": [\n\t\t\"+EFr\",\n\t\t372\n\t],\n\t\"./prism-smarty.min\": [\n\t\t\"WM3c\",\n\t\t373\n\t],\n\t\"./prism-smarty.min.js\": [\n\t\t\"WM3c\",\n\t\t373\n\t],\n\t\"./prism-solidity\": [\n\t\t\"gV2Z\",\n\t\t374\n\t],\n\t\"./prism-solidity.js\": [\n\t\t\"gV2Z\",\n\t\t374\n\t],\n\t\"./prism-solidity.min\": [\n\t\t\"rE9J\",\n\t\t375\n\t],\n\t\"./prism-solidity.min.js\": [\n\t\t\"rE9J\",\n\t\t375\n\t],\n\t\"./prism-solution-file\": [\n\t\t\"/s04\",\n\t\t376\n\t],\n\t\"./prism-solution-file.js\": [\n\t\t\"/s04\",\n\t\t376\n\t],\n\t\"./prism-solution-file.min\": [\n\t\t\"M2CX\",\n\t\t377\n\t],\n\t\"./prism-solution-file.min.js\": [\n\t\t\"M2CX\",\n\t\t377\n\t],\n\t\"./prism-soy\": [\n\t\t\"6c1m\",\n\t\t378\n\t],\n\t\"./prism-soy.js\": [\n\t\t\"6c1m\",\n\t\t378\n\t],\n\t\"./prism-soy.min\": [\n\t\t\"giDi\",\n\t\t379\n\t],\n\t\"./prism-soy.min.js\": [\n\t\t\"giDi\",\n\t\t379\n\t],\n\t\"./prism-sparql\": [\n\t\t\"cGNI\",\n\t\t380\n\t],\n\t\"./prism-sparql.js\": [\n\t\t\"cGNI\",\n\t\t380\n\t],\n\t\"./prism-sparql.min\": [\n\t\t\"6e2u\",\n\t\t381\n\t],\n\t\"./prism-sparql.min.js\": [\n\t\t\"6e2u\",\n\t\t381\n\t],\n\t\"./prism-splunk-spl\": [\n\t\t\"rGpf\",\n\t\t382\n\t],\n\t\"./prism-splunk-spl.js\": [\n\t\t\"rGpf\",\n\t\t382\n\t],\n\t\"./prism-splunk-spl.min\": [\n\t\t\"HRg0\",\n\t\t383\n\t],\n\t\"./prism-splunk-spl.min.js\": [\n\t\t\"HRg0\",\n\t\t383\n\t],\n\t\"./prism-sqf\": [\n\t\t\"27LU\",\n\t\t384\n\t],\n\t\"./prism-sqf.js\": [\n\t\t\"27LU\",\n\t\t384\n\t],\n\t\"./prism-sqf.min\": [\n\t\t\"nT9m\",\n\t\t385\n\t],\n\t\"./prism-sqf.min.js\": [\n\t\t\"nT9m\",\n\t\t385\n\t],\n\t\"./prism-sql\": [\n\t\t\"r4oG\",\n\t\t386\n\t],\n\t\"./prism-sql.js\": [\n\t\t\"r4oG\",\n\t\t386\n\t],\n\t\"./prism-sql.min\": [\n\t\t\"o5Wf\",\n\t\t387\n\t],\n\t\"./prism-sql.min.js\": [\n\t\t\"o5Wf\",\n\t\t387\n\t],\n\t\"./prism-stylus\": [\n\t\t\"NymF\",\n\t\t388\n\t],\n\t\"./prism-stylus.js\": [\n\t\t\"NymF\",\n\t\t388\n\t],\n\t\"./prism-stylus.min\": [\n\t\t\"BAi2\",\n\t\t389\n\t],\n\t\"./prism-stylus.min.js\": [\n\t\t\"BAi2\",\n\t\t389\n\t],\n\t\"./prism-swift\": [\n\t\t\"6cul\",\n\t\t390\n\t],\n\t\"./prism-swift.js\": [\n\t\t\"6cul\",\n\t\t390\n\t],\n\t\"./prism-swift.min\": [\n\t\t\"BGnD\",\n\t\t391\n\t],\n\t\"./prism-swift.min.js\": [\n\t\t\"BGnD\",\n\t\t391\n\t],\n\t\"./prism-t4-cs\": [\n\t\t\"TAbw\",\n\t\t392\n\t],\n\t\"./prism-t4-cs.js\": [\n\t\t\"TAbw\",\n\t\t392\n\t],\n\t\"./prism-t4-cs.min\": [\n\t\t\"/bWb\",\n\t\t393\n\t],\n\t\"./prism-t4-cs.min.js\": [\n\t\t\"/bWb\",\n\t\t393\n\t],\n\t\"./prism-t4-templating\": [\n\t\t\"CTf8\",\n\t\t394\n\t],\n\t\"./prism-t4-templating.js\": [\n\t\t\"CTf8\",\n\t\t394\n\t],\n\t\"./prism-t4-templating.min\": [\n\t\t\"X91X\",\n\t\t395\n\t],\n\t\"./prism-t4-templating.min.js\": [\n\t\t\"X91X\",\n\t\t395\n\t],\n\t\"./prism-t4-vb\": [\n\t\t\"yrCP\",\n\t\t396\n\t],\n\t\"./prism-t4-vb.js\": [\n\t\t\"yrCP\",\n\t\t396\n\t],\n\t\"./prism-t4-vb.min\": [\n\t\t\"9Ky/\",\n\t\t397\n\t],\n\t\"./prism-t4-vb.min.js\": [\n\t\t\"9Ky/\",\n\t\t397\n\t],\n\t\"./prism-tap\": [\n\t\t\"sVKi\",\n\t\t398\n\t],\n\t\"./prism-tap.js\": [\n\t\t\"sVKi\",\n\t\t398\n\t],\n\t\"./prism-tap.min\": [\n\t\t\"Fw3D\",\n\t\t399\n\t],\n\t\"./prism-tap.min.js\": [\n\t\t\"Fw3D\",\n\t\t399\n\t],\n\t\"./prism-tcl\": [\n\t\t\"2niF\",\n\t\t400\n\t],\n\t\"./prism-tcl.js\": [\n\t\t\"2niF\",\n\t\t400\n\t],\n\t\"./prism-tcl.min\": [\n\t\t\"parx\",\n\t\t401\n\t],\n\t\"./prism-tcl.min.js\": [\n\t\t\"parx\",\n\t\t401\n\t],\n\t\"./prism-textile\": [\n\t\t\"jOTn\",\n\t\t402\n\t],\n\t\"./prism-textile.js\": [\n\t\t\"jOTn\",\n\t\t402\n\t],\n\t\"./prism-textile.min\": [\n\t\t\"pLaT\",\n\t\t403\n\t],\n\t\"./prism-textile.min.js\": [\n\t\t\"pLaT\",\n\t\t403\n\t],\n\t\"./prism-toml\": [\n\t\t\"/uFR\",\n\t\t404\n\t],\n\t\"./prism-toml.js\": [\n\t\t\"/uFR\",\n\t\t404\n\t],\n\t\"./prism-toml.min\": [\n\t\t\"HEiz\",\n\t\t405\n\t],\n\t\"./prism-toml.min.js\": [\n\t\t\"HEiz\",\n\t\t405\n\t],\n\t\"./prism-tsx\": [\n\t\t\"pYjL\",\n\t\t406\n\t],\n\t\"./prism-tsx.js\": [\n\t\t\"pYjL\",\n\t\t406\n\t],\n\t\"./prism-tsx.min\": [\n\t\t\"5NIk\",\n\t\t407\n\t],\n\t\"./prism-tsx.min.js\": [\n\t\t\"5NIk\",\n\t\t407\n\t],\n\t\"./prism-tt2\": [\n\t\t\"yqz8\",\n\t\t408\n\t],\n\t\"./prism-tt2.js\": [\n\t\t\"yqz8\",\n\t\t408\n\t],\n\t\"./prism-tt2.min\": [\n\t\t\"LU91\",\n\t\t409\n\t],\n\t\"./prism-tt2.min.js\": [\n\t\t\"LU91\",\n\t\t409\n\t],\n\t\"./prism-turtle\": [\n\t\t\"XJAp\",\n\t\t410\n\t],\n\t\"./prism-turtle.js\": [\n\t\t\"XJAp\",\n\t\t410\n\t],\n\t\"./prism-turtle.min\": [\n\t\t\"Ol9o\",\n\t\t411\n\t],\n\t\"./prism-turtle.min.js\": [\n\t\t\"Ol9o\",\n\t\t411\n\t],\n\t\"./prism-twig\": [\n\t\t\"9KPv\",\n\t\t412\n\t],\n\t\"./prism-twig.js\": [\n\t\t\"9KPv\",\n\t\t412\n\t],\n\t\"./prism-twig.min\": [\n\t\t\"HblY\",\n\t\t413\n\t],\n\t\"./prism-twig.min.js\": [\n\t\t\"HblY\",\n\t\t413\n\t],\n\t\"./prism-typescript\": [\n\t\t\"XIHC\",\n\t\t414\n\t],\n\t\"./prism-typescript.js\": [\n\t\t\"XIHC\",\n\t\t414\n\t],\n\t\"./prism-typescript.min\": [\n\t\t\"HxFo\",\n\t\t415\n\t],\n\t\"./prism-typescript.min.js\": [\n\t\t\"HxFo\",\n\t\t415\n\t],\n\t\"./prism-unrealscript\": [\n\t\t\"WrUs\",\n\t\t416\n\t],\n\t\"./prism-unrealscript.js\": [\n\t\t\"WrUs\",\n\t\t416\n\t],\n\t\"./prism-unrealscript.min\": [\n\t\t\"aufD\",\n\t\t417\n\t],\n\t\"./prism-unrealscript.min.js\": [\n\t\t\"aufD\",\n\t\t417\n\t],\n\t\"./prism-vala\": [\n\t\t\"VMbu\",\n\t\t418\n\t],\n\t\"./prism-vala.js\": [\n\t\t\"VMbu\",\n\t\t418\n\t],\n\t\"./prism-vala.min\": [\n\t\t\"tE7E\",\n\t\t419\n\t],\n\t\"./prism-vala.min.js\": [\n\t\t\"tE7E\",\n\t\t419\n\t],\n\t\"./prism-vbnet\": [\n\t\t\"1Muh\",\n\t\t420\n\t],\n\t\"./prism-vbnet.js\": [\n\t\t\"1Muh\",\n\t\t420\n\t],\n\t\"./prism-vbnet.min\": [\n\t\t\"4x75\",\n\t\t421\n\t],\n\t\"./prism-vbnet.min.js\": [\n\t\t\"4x75\",\n\t\t421\n\t],\n\t\"./prism-velocity\": [\n\t\t\"jR7t\",\n\t\t422\n\t],\n\t\"./prism-velocity.js\": [\n\t\t\"jR7t\",\n\t\t422\n\t],\n\t\"./prism-velocity.min\": [\n\t\t\"Cakw\",\n\t\t423\n\t],\n\t\"./prism-velocity.min.js\": [\n\t\t\"Cakw\",\n\t\t423\n\t],\n\t\"./prism-verilog\": [\n\t\t\"tDuG\",\n\t\t424\n\t],\n\t\"./prism-verilog.js\": [\n\t\t\"tDuG\",\n\t\t424\n\t],\n\t\"./prism-verilog.min\": [\n\t\t\"CZ9m\",\n\t\t425\n\t],\n\t\"./prism-verilog.min.js\": [\n\t\t\"CZ9m\",\n\t\t425\n\t],\n\t\"./prism-vhdl\": [\n\t\t\"PFdE\",\n\t\t426\n\t],\n\t\"./prism-vhdl.js\": [\n\t\t\"PFdE\",\n\t\t426\n\t],\n\t\"./prism-vhdl.min\": [\n\t\t\"bFas\",\n\t\t427\n\t],\n\t\"./prism-vhdl.min.js\": [\n\t\t\"bFas\",\n\t\t427\n\t],\n\t\"./prism-vim\": [\n\t\t\"fO3x\",\n\t\t428\n\t],\n\t\"./prism-vim.js\": [\n\t\t\"fO3x\",\n\t\t428\n\t],\n\t\"./prism-vim.min\": [\n\t\t\"T54x\",\n\t\t429\n\t],\n\t\"./prism-vim.min.js\": [\n\t\t\"T54x\",\n\t\t429\n\t],\n\t\"./prism-visual-basic\": [\n\t\t\"bldZ\",\n\t\t430\n\t],\n\t\"./prism-visual-basic.js\": [\n\t\t\"bldZ\",\n\t\t430\n\t],\n\t\"./prism-visual-basic.min\": [\n\t\t\"4U82\",\n\t\t431\n\t],\n\t\"./prism-visual-basic.min.js\": [\n\t\t\"4U82\",\n\t\t431\n\t],\n\t\"./prism-warpscript\": [\n\t\t\"pweW\",\n\t\t432\n\t],\n\t\"./prism-warpscript.js\": [\n\t\t\"pweW\",\n\t\t432\n\t],\n\t\"./prism-warpscript.min\": [\n\t\t\"3WbU\",\n\t\t433\n\t],\n\t\"./prism-warpscript.min.js\": [\n\t\t\"3WbU\",\n\t\t433\n\t],\n\t\"./prism-wasm\": [\n\t\t\"ITQp\",\n\t\t434\n\t],\n\t\"./prism-wasm.js\": [\n\t\t\"ITQp\",\n\t\t434\n\t],\n\t\"./prism-wasm.min\": [\n\t\t\"5vyg\",\n\t\t435\n\t],\n\t\"./prism-wasm.min.js\": [\n\t\t\"5vyg\",\n\t\t435\n\t],\n\t\"./prism-wiki\": [\n\t\t\"oCKR\",\n\t\t436\n\t],\n\t\"./prism-wiki.js\": [\n\t\t\"oCKR\",\n\t\t436\n\t],\n\t\"./prism-wiki.min\": [\n\t\t\"y33g\",\n\t\t437\n\t],\n\t\"./prism-wiki.min.js\": [\n\t\t\"y33g\",\n\t\t437\n\t],\n\t\"./prism-xeora\": [\n\t\t\"+xhP\",\n\t\t438\n\t],\n\t\"./prism-xeora.js\": [\n\t\t\"+xhP\",\n\t\t438\n\t],\n\t\"./prism-xeora.min\": [\n\t\t\"fTM4\",\n\t\t439\n\t],\n\t\"./prism-xeora.min.js\": [\n\t\t\"fTM4\",\n\t\t439\n\t],\n\t\"./prism-xml-doc\": [\n\t\t\"YBrI\",\n\t\t440\n\t],\n\t\"./prism-xml-doc.js\": [\n\t\t\"YBrI\",\n\t\t440\n\t],\n\t\"./prism-xml-doc.min\": [\n\t\t\"ee5R\",\n\t\t441\n\t],\n\t\"./prism-xml-doc.min.js\": [\n\t\t\"ee5R\",\n\t\t441\n\t],\n\t\"./prism-xojo\": [\n\t\t\"z/kO\",\n\t\t442\n\t],\n\t\"./prism-xojo.js\": [\n\t\t\"z/kO\",\n\t\t442\n\t],\n\t\"./prism-xojo.min\": [\n\t\t\"Kwj8\",\n\t\t443\n\t],\n\t\"./prism-xojo.min.js\": [\n\t\t\"Kwj8\",\n\t\t443\n\t],\n\t\"./prism-xquery\": [\n\t\t\"+Nrv\",\n\t\t444\n\t],\n\t\"./prism-xquery.js\": [\n\t\t\"+Nrv\",\n\t\t444\n\t],\n\t\"./prism-xquery.min\": [\n\t\t\"+Qbg\",\n\t\t445\n\t],\n\t\"./prism-xquery.min.js\": [\n\t\t\"+Qbg\",\n\t\t445\n\t],\n\t\"./prism-yaml\": [\n\t\t\"RX2a\",\n\t\t446\n\t],\n\t\"./prism-yaml.js\": [\n\t\t\"RX2a\",\n\t\t446\n\t],\n\t\"./prism-yaml.min\": [\n\t\t\"zSud\",\n\t\t447\n\t],\n\t\"./prism-yaml.min.js\": [\n\t\t\"zSud\",\n\t\t447\n\t],\n\t\"./prism-yang\": [\n\t\t\"+TXG\",\n\t\t448\n\t],\n\t\"./prism-yang.js\": [\n\t\t\"+TXG\",\n\t\t448\n\t],\n\t\"./prism-yang.min\": [\n\t\t\"5s8B\",\n\t\t449\n\t],\n\t\"./prism-yang.min.js\": [\n\t\t\"5s8B\",\n\t\t449\n\t],\n\t\"./prism-zig\": [\n\t\t\"/Ab6\",\n\t\t450\n\t],\n\t\"./prism-zig.js\": [\n\t\t\"/Ab6\",\n\t\t450\n\t],\n\t\"./prism-zig.min\": [\n\t\t\"mj6M\",\n\t\t451\n\t],\n\t\"./prism-zig.min.js\": [\n\t\t\"mj6M\",\n\t\t451\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"VUyG\";\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}